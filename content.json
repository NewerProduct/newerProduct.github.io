[{"title":"JavaWeb开发学习","date":"2024-05-02T09:41:21.000Z","path":"2024/05/02/JavaWeb开发学习/","content":"<h1 id=\"Chapter-一\"><a href=\"#Chapter-一\" class=\"headerlink\" title=\"Chapter(一)\"></a>Chapter(一)</h1><h2 id=\"1-HTML笔记\"><a href=\"#1-HTML笔记\" class=\"headerlink\" title=\"(1)HTML笔记\"></a>(1)HTML笔记</h2><ul>\n<li>HTML大致格式：</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">HTML</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>标题<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        内容</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">HTML</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>1.超链接<br>标签:<a><br>属性:<br>    <strong>href</strong>:指定资源访问的url**<br>    <strong>target:指定在何处打开资源链接</strong><br>    <strong>self:默认值，在当前页面打开</strong><br>    <strong>blank:在空白页面打开</strong></a></p>\n</li>\n<li><p>视频标签:<video></video></p>\n<ul>\n<li><strong>src:规定视频的ur1</strong></li>\n<li><strong>controls:显示播放控件</strong></li>\n<li><strong>width:播放器的宽度</strong></li>\n<li><strong>height:播放器的高度</strong></li>\n<li><strong>音频标签:<audio></audio></strong></li>\n<li><strong>src:规定音频的url</strong></li>\n<li><strong>controls:显示播放控件</strong></li>\n</ul>\n</li>\n<li><p>段落标签:</p><p></p>\n</li>\n<li><p>文本加粗标签：<b> &#x2F; <strong></strong></b></p>\n</li>\n<li><p>盒子(div)</p>\n<ul>\n<li>盒子:页面中所有的元素(标签)，<br>都可以看做是一个 盒子，由盒子将页面中的元素包含在一个矩形区域内，通过盒子的视角更方便的进行页面布局</li>\n<li>盒子模型组成:<strong>内容区域(content)</strong><br><strong>边框区域(border)、外边距区域(margin)</strong><br><strong>、内边距区域(padding)</strong></li>\n</ul>\n</li>\n<li><p>span标签:<strong>一行可以显示多个，宽度和高度默认由内容撑开，不可以设置宽高(width、height)。</strong></p>\n</li>\n<li><p>表格：</p>\n<ul>\n<li>标签：<table>，属性border：规定表格边框的宽度，width：规定表格的宽度，cellspacing：规定单元之间的空间</table></li>\n<li><tr>：表格的行，可以包裹多个<td></td></tr></li>\n<li><td>：表格的单元格(普通)，可以包裹内容，如果是表头单元格可以用标签<th></th></td></li>\n</ul>\n</li>\n<li><p>表单标签：<form></form></p>\n<ul>\n<li><p>应用场景：数据的采集功能，如注册、登录等数据采集</p>\n</li>\n<li><p>表单项：</p>\n<ul>\n<li><p><input>：定义表单项，通过type属性控制输入的形式</p>\n</li>\n<li><p><select>：定义下拉列表，<option>定义列表选项</option></select></p>\n</li>\n<li><textarea>：定义文本区域\n</textarea></li>\n</ul>\n</li>\n<li><p>表单属性</p>\n<ul>\n<li>action：规定当提交表单时向何处发送表单数据，URL</li>\n<li>method：规定用于发送表单数据的方式。GET、POST</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>​\t\t</p>\n<p><strong>form表单属性:</strong></p>\n<p><strong><label>标签有聚焦的作用</label></strong></p>\n<p><strong>action：表单提交的ur1，往何处提交数据，如果不指定，默认提交到当前页面</strong><br><strong>method：表单的提交方式</strong><br><strong>get：在ur1后面拼接表单数据，比如:?username&#x3D;Tom&amp;age&#x3D;12，url长度有限制 。默认值</strong><br><strong>post：在消息体(请求体)中传递的，参数大小无限制的</strong></p>\n<p>表单标签——表单项</p>\n<p><img src=\"/2024/05/02/JavaWeb%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/image-20240503143408361-1714718055325-1-1714718064241-3.png\" alt=\"image-20240503143408361\"></p>\n<h2 id=\"2-JavaScript笔记\"><a href=\"#2-JavaScript笔记\" class=\"headerlink\" title=\"(2)JavaScript笔记\"></a>(2)JavaScript笔记</h2><h3 id=\"1）JS引入方式\"><a href=\"#1）JS引入方式\" class=\"headerlink\" title=\"1）JS引入方式\"></a>1）JS引入方式</h3><p><strong>JS的引入方式有两种：</strong></p>\n<ul>\n<li><p>内部脚本：将JS代码定义在HTML页面中</p>\n<ul>\n<li>JavaScript代码必须位于<script>标签内</li>\n<li>在HTML文档中，可以再任意地方 ，放置任意数量的<script></li>\n<li>一般会把脚本置于<body>元素的底部，可以改善显示速度</li>\n</ul>\n</li>\n<li><p>外部脚本：将JS代码定义在外部JS文件中，然后引入到HTML页面中</p>\n<ul>\n<li><p>外部JS文件中，只包含JS代码，不包含<script>标签</p>\n</li>\n<li><script>标签不能自闭合，也就是不能写成这样：<script/></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/./JavaWeb%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/image-20240503145115827.png\" alt=\"image-20240503145115827\"></p>\n<h3 id=\"2）JS基础语法\"><a href=\"#2）JS基础语法\" class=\"headerlink\" title=\"2）JS基础语法\"></a>2）JS基础语法</h3><h4 id=\"1、书写语法\"><a href=\"#1、书写语法\" class=\"headerlink\" title=\"1、书写语法\"></a>1、书写语法</h4><ul>\n<li><p>区分大小写：与java一样，变量名、函数名以及其他一切东西都是区分大小写的</p>\n</li>\n<li><p>每行结尾的分号可有可无</p>\n</li>\n<li><p>注释：</p>\n<ul>\n<li>单行注释：//注释内容</li>\n<li>多行注释：/<em>注释内容</em> */</li>\n</ul>\n</li>\n<li><p>大括号代表代码块：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//判断</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(count == <span class=\"number\">3</span>)&#123;</span><br><span class=\"line\"><span class=\"title function_\">alert</span>(count);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"输出语句\"><a href=\"#输出语句\" class=\"headerlink\" title=\"输出语句\"></a>输出语句</h5><pre><code>* 使用**window.alert()**写入警告框\n* 使用**document.write()**写入HTML输出\n* 使用**console.log()**写入浏览器控制台\n</code></pre>\n<p><img src=\"/./JavaWeb%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/image-20240503151224544.png\" alt=\"image-20240503151224544\"></p>\n<h4 id=\"2、变量\"><a href=\"#2、变量\" class=\"headerlink\" title=\"2、变量\"></a>2、变量</h4><ul>\n<li><p><strong>JavaScript</strong> 中用 <strong>var</strong>关键字(<strong>variable</strong> 的缩写)来声明变量。</p>\n<p><strong>var</strong>的特点：</p>\n<ul>\n<li>作用域比较大，全局变量。</li>\n<li>可以重复定义同一个变量。相当于一个覆盖</li>\n</ul>\n</li>\n<li><p><strong>JavaScript</strong> 是一门弱类型语言，变量<strong>可以存放不同类型的值</strong>。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> a = <span class=\"string\">&quot;张三&quot;</span>;<span class=\"comment\">//定义a的值是字符串张三</span></span><br><span class=\"line\">a = <span class=\"number\">20</span><span class=\"comment\">//把值20赋值给a</span></span><br><span class=\"line\"><span class=\"title function_\">alert</span>(a)<span class=\"comment\">//输出20</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>变量名需要遵循如下规则:</p>\n<ul>\n<li>组成字符可以是任何字母、数字、下划线(_)或美元符号($)</li>\n<li>数字不能开头</li>\n<li>建议使用驼峰命名(如<strong>userName</strong>)</li>\n</ul>\n</li>\n<li><p><strong>let</strong> 关键字来定义变量。它的用法类似于 var，但是所声明的变量，只在let 关键字所在的代码块内有效，且不允许重复声明。</p>\n</li>\n<li><p><strong>const</strong> 关键字，用来声明一个只读的常量。一旦声明，常量的值就不能改变。</p>\n</li>\n</ul>\n<h4 id=\"3、数据类型\"><a href=\"#3、数据类型\" class=\"headerlink\" title=\"3、数据类型\"></a>3、数据类型</h4><ul>\n<li>JS中分为：<strong>原始类型</strong>和<strong>引用类型</strong>。</li>\n</ul>\n<h5 id=\"原始类型\"><a href=\"#原始类型\" class=\"headerlink\" title=\"原始类型\"></a>原始类型</h5><p><img src=\"/./JavaWeb%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/image-20240503153618200.png\" alt=\"image-20240503153618200\"></p>\n<h5 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h5><ul>\n<li><p>算术运算符:+，-，*，/，%，++，--</p>\n</li>\n<li><p>赋值运算符:=，+=，-=，，/=,%=</p>\n</li>\n<li><p>比较运算符:>，<，>=，<=，!=，==，**===**</p>\n<p>==与===</p>\n<ul>\n<li>==会进行类型转换，===不会进行类型转换。</li>\n</ul>\n</li>\n<li><p>逻辑运算符:&&，||，!</p>\n</li>\n<li><p>三元运算符:条件表达式?true_value:false value</p>\n</li>\n</ul>\n<p>类型转换：</p>\n<ul>\n<li><p>字符串类型转为数字：</p>\n<ul>\n<li><p>paseInt方法：<strong>这个方法能够将字符串转为数字，原理是从字符串左边开始读取，读取到不是数字的地方(如12A45他会读取到A这个为止而停下来)停下来，取该位置前面的输出。</strong></p>\n<pre><code>alert(parseInt(&quot;12&quot;));//转为12\nalert(parseInt(&quot;12A45&quot;));//转为12\nalert(parseInt(&quot;A45&quot;));//转为NaN(not a number)\n</code></pre>\n</li>\n</ul>\n</li>\n<li><p>其他类型转为boolean：</p>\n<ul>\n<li>Number类型：0和NaN转为false，其他均转为true。</li>\n<li>String类型：空字符串转为false，其他 均转为true。</li>\n<li>Null类型和undefined类型：均转为false。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"4、流程控制\"><a href=\"#4、流程控制\" class=\"headerlink\" title=\"4、流程控制\"></a>4、流程控制</h4><ul>\n<li><p>if...else if ....else....</p>\n</li>\n<li><p>switch</p>\n</li>\n<li><p>for</p>\n</li>\n<li><p>while</p>\n</li>\n<li><p>do...while</p>\n<p>值得注意的是，<strong>在JS中这些流程控制语句和我们的java是完全一致的。</strong></p>\n</li>\n</ul>\n<h3 id=\"3）JS函数\"><a href=\"#3）JS函数\" class=\"headerlink\" title=\"3）JS函数\"></a>3）JS函数</h3><h4 id=\"1、函数的定义\"><a href=\"#1、函数的定义\" class=\"headerlink\" title=\"1、函数的定义\"></a>1、函数的定义</h4><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">functionName</span>(<span class=\"params\">参数<span class=\"number\">1</span>，参数<span class=\"number\">2.</span>..</span>)&#123;</span><br><span class=\"line\"><span class=\"comment\">//要执行的代码</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//另一种方式调用</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> functionName = <span class=\"keyword\">function</span>(<span class=\"params\">参数<span class=\"number\">1</span>，参数<span class=\"number\">2.</span>..</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//要执行的代码</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>注意<ul>\n<li>形式参数不需要类型。因为JS是弱类型语言。</li>\n<li>返回值类型也不需要定义，可以再函数内部直接使用return返回即可。</li>\n</ul>\n</li>\n<li>调用：函数名称(实际参数列表)</li>\n</ul>\n<h3 id=\"4）JS对象\"><a href=\"#4）JS对象\" class=\"headerlink\" title=\"4）JS对象\"></a>4）JS对象</h3><h5 id=\"Array-数组对象\"><a href=\"#Array-数组对象\" class=\"headerlink\" title=\"Array(数组对象)\"></a>Array(数组对象)</h5><ul>\n<li><p>定义：var 变量名 = new Array(元素列表)；或者var 变量名= [元素列表];</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//定义数组</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> arr1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//或者var arr1 = [1,2,3,4,5]</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//访问元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr1[<span class=\"number\">0</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr1[<span class=\"number\">1</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"comment\">//特点：长度可变，类型可变</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"keyword\">var</span> arr = <span class=\"keyword\">new</span> <span class=\"title class_\">Array</span>(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">   arr[<span class=\"number\">10</span>] = <span class=\"number\">50</span>; </span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr[<span class=\"number\">10</span>]);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">   arr[<span class=\"number\">9</span>] = <span class=\"string\">&quot;zhangsan&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">   arr[<span class=\"number\">8</span>] = <span class=\"literal\">true</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//数组的遍历,遍历所有的元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; arr.<span class=\"property\">length</span>; i++) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"keyword\">const</span> element = arr[i];</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(element);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;=========================&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//数组的遍历(foreach):遍历数组中有值的元素</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    arr.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">element</span> =&gt;</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(element);</span></span><br><span class=\"line\"><span class=\"language-javascript\">        <span class=\"comment\">//ES6 箭头函数：(形参列表...) =&gt;&#123;函数体的内容&#125;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//push方法：添加元素到数组末尾</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    arr.<span class=\"title function_\">push</span>(<span class=\"string\">&quot;添加测试1&quot;</span>,<span class=\"string\">&quot;添加测试2&quot;</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(arr);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//删除元素splice方法:(从某个索引位置开始删除,删除元素的个数)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    arr.<span class=\"title function_\">splice</span>(<span class=\"number\">11</span>,<span class=\"number\">2</span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h5 id=\"String对象\"><a href=\"#String对象\" class=\"headerlink\" title=\"String对象\"></a>String对象</h5><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//String对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//方式一：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> stringTest = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&quot;zhangsan&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//方式二：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> stringTest1 =<span class=\"string\">&quot;lisi&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>String对象的<strong>属性</strong>和<strong>方法</strong></p>\n<p><img src=\"/./JavaWeb%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/image-20240503165308862.png\" alt=\"image-20240503165308862\"></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//String对象</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//方式一：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// var stringTest = new String(&quot;zhangsan&quot;);</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//方式二：</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> stringTest1 =<span class=\"string\">&quot;  Hello World  &quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//获取字符串长度</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(stringTest1.<span class=\"property\">length</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//chAt方法,返回指定位置的字符</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(stringTest1.<span class=\"title function_\">charAt</span>(<span class=\"number\">2</span>));<span class=\"comment\">//H</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//indexOf方法，查询对应字符的索引</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(stringTest1.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;H&quot;</span>)); <span class=\"comment\">//2</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//trim方法(去除空格)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> newString = stringTest1.<span class=\"title function_\">trim</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(newString);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//substring方法，截取字符串，(前闭后开)输入两个值，开始索引和结束索引</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//这里演示截取去除空格后的字符串，将Hello截取出来</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(newString.<span class=\"title function_\">substring</span>(<span class=\"number\">0</span>,<span class=\"number\">5</span>));<span class=\"comment\">//Hello</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"json对象\"><a href=\"#json对象\" class=\"headerlink\" title=\"json对象\"></a>json对象</h5><ul>\n<li><p>概念: <strong>JavaScript Object Notation，JavaScript</strong>，对象标记法</p>\n</li>\n<li><p>JSON 是通过JavaScript 对象标记法书写的文本。</p>\n</li>\n<li><p>由于其语法简单，层次结构鲜明，现多用于作为<strong>数据载体</strong>，在网络中进行数据传输。</p>\n</li>\n</ul>\n<p>数据格式：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;name&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;xiaoli&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;age&quot;</span><span class=\"punctuation\">:</span><span class=\"number\">25</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;sex&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;男性&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;key1&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;value1&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/./JavaWeb%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/image-20240503172509557.png\" alt=\"image-20240503172509557\"></p>\n<p>定义json案例</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"comment\">//定义json</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> jsonStr = <span class=\"string\">&#x27;&#123;&quot;name&quot; = &quot;小李&quot;,&quot;age&quot; = 25, &quot;address&quot; = &quot;北京&quot; &#125;&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//JSON字符串转为JS对象——JSON.parse()方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> jsonStrObject = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(jsonStr);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(jsonStrObject);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//JS对象转为JS字符串——JSON.stringify()方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span>  jsObject = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(jsonStrObject);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(jsObject);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"BOM对象\"><a href=\"#BOM对象\" class=\"headerlink\" title=\"BOM对象\"></a>BOM对象</h5><ul>\n<li>概念:<strong>Browser Object Model</strong> 浏览器对象模型，允许lavaScript与浏览器对话，lavaScript 将浏览器的各个组成部分封装为<strong>对象</strong>。</li>\n</ul>\n<h6 id=\"Window对象\"><a href=\"#Window对象\" class=\"headerlink\" title=\"Window对象\"></a>Window对象</h6><ul>\n<li>介绍:浏览器窗口对象。</li>\n<li>获取:直接使用window，其中 window.可以省略<strong>window.alert()和alert()效果一样</strong></li>\n<li>属性<ul>\n<li>history:对 History 对象的只读引用。请参阅 History 对象</li>\n<li>location:用于窗口或框架的 Location 对象。请参阅Location 对象。</li>\n<li>navigator:对 Navigator 对象的只读引用。请参阅Navigator 对象</li>\n</ul>\n</li>\n<li>方法<ul>\n<li><strong>alert()</strong>:显示带有一段消息和一个确认按钮的警告框。</li>\n<li><strong>confirm()</strong>:显示带有一段消息以及确认按钮和取消按钮的对话。</li>\n<li>**setlnterval():**按照指定的周期(以毫秒计)来调用函数或计算表达式。</li>\n<li><strong>setTimeout()</strong>:在指定的毫秒数后调用函数或计算表达式。</li>\n</ul>\n</li>\n</ul>\n<p>示例代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//获取</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">window</span>.<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;Hello BOM&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;Hello BoM window&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 方法</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// confirm-对话框--确认:true ，取消:false</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> flag = <span class=\"title function_\">confirm</span>(<span class=\"string\">&quot;您确认删除该记录吗?&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(flag);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">// 定时器-setInterval -- 周期性的执行某一个函数</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"built_in\">setInterval</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">        i++;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;定时器执行了&quot;</span>+i+<span class=\"string\">&quot;次&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,<span class=\"number\">2000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//定时器延迟指定时间执行一次:-setTimeout </span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">alert</span>(<span class=\"string\">&quot;Js&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;,<span class=\"number\">3000</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"Location对象\"><a href=\"#Location对象\" class=\"headerlink\" title=\"Location对象\"></a>Location对象</h6><ul>\n<li><p>介绍：地址栏对象。</p>\n</li>\n<li><p>获取：使用window.location获取，其中window.可以省略不写</p>\n</li>\n<li><p>属性：</p>\n<ul>\n<li><p>href：设置或返回完整的URL，如果设置URL那么他会自动跳转所设置的URL。</p>\n<p>代码示例：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//获取当前完整的URL</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(location.<span class=\"property\">href</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//设置URL自动跳转</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    location.<span class=\"property\">href</span>=<span class=\"string\">&quot;http://www.itcast.cn&quot;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h5 id=\"DOM对象\"><a href=\"#DOM对象\" class=\"headerlink\" title=\"DOM对象\"></a>DOM对象</h5><ul>\n<li><p>概念:<strong>Document Object Model</strong>，文档对象模型。</p>\n</li>\n<li><p>将标记语言的各个组成部分封装为对应的对象：</p>\n<ul>\n<li>Document：整个文档对象</li>\n<li>Element：元素对象</li>\n<li>Attribute：属性对象</li>\n<li>Text：文本对象</li>\n<li>Comment：注释对象</li>\n</ul>\n</li>\n<li><p>JavaScript 通过DOM，就能够对HTML进行如下操作：</p>\n<ul>\n<li>改变 HTML元素的内容</li>\n<li>改变 HTML元素的样式(CSS)</li>\n<li>对 HTML DOM 事件作出反应</li>\n<li>添加和删除 HTML元素</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/./JavaWeb%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/image-20240503180943024.png\" alt=\"image-20240503180943024\"></p>\n<h3 id=\"5）JS事件监听\"><a href=\"#5）JS事件监听\" class=\"headerlink\" title=\"5）JS事件监听\"></a>5）JS事件监听</h3><ul>\n<li>事件:HTML事件是发生在HTML元素上的“事情”。比如:<ul>\n<li>按钮被点击</li>\n<li>鼠标移动到元素上</li>\n<li>按下键盘按键</li>\n</ul>\n</li>\n<li>事件监听:JavaScript可以在事件被侦测到时 执行代码。</li>\n</ul>\n<h4 id=\"事件绑定\"><a href=\"#事件绑定\" class=\"headerlink\" title=\"事件绑定\"></a>事件绑定</h4><ul>\n<li><p>方式一：通过HTML标签中的时间属性进行绑定</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;on()&quot;</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;按钮1&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">\tfunction on()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\talert(&#x27;我被点击了!);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>方式二：通过DOM元素属性绑定</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span> = <span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">id</span> =<span class=\"string\">&quot;btn1&quot;</span> <span class=\"attr\">value</span> = <span class=\"string\">&quot;按钮2&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;btn1&quot;</span>).<span class=\"property\">onclick</span> = \t\t\t<span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    \t<span class=\"title function_\">alert</span>(<span class=\"string\">&quot;我被点击了！&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h4 id=\"常见事件\"><a href=\"#常见事件\" class=\"headerlink\" title=\"常见事件\"></a>常见事件</h4><p><img src=\"/./JavaWeb%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0/image-20240503184235985.png\" alt=\"image-20240503184235985\"></p>\n</script></li></ul></li></ul>","categories":[],"tags":[{"name":"JavaWeb","slug":"JavaWeb","permalink":"http://example.com/tags/JavaWeb/"}]},{"title":"Java练习题","date":"2024-04-25T04:48:53.000Z","path":"2024/04/25/Java练习题/","content":"<h1 id=\"题-1-：最简单的四舍五入\"><a href=\"#题-1-：最简单的四舍五入\" class=\"headerlink\" title=\"题(1)：最简单的四舍五入\"></a>题(1)：最简单的四舍五入</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123; </span><br><span class=\"line\">  \t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">Scanner</span> <span class=\"variable\">scanner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in); <span class=\"type\">double</span>     d= scanner.nextDouble();</span><br><span class=\"line\">\t<span class=\"comment\">//write your code here......</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> (<span class=\"type\">int</span>)(d+<span class=\"number\">0.5</span>);</span><br><span class=\"line\">    System.out.println(i);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":[],"tags":[{"name":"练习题，面试题","slug":"练习题，面试题","permalink":"http://example.com/tags/%E7%BB%83%E4%B9%A0%E9%A2%98%EF%BC%8C%E9%9D%A2%E8%AF%95%E9%A2%98/"}]},{"title":"Java学习笔记","date":"2024-04-08T06:56:32.000Z","path":"2024/04/08/Java学习笔记/","content":"<h1 id=\"1、如何拿到用户的输入\"><a href=\"#1、如何拿到用户的输入\" class=\"headerlink\" title=\"1、如何拿到用户的输入\"></a>1、如何拿到用户的输入</h1><p>有时候的一些业务是需要用户和系统互动的，这时，我们就需要来接收用户的互动，在java中，通常这么做</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//新建一个扫描器对象sc</span></span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\"><span class=\"comment\">//定义一个变量来接收用户输入，类型要看你接受的是字符串还是数据而变动</span></span><br><span class=\"line\">数据类型 变量 = sc.nextInt();</span><br></pre></td></tr></table></figure>\n\n<p>举个例子，比如我下面这段代码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;请您输出查询的id&quot;</span>);</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> sc.nextInt();</span><br><span class=\"line\">operator.searchMovieById(id);</span><br></pre></td></tr></table></figure>\n\n<p>很好理解，接收用户输入的数字id然后把他传给<code>operator.searchMovieById(id);</code>方法完成代码逻辑。</p>\n<h1 id=\"2、this关键字\"><a href=\"#2、this关键字\" class=\"headerlink\" title=\"2、this关键字\"></a>2、this关键字</h1><p>在java中this关键字的作用是:</p>\n<ul>\n<li><p><code>this</code>就是一个变量，可以用在方法中，用来拿到当前对象；哪个对象调用方法，this就指向那个对象，也就是拿到那个对象</p>\n</li>\n<li><p>用来解决对象的成员变量与方法内部变量的名称一样时，导致访问冲突问题的</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> Movie[] movies;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">MovieOperator</span><span class=\"params\">(Movie[] movies)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.movies = movies;</span><br></pre></td></tr></table></figure>\n\n<p>如果写成<code>movies = movies</code> 这时就会报错，让idea觉得你这是在该函数内部自己赋值给自己，显然不成立，如果加上this就会被识别为是<code>Movie[ ]</code> 的对象<code>movies</code>。</p>\n<h1 id=\"3、常用API-应用程序编程接口\"><a href=\"#3、常用API-应用程序编程接口\" class=\"headerlink\" title=\"3、常用API(应用程序编程接口)\"></a>3、常用API(应用程序编程接口)</h1><h2 id=\"1-、String创建对象封装字符串数据的方式\"><a href=\"#1-、String创建对象封装字符串数据的方式\" class=\"headerlink\" title=\"(1)、String创建对象封装字符串数据的方式*\"></a>(1)、String创建对象封装字符串数据的方式*</h2><ul>\n<li>方式一:</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;小黑&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">schoolName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;黑马程序员&quot;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>方式二：调用String类的构造器初始化字符串对象</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">String</span><span class=\"params\">()</span> <span class=\"comment\">//创建一个空白字符串对象，不含有任何内容</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">String</span><span class=\"params\">(String original)</span> <span class=\"comment\">// 根据传入的字符串内容，来创建字符串对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">String</span><span class=\"params\">(<span class=\"type\">char</span>[] chars)</span><span class=\"comment\">// 根据字符数组的内容，来创建字符串对象</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">String</span><span class=\"params\">(<span class=\"type\">byte</span>[] bytes)</span> <span class=\"comment\">//根据字节数组的内容，来创建字符串对象</span></span><br></pre></td></tr></table></figure>\n\n<p>(2)有关字符串的一些方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查询字符串长度(字符个数)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">length</span><span class=\"params\">()</span></span><br><span class=\"line\"><span class=\"comment\">//获取某个索引位置处的字符返回</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">char</span> <span class=\"title function_\">charAt</span><span class=\"params\">(<span class=\"type\">int</span> index)</span></span><br><span class=\"line\"> <span class=\"comment\">//将当前字符串转换成字符数组返回</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">char</span>[] toCharArray():</span><br><span class=\"line\"><span class=\"comment\">//判断当前字符串与另一个字符串的内容一样，一样返回true</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equals</span><span class=\"params\">(object anobject)</span></span><br><span class=\"line\"> <span class=\"comment\">//判断当前字符串与另一个字符串的内容是否一样(忽略大小写)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equalsIgnoreCase</span><span class=\"params\">(String anotherString)</span></span><br><span class=\"line\">  <span class=\"comment\">//根据开始和结束索引进行截取，得到新的字符串(包前不包后)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">substring</span><span class=\"params\">(<span class=\"type\">int</span> beginIndex, <span class=\"type\">int</span> endIndex)</span></span><br><span class=\"line\">  <span class=\"comment\">//从传入的索引处截取，截取到末尾，得到新的字符串返回</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">substring</span><span class=\"params\">(<span class=\"type\">int</span> beginIndex)</span></span><br><span class=\"line\"><span class=\"comment\">//使用新值，将字符串中的旧值替换，得到新的字符串</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">replace</span><span class=\"params\">(CharSequence target,CharSequence replacement)</span></span><br><span class=\"line\"> <span class=\"comment\">////判断字符串中是否包含了某个字符串</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">contains</span><span class=\"params\">(Charsequence s)</span></span><br><span class=\"line\"><span class=\"comment\">//判断字符串是否以某个字符串内容开头，开头返回true，反之返回false</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">startsWith</span><span class=\"params\">(String prefix)</span></span><br><span class=\"line\"><span class=\"comment\">//判断字符串是否以某个字符串内容结尾，结尾返回true，反之返回false</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">startsWith</span><span class=\"params\">(String prefix)</span></span><br><span class=\"line\"><span class=\"comment\">//把字符串按照某个字符串内容分割，并返回字符串数组回来</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> String[] split(String regex)</span><br><span class=\"line\"><span class=\"comment\">//indexOf用于获取数据在字符串中第一次出现的位置</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;world hello hello world hello&quot;</span></span><br><span class=\"line\">s.indexOf(<span class=\"string\">&quot;world&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//lastIndexOf用于获取数据在字符串中最后一次出现的位置</span></span><br><span class=\"line\">s.lastIndexOf(<span class=\"string\">&quot;hello&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>（3）字符串进行比较有哪些需要注意的？</p>\n<p>1、字符串的比较使用<code>==</code>比较好吗?为什么?什么时候使用<code>==</code>?</p>\n<ul>\n<li>不好，对于字符串对象的比较，&#x3D;&#x3D;比较的是地址，容易出业务bug</li>\n<li>基本数据类型的变量或者值应该使用&#x3D;&#x3D;比较。</li>\n</ul>\n<p>2、开发中比较字符串推荐使用什么方式比较?<br>使用<code>String</code>提供的<code>equals</code>方法，它只关心字符串内容一样就返回true，</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法名</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equals</span><span class=\"params\">(object anobject)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equalsIgnoreCase</span><span class=\"params\">(String anotherstring)</span></span><br></pre></td></tr></table></figure>\n\n<p>(4)随机产生验证码(使用字符串方式)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.StringController;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Random;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//随机产生验证码</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">StringDemo2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(randomCode(<span class=\"number\">4</span>));</span><br><span class=\"line\">        System.out.println(randomCode(<span class=\"number\">5</span>));</span><br><span class=\"line\">        System.out.println(randomCode(<span class=\"number\">6</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">randomCode</span><span class=\"params\">(<span class=\"type\">int</span> tempCode)</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">Random</span> <span class=\"variable\">r</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Random</span>();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">code</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">data</span> <span class=\"operator\">=</span><span class=\"string\">&quot;abcdefghijklmnopqrstuVWXyZABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//我们需要5位验证码调用for循环</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; tempCode; i++) &#123;</span><br><span class=\"line\">          <span class=\"type\">int</span> <span class=\"variable\">j</span>  <span class=\"operator\">=</span> r.nextInt(data.length());</span><br><span class=\"line\">          <span class=\"comment\">//将字符交给code</span></span><br><span class=\"line\">         code += data.charAt(j);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>(5)两种方式的区别</p>\n<ul>\n<li><code>双引号给出的字符串对象，存在于堆内存中的常量池中，相同内容只会存储一份。</code></li>\n<li><code>new 字符串对象，每new一次都会在堆内存中产生一个字符串对象。</code></li>\n</ul>\n<h3 id=\"2）字符串大小写转换\"><a href=\"#2）字符串大小写转换\" class=\"headerlink\" title=\"2）字符串大小写转换\"></a>2）字符串大小写转换</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span><span class=\"string\">&quot;Hello,World&quot;</span></span><br><span class=\"line\"><span class=\"comment\">//字符串变小写</span></span><br><span class=\"line\">s.toLowerCase()</span><br><span class=\"line\"><span class=\"comment\">//字符串变大写</span></span><br><span class=\"line\">s.toUpperCase()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3）StringBuilder方法\"><a href=\"#3）StringBuilder方法\" class=\"headerlink\" title=\"3）StringBuilder方法\"></a>3）StringBuilder方法</h3><p>java提供的一种对字符串进行拼接，反转的快捷类</p>\n<p>使用实例：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">StringBuilder</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\"><span class=\"comment\">//拼接字符串</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">      s.append(i);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">System.out.println(s);</span><br><span class=\"line\"><span class=\"comment\">//反转字符串</span></span><br><span class=\"line\">s.reverse();</span><br><span class=\"line\"><span class=\"comment\">//在字符串指定位置插入</span></span><br><span class=\"line\">s.insert(<span class=\"number\">1</span>,<span class=\"string\">&quot;abc&quot;</span>);</span><br><span class=\"line\">System.out.println(s.toString());</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2、ArrayList集合概述\"><a href=\"#2、ArrayList集合概述\" class=\"headerlink\" title=\"2、ArrayList集合概述\"></a>2、ArrayList集合概述</h2><p>1.怎么学？</p>\n<ul>\n<li><p>arrayList会提供创建容器对象的方式</p>\n</li>\n<li><p>会提供相应方法对容器进行操作</p>\n<p>增 删 改 查</p>\n</li>\n</ul>\n<p>创建对象 &#x3D;&#x3D;&#x3D;&#x3D;&gt; 添加增删改查方法 &#x3D;&#x3D;&#x3D;&#x3D;&gt; 了解集合特点</p>\n<p>2.ArrayList常用方法</p>\n<p>构造器</p>\n<p>ArrayList<E><br>是用的最多、最常见的一种集合。</E></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建一个空的集合对象</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">ArrayList</span><span class=\"params\">()</span></span><br><span class=\"line\">    <span class=\"comment\">//存储任意数据类型</span></span><br><span class=\"line\">    <span class=\"type\">ArrayList</span> <span class=\"variable\">list</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>();</span><br><span class=\"line\">    <span class=\"comment\">/** 也可以这么写 */</span></span><br><span class=\"line\">    Array&lt;Object&gt; list = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>();</span><br><span class=\"line\">    </span><br></pre></td></tr></table></figure>\n\n<p>常用方法名</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//将指定的元素添加到此集合的末尾</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">add</span><span class=\"params\">(E e)</span></span><br><span class=\"line\">    <span class=\"comment\">//在此集合中的指定位置插入指定的元素</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(<span class=\"type\">int</span> index,E element)</span></span><br><span class=\"line\">    <span class=\"comment\">//返回指定索引处的元素</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> E <span class=\"title function_\">get</span><span class=\"params\">(<span class=\"type\">int</span> index)</span></span><br><span class=\"line\">    <span class=\"comment\">//返回集合中的元素的个数</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">size</span><span class=\"params\">()</span></span><br><span class=\"line\">    <span class=\"comment\">//删除指定索引处的元素，返回被删除的元素</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> E <span class=\"title function_\">remove</span><span class=\"params\">(<span class=\"type\">int</span> index)</span></span><br><span class=\"line\">    <span class=\"comment\">//删除指定的元素，返回删除是否成功</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">remove</span><span class=\"params\">(Object o)</span></span><br><span class=\"line\">    <span class=\"comment\">//修改指定索引处的元素，返回被修改的元素</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> E <span class=\"title function_\">set</span><span class=\"params\">(<span class=\"type\">int</span> index,E element)</span></span><br></pre></td></tr></table></figure>\n\n<p>3.从集合中遍历元素，并筛选出元素删除它，应该如何操作才能不出bug?<br><code>方式一:每次删除一个数据后，索引-1。</code></p>\n<p><code>方式二:从集合后面遍历然后删除，可以避免漏掉元素。</code></p>\n<h3 id=\"1-集合中常用的接口\"><a href=\"#1-集合中常用的接口\" class=\"headerlink\" title=\"(1) 集合中常用的接口\"></a>(1) 集合中常用的接口</h3><p>1.Collection接口(面对单一的数据处理)</p>\n<p>常用子接口：List，Set，Queue</p>\n<p>List：按照 插入顺序保存数据，数据可以重复</p>\n<p>具体实现类：ArrayList，LinkedList</p>\n<p>Set：集，无序保存，数据不能重复</p>\n<p>具体实现类：HashSet(面对K-V键值对的数据处理)</p>\n<p>Queue：队列</p>\n<p>具体实现类：ArrayBlockingQueue</p>\n<p>1.Map接口</p>\n<p>具体实现类：hashMap，HashTable</p>\n<h3 id=\"（2）ArrayList\"><a href=\"#（2）ArrayList\" class=\"headerlink\" title=\"（2）ArrayList\"></a>（2）ArrayList</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestList</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//ArrayList:Array + List</span></span><br><span class=\"line\">        <span class=\"comment\">// TODO List:列表，清单</span></span><br><span class=\"line\">        <span class=\"comment\">//      按照数据插入顺序进行存储</span></span><br><span class=\"line\">        <span class=\"type\">ArrayList</span> <span class=\"variable\">list</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>();</span><br><span class=\"line\">        <span class=\"type\">ArrayList</span> <span class=\"variable\">list1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>();</span><br><span class=\"line\">        list1.add(<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">        list1.add(<span class=\"string\">&quot;2&quot;</span>);</span><br><span class=\"line\">        list1.add(<span class=\"string\">&quot;3&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//创建集合对象</span></span><br><span class=\"line\">        <span class=\"comment\">//1.不需要传入参数，底层数组为空数组</span></span><br><span class=\"line\">        <span class=\"comment\">//2.构造参数需要传递一个int类型的值，设置底层数组的长度</span></span><br><span class=\"line\">        <span class=\"comment\">//3.构造参数需要传递一个Collection集合类型的值，用于将其他集合中的数据放置在当前集合中</span></span><br><span class=\"line\">        <span class=\"comment\">// TODO 增加数据</span></span><br><span class=\"line\">        <span class=\"comment\">//   add方法添加数据时，只要将数据作为参数传递到add方法即可</span></span><br><span class=\"line\">        <span class=\"comment\">//  添加数据时，如果集合中没有任何的数据，那么底层就会创建长度为10的数组</span></span><br><span class=\"line\">        <span class=\"comment\">//  add方法也可以传入两个参数，第一个是索引,第二个是添加数据的值</span></span><br><span class=\"line\">        list.add(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">&quot;wangwu&quot;</span>);</span><br><span class=\"line\">        list.add(<span class=\"string\">&quot;xiaoli&quot;</span>);</span><br><span class=\"line\">        list.add(<span class=\"number\">1</span>,<span class=\"string\">&quot;zhaoliu&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//在该集合中传入其他集合</span></span><br><span class=\"line\">        list.addAll(list1);</span><br><span class=\"line\">        <span class=\"comment\">//     获取集合中的数据条数</span></span><br><span class=\"line\">        System.out.println(list.size());<span class=\"comment\">//3</span></span><br><span class=\"line\">        <span class=\"comment\">//获取指定位置的数据，传入的是索引</span></span><br><span class=\"line\">        System.out.println(list.get(<span class=\"number\">1</span>));<span class=\"comment\">//wangwu</span></span><br><span class=\"line\">        <span class=\"comment\">//遍历集合中的数据</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class=\"line\">            System.out.println(list.get(i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果循环数据不关心数据的位置，采用特殊的for循环</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Object obj : list)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;集合中的数据：&quot;</span>+obj);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// todo 修改数据</span></span><br><span class=\"line\">        <span class=\"comment\">//将指定位置的数据进行修改set()注意，传递两个参数，第一个参数表示数据的位置，第二个表示修改后的值</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">oldVal</span> <span class=\"operator\">=</span> list.set(<span class=\"number\">1</span>, <span class=\"string\">&quot;lisi&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;修改前的值：&quot;</span>+oldVal);</span><br><span class=\"line\">        <span class=\"comment\">// todo 删除数据</span></span><br><span class=\"line\">        <span class=\"comment\">//将指定位置的数据进行修改remove()注意，传递1个参数，一个参数表示数据的位置。</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">remove</span> <span class=\"operator\">=</span> list.remove(<span class=\"number\">1</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;删除的值&quot;</span>+remove);</span><br><span class=\"line\">        <span class=\"comment\">//清空集合的数据</span></span><br><span class=\"line\"><span class=\"comment\">//        list.clear();</span></span><br><span class=\"line\">        <span class=\"comment\">//删除指定集合中的数据(比如上面新添加的list1)</span></span><br><span class=\"line\"><span class=\"comment\">//        list.removeAll(list1);</span></span><br><span class=\"line\">        <span class=\"comment\">//判断集合中是否存在某条数据,包含返回true不包含返回false</span></span><br><span class=\"line\">        System.out.println(list.contains(<span class=\"string\">&quot;lisi&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">//获取数据在索引中第一个的位置，数据不存在返回-1，存在返回数据所在位置的索引值</span></span><br><span class=\"line\">        System.out.println(list.indexOf(<span class=\"string\">&quot;lisi&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">//获取最后出现的位置的索引值(集合中有多个zhangsan，但是返回的是最后一个zhangsan的索引值)</span></span><br><span class=\"line\">        list.lastIndexOf(<span class=\"string\">&quot;lisi&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//复制一个集合</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">clone</span> <span class=\"operator\">=</span> list.clone();</span><br><span class=\"line\">        <span class=\"type\">ArrayList</span> <span class=\"variable\">list2</span> <span class=\"operator\">=</span> (ArrayList)clone;</span><br><span class=\"line\">        <span class=\"comment\">//该集合和被复制的list集合额内容一致</span></span><br><span class=\"line\">        System.out.println(list2);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// TODO 打印集合对象</span></span><br><span class=\"line\">        System.out.println(list);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"（3）LinkedList\"><a href=\"#（3）LinkedList\" class=\"headerlink\" title=\"（3）LinkedList\"></a>（3）LinkedList</h3><p>LinkedList &#x3D; Linked(链接) + List</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.LinkedList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">LinkedListTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//todo 集合--- Collection</span></span><br><span class=\"line\">        <span class=\"comment\">// LinkedList</span></span><br><span class=\"line\">        <span class=\"comment\">//构建集合对象</span></span><br><span class=\"line\">        <span class=\"type\">LinkedList</span> <span class=\"variable\">linkedList</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>();</span><br><span class=\"line\">        LinkedList linkedList1=<span class=\"keyword\">new</span> <span class=\"title class_\">LinkedList</span>();</span><br><span class=\"line\">        <span class=\"comment\">//增加第一个数据</span></span><br><span class=\"line\">        linkedList.add(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">        linkedList.add(<span class=\"string\">&quot;lisi&quot;</span>);</span><br><span class=\"line\">        linkedList.add(<span class=\"string\">&quot;wangwu&quot;</span>);</span><br><span class=\"line\">        linkedList1.add(<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">        linkedList1.add(<span class=\"string\">&quot;2&quot;</span>);</span><br><span class=\"line\">        linkedList1.add(<span class=\"string\">&quot;3&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//添加一个集合</span></span><br><span class=\"line\">        linkedList.addAll(linkedList1);</span><br><span class=\"line\">        <span class=\"comment\">//链表前面增加</span></span><br><span class=\"line\"><span class=\"comment\">//        linkedList.addFirst(&quot;lisi&quot;);</span></span><br><span class=\"line\">        <span class=\"comment\">//链表后面增加</span></span><br><span class=\"line\"><span class=\"comment\">//        linkedList.add(1,&quot;wangwu&quot;);</span></span><br><span class=\"line\">        <span class=\"comment\">//获取数据</span></span><br><span class=\"line\">        <span class=\"comment\">//拿到第一个数据(开头数据)</span></span><br><span class=\"line\">        System.out.println(linkedList.getFirst());</span><br><span class=\"line\">        <span class=\"comment\">//拿到第二个数据(结尾数据)</span></span><br><span class=\"line\">        System.out.println(linkedList.getLast());</span><br><span class=\"line\">        <span class=\"comment\">//根据索引拿数据</span></span><br><span class=\"line\">        System.out.println(linkedList.get(<span class=\"number\">1</span>));<span class=\"comment\">//lisi</span></span><br><span class=\"line\">        <span class=\"comment\">// todo 遍历数据</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; linkedList.size(); i++) &#123;</span><br><span class=\"line\">            System.out.println(linkedList.get(i));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//todo 遍历数据(第二种)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Object obj:linkedList)&#123;</span><br><span class=\"line\">            System.out.println(obj);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//删除数据</span></span><br><span class=\"line\">        linkedList.remove(<span class=\"string\">&quot;lisi&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//表示删除第一个</span></span><br><span class=\"line\">        linkedList.remove(<span class=\"number\">1</span>);</span><br><span class=\"line\">        linkedList.remove();</span><br><span class=\"line\">        <span class=\"comment\">//删除链表第一个元素</span></span><br><span class=\"line\">        linkedList.removeFirst();</span><br><span class=\"line\">        <span class=\"comment\">//删除链表最后一个元素</span></span><br><span class=\"line\">        linkedList.removeLast();</span><br><span class=\"line\">        <span class=\"comment\">//push相当于addFirst方法</span></span><br><span class=\"line\">        linkedList.push(<span class=\"string\">&quot;123&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//pop()弹出元素</span></span><br><span class=\"line\">        System.out.println(linkedList.poll());</span><br><span class=\"line\">        <span class=\"comment\">//todo 打印集合的数据</span></span><br><span class=\"line\">        System.out.println(linkedList);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"（4）泛型\"><a href=\"#（4）泛型\" class=\"headerlink\" title=\"（4）泛型\"></a>（4）泛型</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ListQuestion</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//todo 集合</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//todo 泛型语法&lt;&gt;中放你要在集合中存储的数据类型</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">        <span class=\"comment\">//如果没有尖括号里面的内容，表示我在这个容器中可以存储任何类型的数据</span></span><br><span class=\"line\">        MyContainer&lt;User&gt; myContainer = <span class=\"keyword\">new</span> <span class=\"title class_\">MyContainer</span>();</span><br><span class=\"line\">        <span class=\"comment\">//会报错，因为我已经用尖括号限定了容器类类型</span></span><br><span class=\"line\"><span class=\"comment\">//        MyContainer.data = new Object();</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// todo 容器类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span>  <span class=\"title class_\">MyContainer</span>&lt;C&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> C data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span>  <span class=\"title class_\">User</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"（5）比较器\"><a href=\"#（5）比较器\" class=\"headerlink\" title=\"（5）比较器\"></a>（5）比较器</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Comparator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ListSort</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">ArrayList</span> <span class=\"variable\">list</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        list.add(<span class=\"number\">1</span>);</span><br><span class=\"line\">        list.add(<span class=\"number\">2</span>);</span><br><span class=\"line\">        list.add(<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"comment\">//new一个比较类的对象</span></span><br><span class=\"line\">        <span class=\"type\">NumberComparator</span> <span class=\"variable\">comparator</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">NumberComparator</span>();</span><br><span class=\"line\">        <span class=\"comment\">//todo 集合中的数据进行比较</span></span><br><span class=\"line\">        list.sort(comparator);</span><br><span class=\"line\">        System.out.println(list);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//创建一个比较类，实现Comparator接口</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">NumberComparator</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Comparator</span>&lt;Integer&gt;&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">compare</span><span class=\"params\">(Integer o1, Integer o2)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//todo 如果第一个数大于第二个数，返回结果为正数，表示升序排序</span></span><br><span class=\"line\"><span class=\"comment\">//        return o1 - o2;</span></span><br><span class=\"line\">        <span class=\"comment\">//todo 如果第一个数小于第二个数，返回结果为负数，表示升序降序</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> o2 - o1;</span><br><span class=\"line\">        <span class=\"comment\">//todo 如果第一个数等于第二个数，返回结果为0。</span></span><br><span class=\"line\"><span class=\"comment\">//        return 0;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"（6）HashSet\"><a href=\"#（6）HashSet\" class=\"headerlink\" title=\"（6）HashSet\"></a>（6）HashSet</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HashSetTest</span>  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//HashSet:Hash + Set</span></span><br><span class=\"line\">        <span class=\"comment\">//Hash：哈希算法，散列(无序)</span></span><br><span class=\"line\">        <span class=\"comment\">//ArrayList：数组</span></span><br><span class=\"line\">        <span class=\"comment\">//LinkedList：</span></span><br><span class=\"line\">        <span class=\"type\">HashSet</span> <span class=\"variable\">hashSet</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//todo 增加数据</span></span><br><span class=\"line\">        hashSet.add(<span class=\"string\">&quot;lisi&quot;</span>);</span><br><span class=\"line\">        hashSet.add(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">        hashSet.add(<span class=\"string\">&quot;wangwu&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// todo 修改数据(先删除，在增加)</span></span><br><span class=\"line\">        hashSet.remove(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">        hashSet.add(<span class=\"string\">&quot;xiaoli&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//todo 遍历数据</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Object obj : hashSet)&#123;</span><br><span class=\"line\">            System.out.println(obj);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// todo 转换成数组</span></span><br><span class=\"line\">        Object[] objects = hashSet.toArray();</span><br><span class=\"line\">        System.out.println(hashSet);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"HashSet处理重复数据\"><a href=\"#HashSet处理重复数据\" class=\"headerlink\" title=\"HashSet处理重复数据\"></a>HashSet处理重复数据</h4><p>重写equals和hashcode方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.List;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HashSetTestForNum</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//HashSet的底层是：数组 + 链表 结构</span></span><br><span class=\"line\">        <span class=\"type\">HashSet</span> <span class=\"variable\">hashSet</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>();</span><br><span class=\"line\">        <span class=\"type\">User1</span> <span class=\"variable\">user1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User1</span>();</span><br><span class=\"line\">        <span class=\"type\">User1</span> <span class=\"variable\">user2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User1</span>();</span><br><span class=\"line\">        <span class=\"type\">User1</span> <span class=\"variable\">user3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User1</span>();</span><br><span class=\"line\">        user1.id=<span class=\"number\">1001</span>;</span><br><span class=\"line\">        user1.name=<span class=\"string\">&quot;zhangsan&quot;</span>;</span><br><span class=\"line\">        user2.id=<span class=\"number\">1001</span>;</span><br><span class=\"line\">        user2.name=<span class=\"string\">&quot;zhangsan&quot;</span>;</span><br><span class=\"line\">        user3.id=<span class=\"number\">1002</span>;</span><br><span class=\"line\">        user3.name=<span class=\"string\">&quot;lisi&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        hashSet.add(user1);</span><br><span class=\"line\">        hashSet.add(user2);</span><br><span class=\"line\">        hashSet.add(user3);</span><br><span class=\"line\">        System.out.println(hashSet);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User1</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"comment\">//重写hashcode方法和equals</span></span><br><span class=\"line\">    <span class=\"comment\">//类似于内存地址</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">hashCode</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">equals</span><span class=\"params\">(Object obj)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(obj <span class=\"keyword\">instanceof</span> User1)&#123;</span><br><span class=\"line\">            <span class=\"type\">User1</span> <span class=\"variable\">testObj</span> <span class=\"operator\">=</span> (User1) obj;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(testObj.id == <span class=\"built_in\">this</span>.id)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(testObj.name.equals(<span class=\"built_in\">this</span>.name))&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;User&#123;&quot;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;id=&#x27;&quot;</span> + id + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> +</span><br><span class=\"line\">                <span class=\"string\">&quot;, name=&quot;</span> + name +</span><br><span class=\"line\">                <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-Queue接口\"><a href=\"#7-Queue接口\" class=\"headerlink\" title=\"(7)Queue接口\"></a>(7)Queue接口</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.Queue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.concurrent.ArrayBlockingQueue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestQueue</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception&#123;</span><br><span class=\"line\">        <span class=\"comment\">//todo 了解我们的Queue</span></span><br><span class=\"line\">        <span class=\"comment\">//      ArrayBlockingQueue = Array(数组) + Blocking(阻塞，等待)</span></span><br><span class=\"line\">        <span class=\"comment\">//      所以queue底层还是数组</span></span><br><span class=\"line\">        <span class=\"type\">ArrayBlockingQueue</span> <span class=\"variable\">queue</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayBlockingQueue</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"comment\">//添加数据</span></span><br><span class=\"line\">        queue.add(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\">        queue.add(<span class=\"string\">&quot;lisi&quot;</span>);</span><br><span class=\"line\">        queue.add(<span class=\"string\">&quot;wangwu&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//由于我长度只给了3，所以只能存三个数据，下面这个数据无法存储,报错  Queue full，代表queue存满了</span></span><br><span class=\"line\"><span class=\"comment\">//        queue.add(&quot;xiaoli&quot;);</span></span><br><span class=\"line\">        <span class=\"comment\">//添加数据(put)方法，该方法能够体现出阻塞这一概念，当我添加的数据大于长度时，程序会继续运行，不会停止</span></span><br><span class=\"line\"><span class=\"comment\">//        queue.put(&quot;zhangsan&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//        queue.put(&quot;lisi&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//        queue.put(&quot;wangwu&quot;);</span></span><br><span class=\"line\">        <span class=\"comment\">//添加数据offer方法，该方法会返回一个布尔类型的值，添加成功返回true，添加失败(超出queue存储长度)返回false</span></span><br><span class=\"line\"><span class=\"comment\">//        boolean zhangsan = queue.offer(&quot;zhangsan&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//        boolean lisi = queue.offer(&quot;lisi&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//        boolean wangwu = queue.offer(&quot;wangwu&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(zhangsan);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(lisi);</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(wangwu);</span></span><br><span class=\"line\">        <span class=\"comment\">//拿取数据(poll方法)</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(queue.poll());</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(queue.poll());</span></span><br><span class=\"line\"><span class=\"comment\">//        System.out.println(queue.poll());</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//拿取数据(take方法),当我去一个不存在的数据时，不会报错，程序不会结束，体现了一个等待，阻塞的过程</span></span><br><span class=\"line\">        System.out.println(queue.take());</span><br><span class=\"line\">        System.out.println(queue.take());</span><br><span class=\"line\">        System.out.println(queue.take());</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(queue);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-HashMap-处理键值对数据-K-V\"><a href=\"#8-HashMap-处理键值对数据-K-V\" class=\"headerlink\" title=\"(8)HashMap(处理键值对数据(K,V))\"></a>(8)HashMap(处理键值对数据(K,V))</h3><p>数据存储无序</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.HashMap;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestHashMap</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//HashMap = Hash + Map</span></span><br><span class=\"line\">        <span class=\"comment\">//todo 处理键值对&#123;K=V&#125;</span></span><br><span class=\"line\">        <span class=\"comment\">//创建HashMap对象</span></span><br><span class=\"line\">        HashMap&lt;String,String&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//添加数据put方法,当put传入的键相同时，相当于修改操作，返回被修改的值</span></span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">        System.out.println(map.put(<span class=\"string\">&quot;zhangsan&quot;</span>, <span class=\"string\">&quot;2&quot;</span>));<span class=\"comment\">//返回1，并且zhangsan键对应的value值被改为了2</span></span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"string\">&quot;2&quot;</span>);</span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;wangwu&quot;</span>,<span class=\"string\">&quot;3&quot;</span>);</span><br><span class=\"line\">        System.out.println(map);</span><br><span class=\"line\">        <span class=\"comment\">//todo 查询数据(返回被删除的键对应的value值)</span></span><br><span class=\"line\">        System.out.println(map.get(<span class=\"string\">&quot;zhangsan&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">//todo 删除数据</span></span><br><span class=\"line\">        map.remove(<span class=\"string\">&quot;zhangsan&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//todo 添加数据putIfAbsent方法，这个方法会检查该map里面有没有这个键值，如果有，则不做任何操作，如果没有则插入数据</span></span><br><span class=\"line\">        map.putIfAbsent(<span class=\"string\">&quot;Xiaoli&quot;</span>,<span class=\"string\">&quot;4&quot;</span>);</span><br><span class=\"line\">        map.putIfAbsent(<span class=\"string\">&quot;lisi&quot;</span>,<span class=\"string\">&quot;2&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//todo 修改数据replace方法</span></span><br><span class=\"line\">        map.replace(<span class=\"string\">&quot;Xiaoli&quot;</span>,<span class=\"string\">&quot;8&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//todo 清空</span></span><br><span class=\"line\"><span class=\"comment\">//        map.clear();</span></span><br><span class=\"line\">        <span class=\"comment\">//todo 获取map集合中所有的key</span></span><br><span class=\"line\">        <span class=\"type\">Set</span> <span class=\"variable\">setKey</span> <span class=\"operator\">=</span> map.keySet();</span><br><span class=\"line\"><span class=\"comment\">//        for(Object i : setKey)&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//            System.out.println(map.get(i));</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\">        <span class=\"comment\">//todo 获取所有的值</span></span><br><span class=\"line\">        <span class=\"type\">Collection</span> <span class=\"variable\">value</span> <span class=\"operator\">=</span> map.values();</span><br><span class=\"line\">        System.out.println(value);</span><br><span class=\"line\">        <span class=\"comment\">//判断集合中包含某个指定的value值</span></span><br><span class=\"line\">        System.out.println(map.containsValue(<span class=\"string\">&quot;1&quot;</span>));</span><br><span class=\"line\">        System.out.println(map);</span><br><span class=\"line\">        <span class=\"comment\">//todo 获取键值对对象</span></span><br><span class=\"line\">        Set&lt;Map.Entry&lt;String, String&gt;&gt; entries = map.entrySet();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Map.Entry&lt;String, String&gt; entry : entries) &#123;</span><br><span class=\"line\">            System.out.println(entry.getKey()+<span class=\"string\">&quot;=&quot;</span>+ entry.getValue());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"9-HashTable\"><a href=\"#9-HashTable\" class=\"headerlink\" title=\"(9)HashTable\"></a>(9)HashTable</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.HashTable;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestHashTable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//todo HashTable</span></span><br><span class=\"line\">        <span class=\"comment\">//  HashTable底层容量默认11</span></span><br><span class=\"line\">        <span class=\"comment\">//  HashTable的K,V不可以为null值</span></span><br><span class=\"line\">        <span class=\"comment\">//  HashTable使用的是HashCode</span></span><br><span class=\"line\">        <span class=\"comment\">//基本操作和HashMap一致(第(8)小节内容)</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"10-迭代器\"><a href=\"#10-迭代器\" class=\"headerlink\" title=\"(10)迭代器\"></a>(10)迭代器</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.HashTable;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashSet;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Iterator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DieDaiQi</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        HashMap&lt;String, Integer&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;String,Integer&gt;();</span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;a&quot;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;b&quot;</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">        map.put(<span class=\"string\">&quot;c&quot;</span>,<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"comment\">//todo 获取map集合当中的key值，返回key值的集合</span></span><br><span class=\"line\">        Set&lt;String&gt; setKeys = map.keySet();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//TODO 使用迭代器对集合map进行处理</span></span><br><span class=\"line\">        <span class=\"comment\">//todo 创建迭代器对象(iterator)</span></span><br><span class=\"line\">        Iterator&lt;String&gt; iterator = setKeys.iterator();</span><br><span class=\"line\">        <span class=\"comment\">//hasNext用于判断是否存在下一条数据</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (iterator.hasNext())&#123;</span><br><span class=\"line\">            <span class=\"comment\">//获取下一条数据</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> iterator.next();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"string\">&quot;b&quot;</span>.equals(key))&#123;</span><br><span class=\"line\">                iterator.remove();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(map);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(map);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"11-工具类\"><a href=\"#11-工具类\" class=\"headerlink\" title=\"(11)工具类\"></a>(11)工具类</h3><h1 id=\"第二章\"><a href=\"#第二章\" class=\"headerlink\" title=\"第二章\"></a>第二章</h1><h2 id=\"1、标识符的命名规则\"><a href=\"#1、标识符的命名规则\" class=\"headerlink\" title=\"1、标识符的命名规则\"></a>1、标识符的命名规则</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/ /T0D0标识符得命名规则</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//1．英文拉丁字母</span></span><br><span class=\"line\"></span><br><span class=\"line\">/ / wx , qq</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;zhangsan&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">xingming</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;lisi&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2．符号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//@，#，%，$</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3.标识符只能采用下划线和美元$符号，其他符号不能使用，称之为特殊符号</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//4.空格属于特殊符号，所以也不能作为标识符使用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">_name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;wangwu&quot;</span>;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">$name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;wangwu&quot;</span> ;</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">$na_me</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;wangwu&quot;</span>;</span><br><span class=\"line\">system.out.println(_name);</span><br><span class=\"line\">system.out.println($name);</span><br><span class=\"line\">system.out.println($na_me);</span><br><span class=\"line\"><span class=\"comment\">//5.阿拉伯数据0到9可以作为标识符使用，但是不能开头\t</span></span><br><span class=\"line\"><span class=\"comment\">//数字如果在标识符得开头位置，那么会被识别为数字，而不是标识符，所以会发生错误</span></span><br><span class=\"line\"><span class=\"comment\">//String 1name = &quot;zhangsan&quot;;</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">name1</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;zhangsan&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//6.标识符区分大小写</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">Public</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;zhaoliu&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//7.驼峰命名法</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">userName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;小李&quot;</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、数据存储单位\"><a href=\"#2、数据存储单位\" class=\"headerlink\" title=\"2、数据存储单位\"></a>2、数据存储单位</h2><p>1.比特(bit位)：数据运算的最小存储单位。</p>\n<p>2.字节(byte)：数据的最小存储单位。</p>\n<p>字节和比特之间可以互相转换的，关系如下</p>\n<p>​\t<code>1byte = 8bit</code></p>\n<h2 id=\"3、基础数据类型\"><a href=\"#3、基础数据类型\" class=\"headerlink\" title=\"3、基础数据类型\"></a>3、基础数据类型</h2><p>1.整数数据类型:byte，short，int，long分别是8位，16位，32位，64位</p>\n<p>2.浮点类型：含有小数点的数据类型；float（单精度浮点类型），double（双进度浮点类型）。</p>\n<p> 单精度浮点类型，我们需要用F(f)来结尾如</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">float</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"number\">2.0f</span>;</span><br></pre></td></tr></table></figure>\n\n<p>3.字符类型:使用符号标识文字内容</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;@&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>4.布尔类型：判断条件是否成立，成立取值true，不成立取值false</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">boolean</span> <span class=\"variable\">bln</span>  <span class=\"operator\">=</span> <span class=\"literal\">true</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4、数据类型转换\"><a href=\"#4、数据类型转换\" class=\"headerlink\" title=\"4、数据类型转换\"></a>4、数据类型转换</h2><p><strong>在java中范围小的数据可以直接转换为范围大的数据，但是范围大的数据不能转换成范围小的数据，如果非要大类型转小类型，那么我们应该使用小括号进行强制类型转换</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span><span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> s;</span><br><span class=\"line\"><span class=\"type\">byte</span> <span class=\"variable\">i1</span> <span class=\"operator\">=</span>(<span class=\"type\">byte</span>)i;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5、引用数据类型\"><a href=\"#5、引用数据类型\" class=\"headerlink\" title=\"5、引用数据类型\"></a>5、引用数据类型</h2><p><code>类、String、接口、数组、枚举、特殊类型值:null</code></p>\n<h2 id=\"6、运算符、表达式、算数运算符\"><a href=\"#6、运算符、表达式、算数运算符\" class=\"headerlink\" title=\"6、运算符、表达式、算数运算符\"></a>6、运算符、表达式、算数运算符</h2><h3 id=\"1-运算符\"><a href=\"#1-运算符\" class=\"headerlink\" title=\"1.运算符\"></a>1.运算符</h3><h4 id=\"就是参与数据运算的符号，Java定义，无法自行定义\"><a href=\"#就是参与数据运算的符号，Java定义，无法自行定义\" class=\"headerlink\" title=\"就是参与数据运算的符号，Java定义，无法自行定义\"></a>就是参与数据运算的符号，Java定义，无法自行定义</h4><h3 id=\"2-表达式\"><a href=\"#2-表达式\" class=\"headerlink\" title=\"2.表达式\"></a>2.表达式</h3><h4 id=\"就是采用运算符和数据连接在一起形成符合Java语法规则的指令代码\"><a href=\"#就是采用运算符和数据连接在一起形成符合Java语法规则的指令代码\" class=\"headerlink\" title=\"就是采用运算符和数据连接在一起形成符合Java语法规则的指令代码\"></a>就是采用运算符和数据连接在一起形成符合Java语法规则的指令代码</h4><h3 id=\"3-算数运算符\"><a href=\"#3-算数运算符\" class=\"headerlink\" title=\"3.算数运算符\"></a>3.算数运算符</h3><ul>\n<li><p>二元运算符：两个元素参与运算的运算符 1 + 2</p>\n</li>\n<li><p>算术表达式 &#x3D; 元素1 二元运算符 元素2 (<em><strong>表达式是有结果的，就需要有类型，这里的类型是元素种类类型最大的那一种，最小使用的类型为int类型</strong></em>)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">System.out.println(<span class=\"number\">1</span> + <span class=\"number\">2</span>) <span class=\"comment\">//3</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">2</span> - <span class=\"number\">2</span>) <span class=\"comment\">//0</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">1</span> * <span class=\"number\">2</span>) <span class=\"comment\">//2</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">4</span> / <span class=\"number\">2</span>) <span class=\"comment\">//2 (int,int) ==&gt;int结果类型取决于类型大的那个</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">1.0</span> / <span class=\"number\">2</span>) <span class=\"comment\">//0.5 (double,int) ==&gt;double,结果类型取决于类型大的那个</span></span><br><span class=\"line\">System.out.println(<span class=\"number\">5</span> % <span class=\"number\">2</span>) <span class=\"comment\">//1(取余数，模运算)</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n</li>\n<li><p>一元运算符：一个元素参与的运算符(<code>++</code>，<code>--</code>)</p>\n<p><code>++</code>:本质是加1操作的简化版本，也成为自增运算符,注意，++i，表示i先自加1随后在进入下面的运算，而i++表示i先参加运算后再加1</p>\n<p><code>--</code>:本质是减1操作的简化版本，也成为自减运算符,注意，–i，表示i先自减少1随后在进入下面的运算，而i–表示i先参加运算后再减1</p>\n</li>\n</ul>\n<h3 id=\"4-赋值运算符\"><a href=\"#4-赋值运算符\" class=\"headerlink\" title=\"4.赋值运算符\"></a>4.赋值运算符</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo3</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO 赋值运算符</span></span><br><span class=\"line\">        <span class=\"comment\">//等号就是赋值运算符，将右边表达式的结果赋值给等号左边变量</span></span><br><span class=\"line\">        <span class=\"comment\">//赋值运算符要考虑类型的关系</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;zhangsan&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//TODO 复合赋值运算符：+=</span></span><br><span class=\"line\">        <span class=\"comment\">//  如果元素进行运算后重新赋值给自己，那么可以将运算和赋值的符号进行简化</span></span><br><span class=\"line\">        <span class=\"comment\">//  复合赋值运算符进行运算时，数据类型不会发生变化</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\">        i+=<span class=\"number\">1</span>;<span class=\"comment\">//相当于i = i+1</span></span><br><span class=\"line\">        System.out.println(i);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">num1</span>  <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"comment\">//下面这种写法由于二元运算符最小类型为int会导致报错</span></span><br><span class=\"line\">        <span class=\"comment\">//num1 = num1 + 20;</span></span><br><span class=\"line\">        <span class=\"comment\">//使用复合运算符就不会报错了，因为复合赋值运算符进行运算时，数据类型不会发生变化</span></span><br><span class=\"line\">        num1 +=<span class=\"number\">20</span>;</span><br><span class=\"line\">        System.out.println(num1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-逻辑运算符\"><a href=\"#5-逻辑运算符\" class=\"headerlink\" title=\"5.逻辑运算符\"></a>5.逻辑运算符</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo1</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//掌握逻辑运算符的使用</span></span><br><span class=\"line\">        <span class=\"comment\">//需求:要求手机必须满足大于等于6.95英寸，切内存大于等于8</span></span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> <span class=\"number\">9.8</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">storage</span> <span class=\"operator\">=</span> <span class=\"number\">16</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">rs</span> <span class=\"operator\">=</span> size &gt;= <span class=\"number\">6.95</span> &amp; storage &gt;=<span class=\"number\">8</span>;<span class=\"comment\">//逻辑与:一假即假，两个都成立才为true</span></span><br><span class=\"line\">        System.out.println(rs);</span><br><span class=\"line\">        <span class=\"comment\">//需求:要求手机要么满足大于等于6.95英寸，要么内存大于等于8</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">rs2</span> <span class=\"operator\">=</span> size &gt;= <span class=\"number\">10</span> &amp; storage &gt;=<span class=\"number\">8</span>;<span class=\"comment\">//逻辑或:一真即真，两个都是假才为false</span></span><br><span class=\"line\">        System.out.println(rs2);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;---------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//逻辑非:取反的意思</span></span><br><span class=\"line\">        System.out.println(<span class=\"number\">2</span>&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">        System.out.println(!(<span class=\"number\">2</span>&gt;<span class=\"number\">1</span>));</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;---------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//逻辑异或:前后结果条件相同返回false，不同返回true</span></span><br><span class=\"line\">        System.out.println(<span class=\"literal\">true</span> ^ <span class=\"literal\">true</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"literal\">false</span> ^ <span class=\"literal\">true</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;---------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">//短路与: 写法:&amp;&amp;,规则:左边为false，右边不执行</span></span><br><span class=\"line\">        <span class=\"comment\">//短路或: 写法:|| 规则:左边为true，右边不执行</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span><span class=\"number\">20</span>;</span><br><span class=\"line\">        System.out.println(i&gt;<span class=\"number\">100</span> &amp;&amp; ++j&gt;<span class=\"number\">99</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;---------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span><span class=\"number\">10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span><span class=\"number\">30</span>;</span><br><span class=\"line\">        System.out.println(m&gt;<span class=\"number\">3</span> || ++n &gt;<span class=\"number\">40</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-三元运算符\"><a href=\"#6-三元运算符\" class=\"headerlink\" title=\"6.三元运算符\"></a>6.三元运算符</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OperatorDemo6</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO 运算符 - 三元运算符</span></span><br><span class=\"line\">       <span class=\"comment\">//   指三个元素参与运算的运算符</span></span><br><span class=\"line\">        <span class=\"comment\">//基本语法结构：变量 = （条件表达式）？（任意表达式1）：（任意表达式2）</span></span><br><span class=\"line\">        <span class=\"comment\">//   当条件表达式的结果为ture则执行表达式1，反之执行表达式2</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span> ;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">k</span> <span class=\"operator\">=</span>(i == <span class=\"number\">5</span>)? (i+<span class=\"number\">10</span>):(i+<span class=\"number\">1</span>);</span><br><span class=\"line\">        System.out.println(k);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7、流程控制\"><a href=\"#7、流程控制\" class=\"headerlink\" title=\"7、流程控制\"></a>7、流程控制</h2><h3 id=\"1-顺序执行\"><a href=\"#1-顺序执行\" class=\"headerlink\" title=\"1.顺序执行\"></a>1.顺序执行</h3><ul>\n<li>按照代码顺序从前往后执行</li>\n</ul>\n<h3 id=\"2-分支执行\"><a href=\"#2-分支执行\" class=\"headerlink\" title=\"2.分支执行\"></a>2.分支执行</h3><ul>\n<li>if……else……</li>\n<li>if……elif……….elif……..else……..</li>\n<li>switch(变量){ case1: ……. ;  case2: ……… ;default: ………..;},switch分支判断也叫等值分支判断。</li>\n</ul>\n<p>其中在<code>switch</code>分支中如果想要跳出某个<code>case</code>并结束分支执行，就在那个<code>case</code>块的内容最后加上<code>break</code>用来跳出</p>\n<h3 id=\"3-重复执行（循环）\"><a href=\"#3-重复执行（循环）\" class=\"headerlink\" title=\"3.重复执行（循环）\"></a>3.重复执行（循环）</h3><p>在Java中用于循环的语法有3个：</p>\n<p>1）while：有条件循环</p>\n<ul>\n<li>while(条件表达式){需要循环的代码}</li>\n</ul>\n<p>2）do….while(先执行一次，在进行条件判断)</p>\n<p>3）for</p>\n<ul>\n<li>for(初始化表达式 ; 条件表达式 ; 更新表达式;){ 循环体内容 }</li>\n</ul>\n<p>​\t\t\t初始化表达式实际上是对条件表达式中用到的变量进行初始化，循环体内容执行完毕后，会重新进行条件判断，如果判断为ture则会继续执行循环体内容。</p>\n<p><code>小练习:九层妖塔</code></p>\n<p>请在控制台输出打印如下</p>\n<p><img src=\"/2024/04/08/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%5Cimage-20240414160246249.png\" alt=\"image-20240414160246249\"></p>\n<p>代码如下:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;i&lt;<span class=\"number\">9</span>;i++)&#123;</span><br><span class=\"line\"><span class=\"comment\">//完成打印但是打印出来的是全部对齐的，并未达到要求</span></span><br><span class=\"line\">    <span class=\"comment\">//下面打印空格因为最后一行不用输出空格所以我们只打印8层就可以，按照规律每层打印的空格数=8-层号</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;<span class=\"number\">8</span>-i;j++)&#123;</span><br><span class=\"line\">System.out.print(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;i*<span class=\"number\">2</span>+<span class=\"number\">1</span>;j++)&#123;</span><br><span class=\"line\">\t\tSystem.out.print(<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">&quot; &quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/2024/04/08/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%5Cimage-20240414161235302.png\" alt=\"image-20240414161235302\"></p>\n<h1 id=\"第三章-面向对象\"><a href=\"#第三章-面向对象\" class=\"headerlink\" title=\"第三章 面向对象\"></a>第三章 面向对象</h1><h2 id=\"1）什么是面向对象？\"><a href=\"#1）什么是面向对象？\" class=\"headerlink\" title=\"1）什么是面向对象？\"></a>1）什么是面向对象？</h2><p>所谓面向对象，其实就是分析问题时，以问题所涉及的是或者物为中心的分析方式</p>\n<h2 id=\"2）类和对象\"><a href=\"#2）类和对象\" class=\"headerlink\" title=\"2）类和对象\"></a>2）类和对象</h2><h3 id=\"1-类-and-对象-先有类，再有对象\"><a href=\"#1-类-and-对象-先有类，再有对象\" class=\"headerlink\" title=\"1.类 and 对象(先有类，再有对象)\"></a>1.类 and 对象(先有类，再有对象)</h3><p>类表示归纳和整理；对象表示具体的事务。</p>\n<p>在Java中我们用class表示类，<code>通常类名首写字母大写</code>。</p>\n<p>基本语法结构：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class 类名&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">特征(属性)</span><br><span class=\"line\"></span><br><span class=\"line\">功能(方法)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-创建对象的语法结构\"><a href=\"#2-创建对象的语法结构\" class=\"headerlink\" title=\"2.创建对象的语法结构\"></a>2.创建对象的语法结构</h3><p>对象：类的实例化(具象化)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">new</span> 类名();<span class=\"comment\">//小括号不能丢</span></span><br><span class=\"line\"><span class=\"comment\">//new是关键字，表示创建一个具体的对象，使用一次，创建一次，每次都是全新的对象。</span></span><br></pre></td></tr></table></figure>\n\n<p>对象是将内存地址赋值给了变量，所以变量其实引用了内存中的对象，所以称之为引用变量，而变量的类型称之为引用数据类型。</p>\n<p><code>特殊的对象</code>：空对象(null)，没有引用的对象，称之为空对象，关键字对象，所有引用对象的类型默认取值为null</p>\n<h3 id=\"3-属性\"><a href=\"#3-属性\" class=\"headerlink\" title=\"3.属性\"></a>3.属性</h3><p>所谓属性，就是类的对象的相同特征</p>\n<p>声明：属性类型 属性名称 &#x3D; 属性值</p>\n<p><code>如果在声明属性的同时进行了初始化赋值，那么所有对象的属性就完全相同。如果希望每个对象的属性不一致，那么我们可以只声明即可，那么属性会在构造对象的时候默认初始化，而默认初始化的值取决于属性的类型</code></p>\n<p><em><strong>byte，short，int，long &#x3D;&#x3D;&gt; 0</strong></em></p>\n<p><em><strong>float,double &#x3D;&#x3D;&gt; 0.0</strong></em></p>\n<p><em><strong>boolean flg &#x3D;&#x3D;&gt; false</strong></em></p>\n<p><em><strong>char &#x3D;&#x3D;&gt;空字符</strong></em></p>\n<p><em><strong>引用数据类型 &#x3D;&#x3D;&gt; null</strong></em></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//初始化并赋值zhansan</span></span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;zhansan&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//只声明</span></span><br><span class=\"line\">String name;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-静态-static\"><a href=\"#4-静态-static\" class=\"headerlink\" title=\"4.静态(static)\"></a>4.静态(static)</h3><p>针对于具体对象的属性称之为对象属性，成员属性，实例属性</p>\n<p>针对于具体对象的方法称之为对象方法，成员方法，实例方法</p>\n<p>把和对象无关，只和类相关的称之为<strong>静态</strong>，</p>\n<p><strong>和类相关的方法称为静态方法</strong></p>\n<p><strong>和类相关的属性称为静态属性</strong></p>\n<p><strong>静态语法</strong>：就是在属性和方法前面增加<code>static</code>关键字</p>\n<p>在Java语法中：</p>\n<ul>\n<li><p><strong>成员方法可以访问静态属性和静态方法</strong></p>\n</li>\n<li><p><strong>静态方法不可以访问成员属性和静态方法</strong></p>\n</li>\n<li><p>在访问静态类的属性时，可以用<strong>静态类名.属性名</strong>直接访问。</p>\n</li>\n</ul>\n<h4 id=\"静态代码块\"><a href=\"#静态代码块\" class=\"headerlink\" title=\"静态代码块\"></a>静态代码块</h4><p>当类的信息加载完成后，会自动调用静态代码块，可以完成静态属性的初始化功能</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">//代码块内容</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在我们构建对象时，代码块会进行初始化，但不是静态的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"comment\">//代码块内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3）方法\"><a href=\"#3）方法\" class=\"headerlink\" title=\"3）方法\"></a>3）方法</h2><h3 id=\"1-方法的声明：\"><a href=\"#1-方法的声明：\" class=\"headerlink\" title=\"1.方法的声明：\"></a>1.方法的声明：</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【方法返回值类型】【<span class=\"keyword\">void</span>】 方法名(参数)&#123;功能代码&#125;</span><br></pre></td></tr></table></figure>\n\n<p>方法中<code>void</code>是空的意思，意味着没有结果。如果在方法中的结果需要返回，则确定返回值的类型利用<code>return</code>关键字来返回结果。没有返回值就用<code>void</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//返回的结果是布尔类型的所以用Boolean</span></span><br><span class=\"line\"><span class=\"type\">boolean</span> <span class=\"title function_\">register</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;注册成功&quot;</span>)</span><br><span class=\"line\">    <span class=\"comment\">//返回结果</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-方法传参-方法参数\"><a href=\"#2-方法传参-方法参数\" class=\"headerlink\" title=\"2.方法传参(方法参数)\"></a>2.方法传参(方法参数)</h3><p>1.语法:方法名(参数类型 参数名称)</p>\n<p>方法名(<strong>参数类型1 参数名称1,参数类型2 参数名称2,参数类型3 参数名称3</strong>) {   }进行多个参数的传递。</p>\n<p>2.传参注意事项：</p>\n<ul>\n<li><p>参数个数要匹配</p>\n</li>\n<li><p>参数类型要匹配</p>\n</li>\n<li><p>参数顺序要匹配</p>\n</li>\n<li><p>当参数个数不确定时，我们可以使用特殊语法来声明：可变参数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">参数类型... 参数名称</span><br><span class=\"line\">方法名(String ... name)&#123;  &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>当参数列表中还有别的参数时，我们需要将可变参数声明在参数列表最后。</p>\n</li>\n<li><p>基本数据类型:传数值</p>\n</li>\n<li><p>引用数据类型:传引用地址</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//main方法中</span></span><br><span class=\"line\"><span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\"><span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span><span class=\"string\">&quot;zhangsan&quot;</span>；</span><br><span class=\"line\">    <span class=\"comment\">//传递参数</span></span><br><span class=\"line\">user.sayHello(name);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">void</span> <span class=\"title function_\">sayHello</span><span class=\"params\">(String name)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//使用参数</span></span><br><span class=\"line\">System.out.println(<span class=\"string\">&quot;hello&quot;</span>+ name);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"小插曲\"><a href=\"#小插曲\" class=\"headerlink\" title=\"小插曲\"></a>小插曲</h2><p>Java中的三块内存区域</p>\n<p><strong>栈</strong>：存放的是(方法，变量)</p>\n<p><strong>堆</strong>：存放(对象)</p>\n<p><strong>元空间</strong>：存放类的信息，也称之为方法区</p>\n<h2 id=\"4）包\"><a href=\"#4）包\" class=\"headerlink\" title=\"4）包\"></a>4）包</h2><p>-包中容纳类</p>\n<p><strong>语法：package 包完整路径;</strong></p>\n<p>包完整路径用<code>·</code>隔开</p>\n<p>包名一般全是<code>小写字母</code></p>\n<h3 id=\"包的导入\"><a href=\"#包的导入\" class=\"headerlink\" title=\"包的导入:\"></a>包的导入:</h3><p>我们用import语法来导入包。</p>\n<p><strong>import使用在package后class前</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> xxx.xxx.Xxxx;</span><br><span class=\"line\"><span class=\"keyword\">import</span> xxxxxx;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">xxxx</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5）面向对象——构建对象——构造方法\"><a href=\"#5）面向对象——构建对象——构造方法\" class=\"headerlink\" title=\"5）面向对象——构建对象——构造方法\"></a>5）面向对象——构建对象——构造方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建了一个User类的对象user</span></span><br><span class=\"line\"><span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br></pre></td></tr></table></figure>\n\n<p>上面这个过程实际上使用了构造方法来构建的对象下面来介绍一个构造方法</p>\n<p><strong>构造方法：专门用于构建对象</strong></p>\n<p>如果类中没有任何构造方法，那么**JVM(java虚拟机)**会自动添加一个公共的无参的构造方法。基本语法如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">类名 ()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意点:</p>\n<ul>\n<li>构造方法也是方法，但是没有void关键字</li>\n<li>方法名和类名完全相同</li>\n<li>如果类中没有构造方法&#x3D;&#x3D;&#x3D;&gt;JVM会提供默认构造方法</li>\n<li>如果类中有构造方法&#x3D;&#x3D;&#x3D;&gt;JVM不会提供默认构造方法</li>\n<li>构造方法也是方法，可以传递参数，但是一般传递参数的目的是用于对象属性的赋值</li>\n</ul>\n<h2 id=\"6）面向对象——继承\"><a href=\"#6）面向对象——继承\" class=\"headerlink\" title=\"6）面向对象——继承\"></a>6）面向对象——继承</h2><p>关键字：Extends</p>\n<p>基本语法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class 子类 extends 父类 &#123; &#125;</span><br></pre></td></tr></table></figure>\n\n<p>类存在父子关系：子类可以直接获取到父类的成员属性和成员方法</p>\n<p>类的继承只能是单继承，一个类只能有一个父类，不能存在多个父类</p>\n<p>在继承中，如果父类和子类含有相同的属性，那么可以采用特殊的关键字进行区分:super &amp; this.</p>\n<p>super：表示上一级</p>\n<p>this：表示当前</p>\n<h3 id=\"继承中的方法问题\"><a href=\"#继承中的方法问题\" class=\"headerlink\" title=\"继承中的方法问题\"></a>继承中的方法问题</h3><p>构造方法(完成内存控件属性的初始化操作):</p>\n<p><strong>父类对象是在子类对象前创建完成的，创建子类对象前，会先创建父类对象</strong></p>\n<p>如果父类提供了有参构造方法，那么JVM就不会提供默认的构造方法，那么子类应该调用super方法(带入参数)构建父类对象。</p>\n<h2 id=\"7）面向对象——多态\"><a href=\"#7）面向对象——多态\" class=\"headerlink\" title=\"7）面向对象——多态\"></a>7）面向对象——多态</h2><p>所谓多态，其实就是一个对象在不同场景下表现出来的不同状态和形态。</p>\n<p>多态语法其实就是对对象的使用场景进行了约束。</p>\n<p><strong>以父类声明的子类对象，只能使用父类中的方法，如果子类对象想使用子类方法，需要用子类来声明子类对象</strong></p>\n<h2 id=\"8）面向对象——方法重载\"><a href=\"#8）面向对象——方法重载\" class=\"headerlink\" title=\"8）面向对象——方法重载\"></a>8）面向对象——方法重载</h2><p>相同的方法：<strong>在一个类中，相同方法是指方法名，参数列表相同，和返回值类型无关的方法。</strong></p>\n<p><strong>方法重载：</strong> 在Java中，如果方法名称相同，但是参数列表(个数，顺序，类型)不相同，会认为是不同的方法，只是名称一样，我们称之为方法的重载。</p>\n<p><em><strong>在构造方法中，想要调用其他构造方法，那么需要使用关键字:this</strong></em></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.面相对象综合实例;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ClassObject2</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//我们只需要调用无参构造方法即可</span></span><br><span class=\"line\">        <span class=\"comment\">//创建对象时会调用构造函数</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span>&#123;</span><br><span class=\"line\">    User()&#123;</span><br><span class=\"line\">        <span class=\"comment\">//使用this关键字传入参数调用下面构造方法</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>(<span class=\"string\">&quot;zhansan&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    User(String name)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//接收name并用this关键字调用下面方法</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>(<span class=\"string\">&quot;zhangsan&quot;</span>,<span class=\"string\">&quot;男&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    User(String name, String sex)&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;名字是:&quot;</span>+name+<span class=\"string\">&quot;,&quot;</span>+sex);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p><strong>打印如下</strong>:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">名字是:zhangsan,男</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h3><p>基本数据类型：</p>\n<p><strong>基本数据类型匹配方法时，可以在数值不变的情况下扩大数据的精度。</strong></p>\n<p><strong>byte数据类型无法和char类型做转换，char没有负数，而byte存在着负数</strong></p>\n<p>引用数据类型：</p>\n<p>引用数据类型无法扩大数据精度，但是引用数据类型匹配方法时，会往object类去找。</p>\n<p><strong>比如A类是B类的父类，那么当调用的方法在B类中不符合时，就去A类中寻找，如果A类中没有就去A类的父类object中寻找</strong></p>\n<h2 id=\"9）面向对象——方法重写\"><a href=\"#9）面向对象——方法重写\" class=\"headerlink\" title=\"9）面向对象——方法重写\"></a>9）面向对象——方法重写</h2><p>定义：<strong>在父类中的方法其实主要体现通用性(可以被多个子类继承，可以被多个子类使用自身方法)，无法在某一个特定情况去使用这个方法。如果子类对象需要再某个特定业务逻辑中使用该父类的方法，那么就需要对父类中的方法进行重写，这个操作成为重写。</strong></p>\n<p>请注意：</p>\n<ul>\n<li><p>子类中的方法不会覆盖父类的方法，只是父类当前方法不适用这个场景</p>\n</li>\n<li><p>如果想在当前类调用父类方法可以使用<strong>super</strong>关键字进行调用</p>\n</li>\n<li><p>当子类的方法中的<strong>返回值类型，参数列表，方法名称</strong>都和父类相同时才可以进行重写</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.面相对象综合实例;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RewriteMethods</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Child</span> <span class=\"variable\">child</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Child</span>();</span><br><span class=\"line\">        <span class=\"type\">Parent</span> <span class=\"variable\">parent</span> <span class=\"operator\">=</span><span class=\"keyword\">new</span> <span class=\"title class_\">Parent</span>();</span><br><span class=\"line\">        System.out.println(child.sum());<span class=\"comment\">//40</span></span><br><span class=\"line\">        System.out.println(parent.sum());<span class=\"comment\">//20</span></span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> <span class=\"keyword\">class</span> <span class=\"title class_\">Parent</span>&#123;</span><br><span class=\"line\">     <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">     <span class=\"type\">int</span> <span class=\"title function_\">sum</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> i+<span class=\"number\">10</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Child</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Parent</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span>  <span class=\"operator\">=</span><span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"title function_\">sum</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> i+<span class=\"number\">20</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>通过以上例子，总结四点：</p>\n<ul>\n<li><strong>一个对象能使用什么方法，取决于引用变量的类型</strong></li>\n<li><strong>一个对象能使用什么属性，取决于引用变量的类型</strong></li>\n<li><strong>一个对象的方法具体使用(这个方法怎么去执行，逻辑是什么，直接使用还是间接使用)，需要看具体对象</strong></li>\n<li><strong>一个对象的属性具体的使用是不需要看具体的对象的，属性在哪里声明就在哪里使用</strong></li>\n</ul>\n<h2 id=\"10）面向对象——递归\"><a href=\"#10）面向对象——递归\" class=\"headerlink\" title=\"10）面向对象——递归\"></a>10）面向对象——递归</h2><p>定义：<strong>方法调用自身，成为递归方法</strong></p>\n<p><strong>递归最经典的案例——求n以内的奇数和</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.面相对象综合实例;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RewriteMethods</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> getSum(<span class=\"number\">20</span>);</span><br><span class=\"line\">        System.out.println(result);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">getSum</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//三元运算符，当n是偶数时会执行(n－1)，当n是奇数时直接用n</span></span><br><span class=\"line\">        n = n % <span class=\"number\">2</span> == <span class=\"number\">0</span> ? n - <span class=\"number\">1</span> : n;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (n == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> n + getSum(n - <span class=\"number\">2</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>递归——阶乘</p>\n<p><em><strong>一个大于1的数的阶乘就是这个数乘以这个数减一的阶乘</strong></em></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.面相对象综合实例;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RewriteMethods</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">result1</span> <span class=\"operator\">=</span> jieCheng(<span class=\"number\">5</span>);</span><br><span class=\"line\">        System.out.println(result1);</span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">    <span class=\"comment\">//求n以内的数的阶乘</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">jieCheng</span><span class=\"params\">(<span class=\"type\">int</span> n)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n&lt;= <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> n * jieCheng(n-<span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>注意：</p>\n<ul>\n<li>递归应该有跳出的逻辑</li>\n<li>调用自身时，传入的参数应该是有规律的</li>\n</ul>\n<h2 id=\"11）面向对象——访问权限\"><a href=\"#11）面向对象——访问权限\" class=\"headerlink\" title=\"11）面向对象——访问权限\"></a>11）面向对象——访问权限</h2><ul>\n<li>public：公共的，访问权限修饰符</li>\n</ul>\n<p>​\t\t<strong>在Java中，公共类只有一个，且名称和源码文件相同</strong></p>\n<p>​\t\t<strong>main方法：main方法是有JVM调用的，JVM可以任意调用，可以忽略权限问题</strong></p>\n<p>Java中的访问权限有四种：</p>\n<ul>\n<li><p>private：私有的，同一个类中可以使用，别的类，其他地方无法使用</p>\n</li>\n<li><p>(default)：默认权限，当不设定任何权限时，JVM会默认提供权限，包(路径)权限</p>\n</li>\n<li><p>protected：受保护的权限，子类可以访问</p>\n</li>\n<li><p>public：公共的，任意使用。</p>\n</li>\n</ul>\n<h2 id=\"12）面向对象——内部类——外部类\"><a href=\"#12）面向对象——内部类——外部类\" class=\"headerlink\" title=\"12）面向对象——内部类——外部类\"></a>12）面向对象——内部类——外部类</h2><p>外部类：在源码中直接声明的类</p>\n<p>内部类：类中声明的类</p>\n<p><strong>内部类在进行定义的时候，可以当成外部类的属性使用即可</strong>，但是在使用的时候，因为内部类被看做了外部类的属性，所以<strong>需要定义外部类对象</strong>进行使用。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//内部类定义</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">InnerClass</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>举个例子：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.面相对象综合实例;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">InerClass</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建外部类对象</span></span><br><span class=\"line\">        <span class=\"type\">OuterClass</span> <span class=\"variable\">outerClass</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">OuterClass</span>();</span><br><span class=\"line\">        <span class=\"comment\">//通过外部类对象来创建内部类对象</span></span><br><span class=\"line\">        OuterClass.<span class=\"type\">InnerClass1</span> <span class=\"variable\">innerClass1</span> <span class=\"operator\">=</span> outerClass.<span class=\"keyword\">new</span> <span class=\"title class_\">InnerClass1</span>();</span><br><span class=\"line\">        <span class=\"comment\">//调用各自的方法</span></span><br><span class=\"line\">        outerClass.printSome();</span><br><span class=\"line\">        innerClass1.printSome();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">OuterClass</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">printSome</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;我是外部类方法&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">InnerClass1</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">printSome</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;我是内部类方法&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"13）面向对象——final关键字\"><a href=\"#13）面向对象——final关键字\" class=\"headerlink\" title=\"13）面向对象——final关键字\"></a>13）面向对象——final关键字</h2><ul>\n<li><p><strong>final</strong>可以修饰变量：变量的值一旦初始化不允许被修改</p>\n</li>\n<li><p><strong>final</strong>可以修饰属性：但是JVM不会对自动对属性进行初始化，需要手动初始化，并且属性值不可以修改</p>\n</li>\n<li><p><strong>final</strong>可以修饰方法：final修饰的方法不可以被子类重写</p>\n</li>\n<li><p><strong>final</strong>可以修饰类：当final修饰一个类时，被修饰的类不可以有子类</p>\n</li>\n<li><p><strong>final</strong>不可以修饰构造方法。</p>\n</li>\n<li><p><strong>final</strong>可以修饰方法参数：一旦修饰，该参数无法修改。</p>\n</li>\n</ul>\n<p>一般将final修饰的变量称之为常量，或者叫不可变量。</p>\n<h2 id=\"14）面向对象——抽象—Abstract\"><a href=\"#14）面向对象——抽象—Abstract\" class=\"headerlink\" title=\"14）面向对象——抽象—Abstract\"></a>14）面向对象——抽象—Abstract</h2><ul>\n<li><p>抽象类：不完整的类就是抽象类，抽象类不能够构造对象</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//语法</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> class 类名&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>抽象方法：只有声明方法，而不去写方法里面的逻辑。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//语法</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> 返回值类型 方法名(参数);</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>在一个类中，有抽象方法就是抽象类，反之，如果有抽象类，他的方法不一定是抽象方法。</p>\n</li>\n<li><p>抽象类无法直接构造对象，但是可以通过子类间接构造对象。</p>\n</li>\n<li><p>如果抽象类中含有抽象方法，那么子类继承抽象类，需要重写抽象方法，将方法补充完整。</p>\n</li>\n<li><p><strong>abstract关键字不能和final关键字一起使用</strong></p>\n</li>\n</ul>\n<h2 id=\"15）面向对象——接口-interface\"><a href=\"#15）面向对象——接口-interface\" class=\"headerlink\" title=\"15）面向对象——接口(interface)\"></a>15）面向对象——接口(interface)</h2><p>接口：可以简单理解为规则。</p>\n<p>基本语法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//接口语法</span></span><br><span class=\"line\">interface 接口名称&#123; 接口属性，接口规则&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>接口其实是抽象的</li>\n<li>规则的属性必须为固定值，而且不能修改。</li>\n<li>属性和行为的访问权限是公共的。</li>\n<li>属性是静态的。</li>\n<li>行为是抽象的。</li>\n<li>接口可以继承其他接口</li>\n<li>类的对象需要遵循接口，在Java中其实就是实现(implements)接口。而且类可以实现多个接口</li>\n</ul>\n<p>接口的一段演示代码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">InterfaceTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Computer</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Computer</span>();</span><br><span class=\"line\">        <span class=\"type\">Light</span> <span class=\"variable\">light</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Light</span>();</span><br><span class=\"line\">\t\t<span class=\"comment\">//相当于把电灯插到usb1口上</span></span><br><span class=\"line\">        c.usb1 = light;</span><br><span class=\"line\">        <span class=\"comment\">//把电灯插到usb2口上</span></span><br><span class=\"line\">        c.usb2 = light;</span><br><span class=\"line\">        <span class=\"comment\">//电脑给上面两个供电(调用givePower方法)</span></span><br><span class=\"line\">        c.givePower();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">rule</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">PowerOut</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">rule</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">givePower</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">PowerIn</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">rule</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receivePower</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Computer</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">PowerOut</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> PowerIn usb1;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> PowerIn usb2;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">givePower</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;电脑提供电源&quot;</span>);</span><br><span class=\"line\">        usb1.receivePower();</span><br><span class=\"line\">        usb2.receivePower();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Light</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">PowerIn</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">receivePower</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;电灯接受电源&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"16）面向对象——枚举-Enum\"><a href=\"#16）面向对象——枚举-Enum\" class=\"headerlink\" title=\"16）面向对象——枚举(Enum)\"></a>16）面向对象——枚举(Enum)</h2><p>定义：枚举是一个特殊的类，其中包含了一组特定的对象，一般使用大写的的字母，这些对象不会发生改变。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">City</span>&#123;</span><br><span class=\"line\">    BEIJING,SHANGHAI</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>枚举使用enum关键字使用。</li>\n<li>枚举类的对象一般放在前面，如果还要写入别的语法那么应该用分号与后面的语法隔开。</li>\n<li>枚举类不能创建对象，只能在内部使用</li>\n</ul>\n<p>举个例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">EnumTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.print(City.SHANGHAI.name);</span><br><span class=\"line\">        System.out.println(City.SHANGHAI.code);</span><br><span class=\"line\">        System.out.print(City.BEIJING.name);</span><br><span class=\"line\">        System.out.println(City.BEIJING.code);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">enum</span> <span class=\"title class_\">City</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//相当于new一个对象,JVM完成</span></span><br><span class=\"line\">    BEIJING(<span class=\"string\">&quot;北京&quot;</span>,<span class=\"number\">1001</span>),SHANGHAI(<span class=\"string\">&quot;上海&quot;</span>,<span class=\"number\">1002</span>);</span><br><span class=\"line\">    City(String name, <span class=\"type\">int</span> code)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.code = code;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> code;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"17）面向对象——匿名类\"><a href=\"#17）面向对象——匿名类\" class=\"headerlink\" title=\"17）面向对象——匿名类\"></a>17）面向对象——匿名类</h2><p>在某些场合下，类的名字不重要了，我们只是想使用类中的方法或功能，那么这个时候就需要用到特殊的语法：匿名类。</p>\n<p>定义：没有名字的类，被称为匿名类</p>\n<p>举个例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">NoNameClass</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建了一个SayHello的对象me</span></span><br><span class=\"line\">        <span class=\"type\">SayHello</span> <span class=\"variable\">me</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SayHello</span>();</span><br><span class=\"line\">        <span class=\"comment\">//下面这种写法不需要再额外创建张三和李四的类，也就是我们创建了一个没有名字的类new person()&#123;&#125;</span></span><br><span class=\"line\">        me.sayHelloToPeople(<span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>() &#123;</span><br><span class=\"line\">            <span class=\"comment\">//重写抽象方法具体化</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> String <span class=\"title function_\">name</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&quot;张三&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        me.sayHelloToPeople(<span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> String <span class=\"title function_\">name</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&quot;李四&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//有抽象方法所以是抽象类</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> String <span class=\"title function_\">name</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SayHello</span>  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">sayHelloToPeople</span><span class=\"params\">(Person person)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;hello&quot;</span> + person.name());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>接口也可以</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//只关心你是怎么飞的，并没有考虑你是什么类，所以这里用匿名类。        </span></span><br><span class=\"line\"><span class=\"keyword\">new</span> <span class=\"title class_\">Fly</span>() &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">fly</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;使用飞行器飞行&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;.fly();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//接口是抽象的</span></span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">Fly</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">fly</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"18）面向对象——Bean规范\"><a href=\"#18）面向对象——Bean规范\" class=\"headerlink\" title=\"18）面向对象——Bean规范\"></a>18）面向对象——Bean规范</h2><ul>\n<li>类要求必须含有无参的，公共的构造方法</li>\n<li>属性必须私有化，然后提供公共的get，set方法</li>\n</ul>\n<p>例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Movie</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  <span class=\"type\">double</span> price;</span><br><span class=\"line\">    </span><br><span class=\"line\">     <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getId</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setId</span><span class=\"params\">(<span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">double</span> <span class=\"title function_\">getPrice</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> price;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setPrice</span><span class=\"params\">(<span class=\"type\">double</span> price)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.price = price;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"19）面向对象——作用域\"><a href=\"#19）面向对象——作用域\" class=\"headerlink\" title=\"19）面向对象——作用域\"></a>19）面向对象——作用域</h2><p>例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.面相对象综合实例;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ZuoYongYu</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">User2</span> <span class=\"variable\">user2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User2</span>();</span><br><span class=\"line\">            user2.test();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person2</span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User2</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Person2</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;lisi&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//如果属性和(局部)变量名称相同，访问时不加修饰符，那么优先访问变量</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;wangwu&quot;</span>;<span class=\"comment\">//启动打印的是wangwu，如果注释掉这一行，那么打印的将会是lisi</span></span><br><span class=\"line\">        System.out.println(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"第四章-常见类和对象\"><a href=\"#第四章-常见类和对象\" class=\"headerlink\" title=\"第四章 常见类和对象\"></a>第四章 常见类和对象</h1><h2 id=\"1）常见类和对象——Object\"><a href=\"#1）常见类和对象——Object\" class=\"headerlink\" title=\"1）常见类和对象——Object\"></a>1）常见类和对象——Object</h2><p>Object类的包路径：java.lang.Object</p>\n<p>Object对象的常用方法：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.常见类和对象;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ObjectClass</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">obj</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">        <span class=\"comment\">//object对象的常用方法</span></span><br><span class=\"line\">        <span class=\"comment\">// TODO toString()，将对象转换成字符串</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> obj.toString();</span><br><span class=\"line\">        System.out.println(s);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// TODO 获取对象的内存地址</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> obj.hashCode();</span><br><span class=\"line\">        System.out.println(i);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// TODO 判断两个对象是否相等，如果相等返回true，不相等返回flase</span></span><br><span class=\"line\">        <span class=\"comment\">//      equals方法比较对象时，默认比较的是内存地址</span></span><br><span class=\"line\">        <span class=\"type\">Person</span> <span class=\"variable\">person</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">equals1</span> <span class=\"operator\">=</span> obj.equals(person);</span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">equals2</span> <span class=\"operator\">=</span> obj.equals(obj);</span><br><span class=\"line\">        System.out.println(equals1);<span class=\"comment\">//false</span></span><br><span class=\"line\">        System.out.println(equals2);<span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//TODO getClass获取对象的类型信息</span></span><br><span class=\"line\">        Class&lt;?&gt; currentClassName = obj.getClass();</span><br><span class=\"line\">        System.out.println(currentClassName.getSimpleName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">user</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Person</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2）常见类和对象——数组\"><a href=\"#2）常见类和对象——数组\" class=\"headerlink\" title=\"2）常见类和对象——数组\"></a>2）常见类和对象——数组</h2><p>在Java中数组的声明方式：<strong>类型[] 变量名；</strong></p>\n<p>数组的创建：<strong>new 类型[容量];</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//数组的声明</span></span><br><span class=\"line\">String[] names;</span><br><span class=\"line\"><span class=\"comment\">//数组的创建(创建了一个存储3个数据的names数组)</span></span><br><span class=\"line\">String[] names = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[<span class=\"number\">3</span>]</span><br><span class=\"line\"><span class=\"comment\">//给数组赋值</span></span><br><span class=\"line\">names[<span class=\"number\">0</span>] = <span class=\"string\">&quot;lisi&quot;</span>;</span><br><span class=\"line\">names[<span class=\"number\">1</span>] = <span class=\"string\">&quot;wangwu&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">//数组的访问</span></span><br><span class=\"line\">System.out.println(names[<span class=\"number\">0</span>]);<span class=\"comment\">//打印lisi</span></span><br><span class=\"line\">System.out.println(names[<span class=\"number\">0</span>]);<span class=\"comment\">//打印wangwu</span></span><br><span class=\"line\"><span class=\"comment\">//也可以用循环访问数组</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i;i&lt;names.length;i++)&#123;</span><br><span class=\"line\">    <span class=\"type\">String</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> names[i];</span><br><span class=\"line\">    System.out.println(j);</span><br><span class=\"line\">&#125;<span class=\"comment\">//循环执行完打印的是lisi，wangwu</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>如果需要一次创建多个对象可以用数组来完成</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//创建一个对象数组user</span></span><br><span class=\"line\">Users[] users = <span class=\"keyword\">new</span> <span class=\"title class_\">Users</span>[<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"comment\">//利用for循环来生成该数组的对象</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> i ; i&lt;users.length;i++)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//创建对象</span></span><br><span class=\"line\">    users[i] = <span class=\"keyword\">new</span> <span class=\"title class_\">Users</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3）常见类和对象——二维数组\"><a href=\"#3）常见类和对象——二维数组\" class=\"headerlink\" title=\"3）常见类和对象——二维数组\"></a>3）常见类和对象——二维数组</h2><p>二维数组的定义</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//二维数组(可以简单理解为3X3的表格)</span></span><br><span class=\"line\">String[][] names = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[<span class=\"number\">3</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\"><span class=\"comment\">//二维数组的遍历</span></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"type\">int</span> row= <span class=\"number\">0</span> ;row&lt;<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">col</span> <span class=\"operator\">=</span><span class=\"number\">0</span>; col &lt; <span class=\"number\">3</span>; j++)&#123;</span><br><span class=\"line\">        System.out.print(names[row][col]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">&quot;  &quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数组——应用\"><a href=\"#数组——应用\" class=\"headerlink\" title=\"数组——应用\"></a>数组——应用</h3><h4 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序*\"></a>冒泡排序*</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.常见类和对象;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MaoPaoPaiXu</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO 将一个数组的最大的数放在数组最后面</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] nums = &#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>，<span class=\"number\">2</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//注意不能索引到最后一个数，因为最后一个数的下一位没有数据</span></span><br><span class=\"line\">        <span class=\"comment\">//左边和右边比较，我们先找出最大的数，让他放在数组最后一个元素位置</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;i&lt; nums.length-<span class=\"number\">1</span>;i++)&#123;</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">num1</span> <span class=\"operator\">=</span>nums[i];</span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">num2</span> <span class=\"operator\">=</span>nums[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(num1&gt;num2)&#123;</span><br><span class=\"line\">                nums[i] = num2;</span><br><span class=\"line\">                nums[i+<span class=\"number\">1</span>] = num1;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : nums) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//打印结果为1,3,2,4,5</span></span><br><span class=\"line\">            System.out.println(num);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>上面这个只是找出了我们的最大的数放到了数组最后面，那么我们的冒泡排序的结果应该1,2,3,4,5所以稍加改动如下:</p>\n<p>解析：<strong>那么在上面的基础上，我们每次把最大数放在后面不就可以了吗？也就是说第一次比较5个数，那么5最大放在后面，第二次比较4个数一定是4最大，我们把四放在四个数的最后面。依次类推，不就完成了吗？</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//代码逻辑(冒泡排序)</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.常见类和对象;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ErWeiShuZu</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO 将一个数组的最大的数放在数组最后面</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] nums = &#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>，<span class=\"number\">2</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//注意不能索引到最后一个数，因为最后一个数的下一位没有数据</span></span><br><span class=\"line\">        <span class=\"comment\">//左边和右边比较，我们先找出最大的数，让他放在数组最后一个元素位置</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//当i=0时，我们下面的循环就找5个数的大小，等于1就找4个数的大小.....</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; nums.length - i - <span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">num1</span> <span class=\"operator\">=</span> nums[j];</span><br><span class=\"line\">                <span class=\"type\">int</span> <span class=\"variable\">num2</span> <span class=\"operator\">=</span> nums[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (num1 &gt; num2) &#123;</span><br><span class=\"line\">                    nums[j] = num2;</span><br><span class=\"line\">                    nums[j + <span class=\"number\">1</span>] = num1;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : nums) &#123;</span><br><span class=\"line\">            System.out.println(num);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序*\"></a>选择排序*</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t<span class=\"comment\">//选择排序</span></span><br><span class=\"line\"><span class=\"type\">int</span>[] nums = &#123;<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>，<span class=\"number\">2</span>&#125;;</span><br><span class=\"line\"><span class=\"comment\">//第一步：找到最大值的索引</span></span><br><span class=\"line\">      <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; nums.length; j++) &#123;</span><br><span class=\"line\">          <span class=\"comment\">//将最大值索引定为0，因为0已经被用了所以下面的循环从1开始</span></span><br><span class=\"line\">          <span class=\"type\">int</span> <span class=\"variable\">maxIndex</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">          <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; nums.length-j; i++) &#123;</span><br><span class=\"line\">              <span class=\"type\">int</span> <span class=\"variable\">num1</span> <span class=\"operator\">=</span> nums[i];<span class=\"comment\">//4 3 2 5</span></span><br><span class=\"line\">              <span class=\"type\">int</span> <span class=\"variable\">num2</span> <span class=\"operator\">=</span>nums[maxIndex];<span class=\"comment\">//1 4 4 4</span></span><br><span class=\"line\">              <span class=\"keyword\">if</span> (num1&gt;num2)&#123;</span><br><span class=\"line\">                  <span class=\"comment\">//循环完成后我们的最大值索引就被找到了</span></span><br><span class=\"line\">                  maxIndex = i;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          <span class=\"comment\">//把最后一个数和我们的最大值索引对应的数进行交换就完成了将最大的数放在数组最后面</span></span><br><span class=\"line\">          <span class=\"type\">int</span> <span class=\"variable\">num3</span> <span class=\"operator\">=</span> nums[nums.length-j-<span class=\"number\">1</span>];</span><br><span class=\"line\">          <span class=\"type\">int</span> <span class=\"variable\">num4</span> <span class=\"operator\">=</span> nums[maxIndex];</span><br><span class=\"line\">          nums[nums.length-j-<span class=\"number\">1</span>] = num4;</span><br><span class=\"line\">          nums[maxIndex] = num3;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : nums) &#123;</span><br><span class=\"line\">    <span class=\"comment\">//打印的结果为1，2，3，4，5</span></span><br><span class=\"line\">          System.out.println(num);</span><br><span class=\"line\">      &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"二分查找法\"><a href=\"#二分查找法\" class=\"headerlink\" title=\"二分查找法*\"></a>二分查找法*</h4><ul>\n<li>前提：数据有序。</li>\n</ul>\n<p>解释：二分查找法，又称折半查找（Binary Search），是一种在有序数组中高效查找特定元素的算法。其核心思想是通过将待查找区间反复减半来逼近目标值，直至找到目标或者确定目标不存在于数组中。以下是二分查找的基本步骤：</p>\n<ul>\n<li><p><strong>初始化</strong>: 确定查找区间的初始边界，通常是整个数组的开始索引（设为<code>left</code>）和结束索引（设为<code>right</code>），或者说是数组的第一个元素和最后一个元素的索引。</p>\n</li>\n<li><p><strong>计算中间索引</strong>: 在每一轮查找中，计算当前查找区间中间元素的索引 <code>mid = (left + right) / 2</code>（实际应用中为防止整数溢出，通常写作 <code>mid = left + (right - left) / 2</code>）。</p>\n</li>\n</ul>\n<p><strong>比较与分支</strong>:</p>\n<ul>\n<li>如果数组中间元素<code>array[mid]</code>正好等于目标值，查找成功，返回中间元素的索引<code>mid</code>。</li>\n<li>如果<code>array[mid]</code>小于目标值，则说明目标值位于中间元素右侧的子区间，因此更新查找区间为<code>left = mid + 1</code>。</li>\n<li>如果<code>array[mid]</code>大于目标值，则目标值位于中间元素左侧的子区间，更新查找区间为<code>right = mid - 1</code>。</li>\n</ul>\n<ul>\n<li><strong>重复步骤2和3</strong>，直到<code>left &gt; right</code>，此时说明目标值不在数组中，查找失败。</li>\n</ul>\n<p>二分查找的时间复杂度为O(log n)，其中n是数组中的元素数量。这是因为每次操作都将查找范围减半，因此大大减少了需要检查的元素数量，尤其是在处理大数据集时，这种算法的效率优势更为明显。但需要注意的是，二分查找的前提是数组必须是有序的，且通常适用于静态数据结构，因为对数组的插入和删除操作可能会破坏其有序性，从而增加维护成本。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.常见类和对象;</span><br><span class=\"line\"><span class=\"comment\">//演示的是二分法查找，前提是必须数组有序</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SelectPaiXu</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> nums[]=&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>&#125;;</span><br><span class=\"line\">        <span class=\"comment\">//定义查找的目标数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">targetNumber</span> <span class=\"operator\">=</span> <span class=\"number\">5</span>;</span><br><span class=\"line\">        <span class=\"comment\">//定义开始的索引</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">startIndex</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//定义中间值索引</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">middle</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//定义结束索引</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">endIndex</span> <span class=\"operator\">=</span> nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"comment\">//查找中间值索引</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (startIndex &lt;=endIndex )&#123;</span><br><span class=\"line\">            middle= (startIndex+endIndex) / <span class=\"number\">2</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[middle] &gt; targetNumber)&#123;</span><br><span class=\"line\">                endIndex = middle -<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(nums[middle]&lt;targetNumber)&#123;</span><br><span class=\"line\">                startIndex= middle+<span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//打印中间值索引</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;数据的位置是：&quot;</span>+middle);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4）常见类和对象——包装类\"><a href=\"#4）常见类和对象——包装类\" class=\"headerlink\" title=\"4）常见类和对象——包装类\"></a>4）常见类和对象——包装类</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Byte</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"type\">Short</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"type\">Integer</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"type\">Long</span> <span class=\"variable\">lon</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"type\">Float</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"type\">Double</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"type\">Character</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"type\">Boolean</span> <span class=\"variable\">bln</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将基本数据类型转换为包装类\"><a href=\"#将基本数据类型转换为包装类\" class=\"headerlink\" title=\"将基本数据类型转换为包装类\"></a>将基本数据类型转换为包装类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.常见类和对象;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BaoZhuangLei</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"comment\">//将基本数据类型转换为包装类型</span></span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">i1</span> <span class=\"operator\">=</span> Integer.valueOf(i);</span><br><span class=\"line\">        <span class=\"comment\">//也可以写成,这个过程称为自动装箱</span></span><br><span class=\"line\">        <span class=\"type\">Integer</span> <span class=\"variable\">i2</span> <span class=\"operator\">=</span>i;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//自动拆箱</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> i1.intValue();</span><br><span class=\"line\">        <span class=\"comment\">//也可以写成</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">j1</span> <span class=\"operator\">=</span> i1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5）常见类和对象——日期和日历\"><a href=\"#5）常见类和对象——日期和日历\" class=\"headerlink\" title=\"5）常见类和对象——日期和日历\"></a>5）常见类和对象——日期和日历</h2><p>日期类:</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.常见类和对象;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.ParseException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.text.SimpleDateFormat;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Date;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">DateTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ParseException &#123;</span><br><span class=\"line\">        <span class=\"comment\">//Date :日期类</span></span><br><span class=\"line\">        <span class=\"comment\">//Calendar :日历类</span></span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>();</span><br><span class=\"line\">        System.out.println(d);</span><br><span class=\"line\"><span class=\"comment\">// Java格式化日期格式:</span></span><br><span class=\"line\">        <span class=\"comment\">//y(Y)-&gt;年-&gt; yyyy</span></span><br><span class=\"line\">        <span class=\"comment\">//m(M)-&gt;MM:月份，mm:分钟</span></span><br><span class=\"line\">        <span class=\"comment\">//d(D)-&gt;dd :一个月中的日期，D:一年中的日期</span></span><br><span class=\"line\">        <span class=\"comment\">//h(H)-&gt;h:12进制，HH:24进制</span></span><br><span class=\"line\">        <span class=\"comment\">//s(S)-&gt;s :秒,S:亳秘</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//Date -&gt;String</span></span><br><span class=\"line\">        <span class=\"type\">SimpleDateFormat</span> <span class=\"variable\">sdf</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">SimpleDateFormat</span>(<span class=\"string\">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">dateFormatString</span> <span class=\"operator\">=</span>sdf.format(d);</span><br><span class=\"line\">        System.out.println(dateFormatString);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//string -&gt;Date</span></span><br><span class=\"line\">        String dateString=<span class=\"string\">&quot;2022-06-01&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">Date</span> <span class=\"variable\">parseDate</span> <span class=\"operator\">=</span> sdf.parse(dateString);</span><br><span class=\"line\">        System.out.println(parseDate);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>日历类：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//拿到日历的对象</span></span><br><span class=\"line\"><span class=\"type\">Calendar</span> <span class=\"variable\">instance</span> <span class=\"operator\">=</span>Calendar.getInstance();</span><br><span class=\"line\"><span class=\"comment\">//打印日历中的各种属性</span></span><br><span class=\"line\">System.out.println(instance.get(Calendar.YEAR));   System.out.println(instance.get(Calendar.MONTH));</span><br><span class=\"line\">System.out.println(instance.get(Calendar.DATE));</span><br><span class=\"line\"><span class=\"comment\">//在日历中找到当前时间</span></span><br><span class=\"line\">instance.setTime(<span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">instance.add(Calendar.YEAR,<span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6）常见类和对象——工具类\"><a href=\"#6）常见类和对象——工具类\" class=\"headerlink\" title=\"6）常见类和对象——工具类\"></a>6）常见类和对象——工具类</h2><ul>\n<li>工具类不应该创建对象才能使用，也就意味着，可以直接使用类中的属性和方法，一般都声明为静态的。</li>\n<li>工具类对外提供的属性和方法都应该是公共的。</li>\n<li>为了使开发者方便，应该尽量提供丰富的方法和属性。</li>\n</ul>\n<h1 id=\"第五章-异常\"><a href=\"#第五章-异常\" class=\"headerlink\" title=\"第五章 异常\"></a>第五章 异常</h1><p>Java中的异常分为<strong>两大类</strong>：</p>\n<ul>\n<li><p>可以通过代码恢复正常逻辑执行的异常，称之为运行期异常：RuntimeException</p>\n</li>\n<li><p>不可以通过代码恢复正常执行逻辑的异常，称之为编译异常：</p>\n<p>Exception</p>\n</li>\n</ul>\n<p>异常处理的语法：</p>\n<p>try：尝试(放的是可能会出现问题的代码)</p>\n<p>catch：捕捉，捕捉多个异常时，优先选择小的异常，然后将其抛出</p>\n<p>finally：最终</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//可能会出现异常的代码</span></span><br><span class=\"line\">    <span class=\"comment\">//如果出现异常那么JVM会将异常进行封装，形成一个具体的异常类然后将这个异常抛出</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">catch</span>(抛出的异常对象 对象引用)&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//异常的解决方案</span></span><br><span class=\"line\">&#125;<span class=\"keyword\">catch</span>()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;<span class=\"keyword\">finally</span>()&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//最 终要执行的逻辑(不论异常处没处理)</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>异常的常见类型：</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// TODO 异常</span></span><br><span class=\"line\"><span class=\"comment\">//1.除数为0的算术异常:java.lang.ArithmeticException</span></span><br><span class=\"line\"><span class=\"comment\">//运行期异常</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(i!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> j= <span class=\"number\">10</span> /i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//2:空指针异常:java.lang.NullPointerException，调用了一个成员对象或成员方法为空(null)对象的属性或方法时，就会发生异常</span></span><br><span class=\"line\"><span class=\"type\">User3</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">System.out.println(user.tostring());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//3:索引越界，针对数组，字符串索引越界，针对字符串</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User3</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>如果方法中可能会出现问题，那么需要提前声明，告诉其他人，我的方法可能会出现问题。这时，我们需要使用<strong>throws</strong>关键字</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> ArithmeticException&#123;</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span><span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\">   user.test(i,j);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User8</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">(<span class=\"type\">int</span> i,<span class=\"type\">int</span> j)</span> <span class=\"keyword\">throws</span> ArithmeticException &#123;</span><br><span class=\"line\">System.out.println(i/j);</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>那么在运行期的异常，他不会抱任何问题，因为只要你的逻辑对了，代码就能继续运行，那么我们该如何让他出现提示，需要解决异常呢？下面这种方法，<strong>我们手动抛出异常对象，但是使用的是throw关键字，然后new出异常对象</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String args[])</span> <span class=\"keyword\">throws</span> Exception&#123;</span><br><span class=\"line\">    <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>();</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span><span class=\"number\">10</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\">    user.test(i,j);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User8</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">(<span class=\"type\">int</span> i,<span class=\"type\">int</span> j)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            System.out.println(i/j);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span>(ArithmeticException e)</span><br><span class=\"line\">\t\t<span class=\"comment\">//这里演示手动抛出异常</span></span><br><span class=\"line\">          <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Exception</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"（1）自定义异常\"><a href=\"#（1）自定义异常\" class=\"headerlink\" title=\"（1）自定义异常\"></a>（1）自定义异常</h4><p>看代码：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.Exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ZiDingYiException</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">username</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;admin&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">password</span> <span class=\"operator\">=</span><span class=\"string\">&quot;admin&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//对异常进行处理</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//可能出现异常的代码</span></span><br><span class=\"line\">            loginSystem(username,password);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (AccountException e)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;账号输入有误，请重新输入&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (PasswordException e)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;密码输入有误，请重新输入&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;                                                              <span class=\"comment\">//如果下面是运行期异常(RuntimeException)这里可以不用抛出异常</span></span><br><span class=\"line\">                                                                   <span class=\"comment\">//如果下面是编译期异常(Exception)，则需抛出异常</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">loginSystem</span><span class=\"params\">(String username,String password)</span> <span class=\"keyword\">throws</span> AccountException,PasswordException&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"string\">&quot;admin&quot;</span>.equals(username))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//创建异常对象</span></span><br><span class=\"line\">          <span class=\"keyword\">throw</span>  <span class=\"keyword\">new</span> <span class=\"title class_\">AccountException</span>(<span class=\"string\">&quot;用户名不正确&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"string\">&quot;admin&quot;</span>.equals(password))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span>  <span class=\"keyword\">new</span> <span class=\"title class_\">PasswordException</span>(<span class=\"string\">&quot;密码不正确&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;登录成功&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//账户异常</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AccountException</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">loginException</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">AccountException</span><span class=\"params\">(String message)</span> &#123;</span><br><span class=\"line\">       <span class=\"comment\">// 调用父类里面的方法，传入message参数，详细可以在代码中ctrl+左键点击查看</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>(message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//密码异常</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">PasswordException</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">loginException</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">PasswordException</span><span class=\"params\">(String message)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//自定义异常，如果这里继承运行期异常(RuntimeException)，那么上面就不需要抛出，如果是编译期异常(Exception),责需要抛出异常</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">loginException</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">RuntimeException</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"title function_\">loginException</span><span class=\"params\">(String message)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(message);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"第六章-Java中遇到的各种问题\"><a href=\"#第六章-Java中遇到的各种问题\" class=\"headerlink\" title=\"第六章 Java中遇到的各种问题\"></a>第六章 Java中遇到的各种问题</h1><h3 id=\"1-Mybatis与java\"><a href=\"#1-Mybatis与java\" class=\"headerlink\" title=\"(1)Mybatis与java\"></a>(1)Mybatis与java</h3><p>​        在<strong>Mybatis</strong>和java联合编写xml文件时，有关Mapper.xml（编写SQL的）文件中，增删改查标签中，使用<strong>parameterType属性指定传递参数类，resultType属性指定返回结果类型，resultMap标签完成当数据库表字段和Java实体类属性名或类型不一致时的手动映射，</strong>另外，SQL文中，where条件中只有一个参数时，推荐使用基本类型（int，short，char，byte，float，double，long，boolean）+String，当有多个参数时，使用Java实体类，接下来，我们来讲讲具体的用法。<br>来看示例：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">        <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--上面是文件头，下面是这个xml文件对应的mapper文件的路径--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;com.ruoyi.publicController.mapper.proDetailMapper&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;proDetailsResult&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;proSelectDetails&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;proName&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;pro_name&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;profounder&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;user_name&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;proTrack&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;pro_track&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;proScore&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;pro_score&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;countResult&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;proSelectDetails&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;countOne&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;countOne&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;countTwo&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;countTwo&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--查询总表所有项目信息--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectAllInfo&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;proDetailsResult&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;proSelectDetails&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">&quot;selectProDetailsVo&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">sql</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectProDetailsVo&quot;</span>&gt;</span></span><br><span class=\"line\">        SELECT DISTINCT pro_details3.pro_id, pro_name, pro_details3.pro_score, user_name, pro_track</span><br><span class=\"line\">        FROM pro_details3</span><br><span class=\"line\">                 INNER JOIN judges_score ON judges_score.pro_id = pro_details3.pro_id</span><br><span class=\"line\">                 INNER JOIN pro_coreteam ON pro_details3.pro_id = pro_coreteam.pro_id</span><br><span class=\"line\">                 INNER JOIN sys_user ON sys_user.user_id = pro_coreteam.student_id</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">sql</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--根据项目赛道查询项目信息--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectProDetailsByProTrack&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;proDetailsResult&quot;</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;proSelectDetails&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">refid</span>=<span class=\"string\">&quot;selectProDetailsVo&quot;</span>/&gt;</span></span><br><span class=\"line\">            where pro_track = #&#123;proTrack&#125;</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>1.parameterType</strong><br>定义在增删改查标签中的属性，<strong>指定SQL文中where条件的参数类型，</strong>可以是基本数据类型（8个）或String或者对象类型<br>例如，根据id查询name，如果数据库中定义的字段id是int类型，就可以指定parameterType的属性值是int，可以参看下边的代码。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt; select id=&quot;queryPersonNameById&quot;  parameterType=&quot;int&quot; resultType=&quot;String&quot;&gt;<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>2.resultType</strong><br>也是定义在增删改查标签中的属性，<strong>用于指定查询结果或增删改执行结果的类型</strong>，同样可以是<strong>基本数据类型+String+对象类型</strong>，这里需要注意的是，<strong>当查询结果是多条时，无需写List，MyBatis底层会自动为我们生成List&lt;数据类型&gt;，我们只需指定类型即可</strong>。<br>同样是上边的例子，根据id查询name，name在数据库中是varchar类型，resultType就指定成String类型，类型不区分大小写，尽量保持和Java一致，使用大写。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt; select id=&quot;queryPersonNameById&quot; parameterType=&quot;int&quot; resultType=&quot;String&quot;&gt;<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>3.resultMap</strong><br><strong>当实体类的属性名和数据库表字段名或类型不一致时使用</strong><br>例如，Person表中，定义的字段是id和name<br>Java实体类中，定义的是pid和pname，这种情况下，使用resultMap手动完成数据库和Java实体类属性的映射。<br>它是单独的&lt; resultMap&gt;标签，定义<code>id</code>(该属性是下面要用到的resultMap标签对应的值)，<code>type</code>（该属性指定了结果应该映射到的Java类的完全限定名或别名。）通常使用在查询标签中<br>例如下边的代码<br>id标签完成数据库主键的映射<br>result标签完成数据库非主键字段的映射<br>property属性指定java实体类中的属性名，column是数据库字段名</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">mapper</span></span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"keyword\">PUBLIC</span> <span class=\"string\">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"string\">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mapper</span> <span class=\"attr\">namespace</span>=<span class=\"string\">&quot;xxx.xxx.mapper.PersonMapper&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">resultMap</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;person&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;personMapping&quot;</span>&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">id</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;pid&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;id&quot;</span>/&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;pname&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;name&quot;</span>/&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;age&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;age&quot;</span>/&gt;</span></span><br><span class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">result</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;sex&quot;</span> <span class=\"attr\">column</span>=<span class=\"string\">&quot;sex&quot;</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">resultMap</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;queryAllPersonUseResultMap&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;personMapping&quot;</span>&gt;</span></span><br><span class=\"line\">    select * from person</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mapper</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","categories":[],"tags":[{"name":"Java学习","slug":"Java学习","permalink":"http://example.com/tags/Java%E5%AD%A6%E4%B9%A0/"}]},{"title":"记录Hadoop中HDFS命令统计词频错误","date":"2024-03-30T10:07:41.000Z","path":"2024/03/30/记录Hadoop中HDFS命令统计词频错误/","content":"<h1 id=\"关于这次错误\"><a href=\"#关于这次错误\" class=\"headerlink\" title=\"关于这次错误\"></a>关于这次错误</h1><p>我个人搭建了<code>Hadoop</code>集群，当词频统计这个案例的时候，我上传没问题但就是查看有问题，我点击查看文件时，报出了个这么一个错误</p>\n<p><code>Couldn&#39;t preview the file. NetworkError: Failed to execute &#39;send&#39; on &#39;XMLHttpRequest&#39;:xxx</code></p>\n<p>大概翻译就是:<code>无法预览文件。NetworkError：无法在“XMLHttpRequest”上执行“send”：</code></p>\n<p>百度了很多，很多人都在说是配置文件<code>hdfs-site.xml</code>文件中有个叫做</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.webhdfs.enabled<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这个的value值是false或者根本没有设置这一条属性，当然了，我属于后者，我的配置文件中并没有这项配置，但是我也照做了，然而在次启动后，依旧报同样的错误。</p>\n<p>实际上解决方法就是在windows上修改文件: <code>C:\\Windows\\System32\\drivers\\etc\\hosts增加内容（Hadoop集群中各节点及主机名的映射</code></p>\n<p>以我为例:</p>\n<p><code>192.168.121.160 主机名1</code></p>\n<p><code>192.168.121.161 主机名2</code></p>\n<p><code>192.168.121.161 主机名3</code></p>\n<p>重启，完美解决成功出现统计的词和文件内容。</p>\n","categories":[],"tags":[{"name":"Linux Error","slug":"Linux-Error","permalink":"http://example.com/tags/Linux-Error/"}]},{"title":"开发(基于ruoyiui)笔记","date":"2024-03-21T07:30:34.000Z","path":"2024/03/21/开发-基于ruoyiui-笔记/","content":"<h1 id=\"问题（一）在查询时参数没有带入\"><a href=\"#问题（一）在查询时参数没有带入\" class=\"headerlink\" title=\"问题（一）在查询时参数没有带入\"></a>问题（一）在查询时参数没有带入</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&lt;el-form-item label=&quot;项目赛道&quot; prop=&quot;proTrack&quot;&gt;*</span><br><span class=\"line\"></span><br><span class=\"line\">​    *&lt;el-select*</span><br><span class=\"line\"></span><br><span class=\"line\">​     *v-model=&quot;queryParams.proTrack&quot;*</span><br><span class=\"line\"></span><br><span class=\"line\">​     *placeholder=&quot;请选择项目赛道&quot;*</span><br><span class=\"line\"></span><br><span class=\"line\">​     *clearable*</span><br><span class=\"line\"></span><br><span class=\"line\">​     *@keyup.enter.native=&quot;handleQuery&quot;*</span><br><span class=\"line\"></span><br><span class=\"line\">​    *\\&gt;*</span><br><span class=\"line\"></span><br><span class=\"line\">​    *&lt;el-option v-for=&quot;item in proTrackList&quot;*</span><br><span class=\"line\"></span><br><span class=\"line\">​    *:key=&quot;item.key&quot;*</span><br><span class=\"line\"></span><br><span class=\"line\">​    *:label=&quot;item.proTrack&quot;*</span><br><span class=\"line\"></span><br><span class=\"line\">​    *:value=&quot;item.proTrack&quot;*</span><br><span class=\"line\"></span><br><span class=\"line\">​    *\\&gt;*</span><br><span class=\"line\"></span><br><span class=\"line\">​    *&lt;/el-option&gt;*</span><br><span class=\"line\"></span><br><span class=\"line\">​    *&lt;/el-select&gt;*</span><br><span class=\"line\"></span><br><span class=\"line\">   *&lt;/el-form-item&gt;*</span><br></pre></td></tr></table></figure>\n\n<p>这是一段vue代码,我出现的问题是再前端页面查询的时候无法带入proTrack这个参数。</p>\n<p>解决方法:因为我们proTrackList中没有value这个字段，导致我再绑定的时候:value&#x3D;”item.value”绑定出错，将value更换为proTrack成功在查询时候带入了参数proTrack</p>\n<p><img src=\"/2024/03/21/%E5%BC%80%E5%8F%91-%E5%9F%BA%E4%BA%8Eruoyiui-%E7%AC%94%E8%AE%B0/Users/48531\\OneDrive\\桌面\\hexo-blog\\source_posts\\开发-基于ruoyiui-笔记\\image-20240321174607944.png\" alt=\"image-20240321174607944\"></p>\n<p><img src=\"/2024/03/21/%E5%BC%80%E5%8F%91-%E5%9F%BA%E4%BA%8Eruoyiui-%E7%AC%94%E8%AE%B0/Users/48531\\OneDrive\\桌面\\hexo-blog\\source_posts\\开发-基于ruoyiui-笔记\\image-20240321174646796.png\" alt=\"image-20240321174646796\"></p>\n<p><code>还有一种没有带入参数的情况就是，有些需要参数的函数，你可能没有传入函数或者定义接受函数的变量。</code>那这时候我们就需要去定义这个函数对于变量的传与接。下面来举一个我的错误例子</p>\n<p>先来看我原本的写法</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">//查询小组列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">selectGroup</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span>=<span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"title function_\">selectGroupList</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">queryParams</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"variable language_\">this</span>.<span class=\"property\">tableList</span> = response.<span class=\"property\">rows</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"variable language_\">this</span>.<span class=\"property\">total</span> = response.<span class=\"property\">total</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//赛道改变清空组列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">selectOnChangeTrack</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">tableList</span> = [];</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"title function_\">selectGroup</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">Track</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>可以看<code>selectOnChangeTrack</code>这个函数里，我在调用 <code>this.selectGroup(this.Track);</code>时，我传入了参数<code>this.Track</code>，<code>this.Track</code>是选择框的数据，<code>proTrack</code>是查询参数。而我在上面的函数时，却没有接收传过来的参数<code>this.Track</code>\t,在vue中，<code>通常定义一个形参，在作为传来参数的载体，然后再将这个形参的值赋值给查询变量，这样就能完成参数的传递</code>，改动如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查询小组列表</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">selectGroup</span>(<span class=\"params\">tempdata</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//将形参tempdata赋值给查询参数proTrack，这样在查询时就会携带proTrack这个参数.</span></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">queryParams</span>.<span class=\"property\">proTrack</span> = tempdata</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span>=<span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"title function_\">selectGroupList</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">queryParams</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">tableList</span> = response.<span class=\"property\">rows</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">total</span> = response.<span class=\"property\">total</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<p>以上即是改正后的。改正后可以带入要传的参数了。</p>\n<h1 id=\"问题（二）数据库字段名称与后端java应该对应\"><a href=\"#问题（二）数据库字段名称与后端java应该对应\" class=\"headerlink\" title=\"问题（二）数据库字段名称与后端java应该对应\"></a>问题（二）数据库字段名称与后端java应该对应</h1><p>这是一段ruoyi对应的后端代码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;select id=<span class=\"string\">&quot;selectRecommendationList&quot;</span> parameterType=<span class=\"string\">&quot;Recommendation&quot;</span> resultMap=<span class=\"string\">&quot;RecommendationResult&quot;</span>&gt;</span><br><span class=\"line\">    &lt;include refid=<span class=\"string\">&quot;selectRecommendationVo&quot;</span>/&gt;</span><br><span class=\"line\">    &lt;where&gt;  </span><br><span class=\"line\">        &lt;<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;time != null &quot;</span>&gt; and pro_details3.time = #&#123;time&#125;&lt;/<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">        &lt;<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;proName != null  and proName != &#x27;&#x27;&quot;</span>&gt; and pro_name like <span class=\"title function_\">concat</span><span class=\"params\">(<span class=\"string\">&#x27;%&#x27;</span>, #&#123;proName&#125;, <span class=\"string\">&#x27;%&#x27;</span>)</span>&lt;/<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">        &lt;<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;proScore != null &quot;</span>&gt; <span class=\"type\">and</span> <span class=\"variable\">pro_score</span> <span class=\"operator\">=</span> #&#123;proScore&#125;&lt;/<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">        &lt;<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;proGroup != null  and proGroup != &#x27;&#x27;&quot;</span>&gt; <span class=\"type\">and</span> <span class=\"variable\">pro_group</span> <span class=\"operator\">=</span> #&#123;proGroup&#125;&lt;/<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">        &lt;<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;userName != null  and userName != &#x27;&#x27;&quot;</span>&gt; <span class=\"type\">and</span> <span class=\"variable\">user_name</span> <span class=\"operator\">=</span> #&#123;userName&#125;&lt;/<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">        &lt;<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;deptName != null  and deptName != &#x27;&#x27;&quot;</span>&gt; <span class=\"type\">and</span> <span class=\"variable\">dept_name</span> <span class=\"operator\">=</span> #&#123;deptName&#125;&lt;/<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">        &lt;<span class=\"keyword\">if</span> test=<span class=\"string\">&quot;proTrack !=null   and  proTrack != &#x27;&#x27;&quot;</span>&gt; and  pro_track=#&#123;proTrack&#125;&lt;/<span class=\"keyword\">if</span>&gt;</span><br><span class=\"line\">    &lt;/where&gt;</span><br><span class=\"line\">&lt;/select&gt;</span><br></pre></td></tr></table></figure>\n\n<p>mybaits中数据查询mapper文件中，值得注意的是在and后的字段名称**(比如uesr_name,dept_name,pro_track,pro_group等等)**要和数据库中的字段对应而前面的proGroup是实体类中我们自己定义的属性。</p>\n<p>不对应，就会报错</p>\n<p>以下这段代码是同样的道理，请注意数据字段是column后面的而实体类是property后面的，数据库字段要和自己的数据库中的字段一致(完全一致)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;resultMap type=<span class=\"string\">&quot;Recommendation&quot;</span> id=<span class=\"string\">&quot;RecommendationResult&quot;</span>&gt;</span><br><span class=\"line\">    &lt;result property=<span class=\"string\">&quot;proId&quot;</span>    column=<span class=\"string\">&quot;pro_id&quot;</span>    /&gt;</span><br><span class=\"line\">    &lt;result property=<span class=\"string\">&quot;proName&quot;</span>    column=<span class=\"string\">&quot;pro_name&quot;</span>    /&gt;</span><br><span class=\"line\">    &lt;result property=<span class=\"string\">&quot;proScore&quot;</span>    column=<span class=\"string\">&quot;pro_score&quot;</span>    /&gt;</span><br><span class=\"line\">    &lt;result property=<span class=\"string\">&quot;proGroup&quot;</span>    column=<span class=\"string\">&quot;pro_group&quot;</span>    /&gt;</span><br><span class=\"line\">    &lt;result property=<span class=\"string\">&quot;userName&quot;</span>    column=<span class=\"string\">&quot;user_name&quot;</span>    /&gt;</span><br><span class=\"line\">    &lt;result property=<span class=\"string\">&quot;deptName&quot;</span>    column=<span class=\"string\">&quot;dept_name&quot;</span>    /&gt;</span><br><span class=\"line\">    &lt;result property=<span class=\"string\">&quot;proTrack&quot;</span>     column=<span class=\"string\">&quot;pro_track&quot;</span>/&gt;</span><br><span class=\"line\">    &lt;result property=<span class=\"string\">&quot;proGroupId&quot;</span> column=<span class=\"string\">&quot;pro_group_Id&quot;</span>/&gt;</span><br><span class=\"line\">    &lt;result property=<span class=\"string\">&quot;proGroupName&quot;</span> column=<span class=\"string\">&quot;pro_group_name&quot;</span>/&gt;</span><br><span class=\"line\">    &lt;result property=<span class=\"string\">&quot;time&quot;</span>     column=<span class=\"string\">&quot;time&quot;</span>/&gt;</span><br><span class=\"line\">&lt;/resultMap&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"问题-三-对vue中v-for的理解\"><a href=\"#问题-三-对vue中v-for的理解\" class=\"headerlink\" title=\"问题(三)对vue中v-for的理解\"></a>问题(三)对vue中v-for的理解</h1><p>在Vue的<code>v-for</code>循环中，<code>:key</code>、<code>:label</code>和<code>:value</code>是用于绑定循环中每个元素的属性的特殊语法。</p>\n<ul>\n<li><strong><code>:key</code>用于指定循环中每个元素的唯一标识符。它是必需的，用于帮助Vue跟踪每个元素的身份，以便在更新DOM时进行高效的重用和重新排序。通常，你可以使用一个唯一的属性或索引作为<code>key</code>，确保在循环中的元素之间具有唯一性。</strong></li>\n<li><strong><code>:label</code>用于指定循环中每个选项的显示文本。它绑定了每个选项的显示值，这将在选择框中显示给用户。</strong></li>\n<li><strong>:value&#96;用于指定循环中每个选项的实际值。它绑定了每个选项的实际值，当用户选择某个选项时，该值将被传递给绑定的数据模型。</strong></li>\n</ul>\n<p>这些特殊语法（<code>:key</code>、<code>:label</code>和<code>:value</code>）是Vue中用于在循环中绑定属性的常见约定，但你也可以根据需要选择其他属性名称。重要的是确保在循环中的每个元素都有唯一的标识符作为<code>key</code>，以及适当的属性用于<code>label</code>和<code>value</code>。这样可以确保循环中的每个元素都能正确地显示和处理。</p>\n<h1 id=\"问题（四）理解一段代码的含义-以获取学院名称列表为例\"><a href=\"#问题（四）理解一段代码的含义-以获取学院名称列表为例\" class=\"headerlink\" title=\"问题（四）理解一段代码的含义(以获取学院名称列表为例)\"></a>问题（四）理解一段代码的含义(以获取学院名称列表为例)</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**获取学院名称函数 */</span><br><span class=\"line\"></span><br><span class=\"line\">  getDeptNameList()&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  this.loading = true;</span><br><span class=\"line\"></span><br><span class=\"line\">   listRecommendation(this.queryParams).then(response =&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​     this.deptNameList = response.rows;</span><br><span class=\"line\"></span><br><span class=\"line\">​     console.log(this.deptNameList)</span><br><span class=\"line\"></span><br><span class=\"line\">​     this.total = response.total;</span><br><span class=\"line\"></span><br><span class=\"line\">​     this.loading = false;</span><br><span class=\"line\"></span><br><span class=\"line\">​    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>下面对这段代码剖析：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getDeptNameList</span>(<span class=\"params\"></span>) &#123;  <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span> = <span class=\"literal\">true</span>; *<span class=\"comment\">// 设置 loading 状态为 true，表示正在加载数据*  </span></span><br><span class=\"line\"></span><br><span class=\"line\"> *<span class=\"comment\">// 调用 listRecommendation 函数，并传递 this.queryParams 参数*  </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">listRecommendation</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">queryParams</span>).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> &#123; </span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">deptNameList</span> = response.<span class=\"property\">rows</span>; *<span class=\"comment\">// 将返回的学院名称列表赋值给 this.deptNameList*    </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">deptNameList</span>); *<span class=\"comment\">// 打印学院名称列表到控制台*    </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">total</span> = response.<span class=\"property\">total</span>; *<span class=\"comment\">// 设置总数为返回结果的总数*    </span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">loading</span> = <span class=\"literal\">false</span>; *<span class=\"comment\">// 设置 loading 状态为 false，表示加载数据完成* </span></span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;); &#125;,</span><br></pre></td></tr></table></figure>\n\n<p>帮助理解</p>\n<h1 id=\"思路（一）选择框一限定选择框二的内容\"><a href=\"#思路（一）选择框一限定选择框二的内容\" class=\"headerlink\" title=\"思路（一）选择框一限定选择框二的内容\"></a>思路（一）选择框一限定选择框二的内容</h1><p>如果想实现两个选择框第一个选择框里面的所选择的内容可以改变第二个选择框里面的数据（比如选择了第一个框里面的2021年，那第二个选择框就会显示在2021里面有什么内容)</p>\n<p>可以考虑使用@change&#x3D;””来绑定一个变化，只要第一个选择框里面的内容变了，那么就会执行@change绑定的事件比如</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> //选择框一</span><br><span class=\"line\">&lt;el-form-item label=&quot;选择赛事:&quot; prop=&quot;time&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">​     &lt;el-select</span><br><span class=\"line\"></span><br><span class=\"line\">​      v-model=&quot;queryParams.time&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">​      placeholder=&quot;请选择参赛时间&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">​      clearable //表示是否可以清除选择框内容</span><br><span class=\"line\"></span><br><span class=\"line\">​      @change=&quot;handleSelectionChange1&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">​     \\&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">​      &lt;el-option v-for=&quot;dict in \t\t dict.type.events_year&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">​      :key=&quot;dict.key&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">​      :label=&quot;dict.value&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">​      :value=&quot;dict.value&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">​      &lt;/el-option&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">​     &lt;/el-select&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//选择框二</span><br><span class=\"line\">el-form-item label=&quot;&quot; prop=&quot;selectCompetition&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">​    &lt;el-select</span><br><span class=\"line\"></span><br><span class=\"line\">​     class=&quot;custom-select&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">​     v-model=&quot;queryParams.selectCompetition&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">​     placeholder=&quot;请选择赛事&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">​     clearable</span><br><span class=\"line\"></span><br><span class=\"line\">​     @keyup.enter.native=&quot;handleQuery&quot; //回车</span><br><span class=\"line\"></span><br><span class=\"line\">​    \\&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">​    &lt;el-option v-for=&quot; item in competitionList&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">​    :key=&quot;item.key&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">​    :label=&quot;item.eventName&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">​    :value=&quot;item.value&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">​    &lt;/el-option&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;/el-select&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//@change的所绑定事件的功能</span></span><br><span class=\"line\"> <span class=\"title function_\">handleSelectionChange1</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">queryParams</span>.<span class=\"property\">startTime</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">queryParams</span>.<span class=\"property\">time</span>; <span class=\"comment\">// Update the query parameter</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">queryParams</span>.<span class=\"property\">selectCompetition</span> = <span class=\"literal\">null</span>; <span class=\"comment\">// Clear the competition dropdown</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"property\">competitionList</span> = []; <span class=\"comment\">// Clear the competition list</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"variable language_\">this</span>.<span class=\"title function_\">getEventsList</span>(); <span class=\"comment\">// Call the function to fetch the updated competition list</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"问题（五）-在今天编写代码时候遇到了这么一个问题，就是关于添加数据前端页面他不给我显示。\"><a href=\"#问题（五）-在今天编写代码时候遇到了这么一个问题，就是关于添加数据前端页面他不给我显示。\" class=\"headerlink\" title=\"问题（五）:在今天编写代码时候遇到了这么一个问题，就是关于添加数据前端页面他不给我显示。\"></a>问题（五）:在今天编写代码时候遇到了这么一个问题，就是关于添加数据前端页面他不给我显示。</h1><p><img src=\"/2024/03/21/%E5%BC%80%E5%8F%91-%E5%9F%BA%E4%BA%8Eruoyiui-%E7%AC%94%E8%AE%B0/Users/48531\\OneDrive\\桌面\\hexo-blog\\source_posts\\开发-基于ruoyiui-笔记\\image-20240327175415722.png\" alt=\"image-20240327175415722\"></p>\n<p>查看发现是getfilename函数作怪，因为我的这个函数是要获取路径去分割，然而我并没有在数据库给出路径，所以这两个数据显示不出来，更改函数后成功显示，函数更改如下</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"title function_\">getfileName</span>(<span class=\"params\">path</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">if</span>(path)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"keyword\">return</span> path.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;/&#x27;</span>).<span class=\"title function_\">pop</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"keyword\">return</span> <span class=\"string\">&quot;暂无资料&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;,</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"方法1-在数据库中呢，我删除一个数据，由于这个数据关联很多表，那就需要一同删除，这可以利用触发器，以下是我在该项目中写道的触发器\"><a href=\"#方法1-在数据库中呢，我删除一个数据，由于这个数据关联很多表，那就需要一同删除，这可以利用触发器，以下是我在该项目中写道的触发器\" class=\"headerlink\" title=\"方法1:在数据库中呢，我删除一个数据，由于这个数据关联很多表，那就需要一同删除，这可以利用触发器，以下是我在该项目中写道的触发器\"></a>方法1:在数据库中呢，我删除一个数据，由于这个数据关联很多表，那就需要一同删除，这可以利用触发器，以下是我在该项目中写道的触发器</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">BEGIN</span></span><br><span class=\"line\">    <span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> pro_coreteam <span class=\"keyword\">WHERE</span> pro_id <span class=\"operator\">=</span> OLD.pro_id;</span><br><span class=\"line\"><span class=\"keyword\">END</span></span><br></pre></td></tr></table></figure>\n\n<p>该触发器是当我们根据项目id（pro_id）删除数据时，他会带着通过项目id关联的id里面的内容一同删除,删除的表名称、是<code>pro_coreteam</code></p>\n<p>4.2新添加了一个触发器代码如下</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DELIMITER <span class=\"operator\">/</span><span class=\"operator\">/</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TRIGGER</span> update_group_id</span><br><span class=\"line\">AFTER <span class=\"keyword\">INSERT</span> <span class=\"keyword\">ON</span> pro_mapping_group</span><br><span class=\"line\"><span class=\"keyword\">FOR</span> <span class=\"keyword\">EACH</span> <span class=\"type\">ROW</span></span><br><span class=\"line\"><span class=\"keyword\">BEGIN</span></span><br><span class=\"line\">    <span class=\"keyword\">UPDATE</span> pro_details3</span><br><span class=\"line\">    <span class=\"keyword\">SET</span> pro_group_id <span class=\"operator\">=</span> NEW.group_id</span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> pro_id <span class=\"operator\">=</span> NEW.pro_id;</span><br><span class=\"line\"><span class=\"keyword\">END</span>;</span><br><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span></span><br><span class=\"line\">DELIMITER ;</span><br></pre></td></tr></table></figure>\n\n<p>解释</p>\n<p>在这个触发器中，当在 <code>pro_mapping_group</code> 表中插入新的记录时，将会更新 <code>pro_details3</code> 表中对应 <code>pro_id</code> 的 <code>pro_group_id</code> 字段。这里假设 <code>pro_mapping_group</code> 表和 <code>pro_details3</code> 表通过 <code>pro_id</code> 字段关联。如果你的实际情况不同，请根据实际情况修改 <code>WHERE</code> 子句。</p>\n<p>请注意，这个触发器只在插入新的记录时触发，如果你更新 <code>pro_mapping_group</code> 表中的 <code>group_id</code> 字段，这个触发器不会触发。如果你希望在更新 <code>group_id</code> 时也触发，你需要创建一个额外的 <code>AFTER UPDATE</code> 触发器</p>\n<h1 id=\"方法2-如何写一个对话框即点击按钮弹出对话框？\"><a href=\"#方法2-如何写一个对话框即点击按钮弹出对话框？\" class=\"headerlink\" title=\"方法2:如何写一个对话框即点击按钮弹出对话框？\"></a>方法2:如何写一个对话框即点击按钮弹出对话框？</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;!-- ... --&gt;</span><br><span class=\"line\">  &lt;el-button type=&quot;success&quot; @click=&quot;showDialog&quot;&gt;导入互联网+大赛官网（大创网）项目资料&lt;/el-button&gt;</span><br><span class=\"line\">  &lt;el-dialog title=&quot;导入互联网+大赛官网（大创网）项目资料&quot; :visible.sync=&quot;dialogVisible&quot; width=&quot;800px&quot; top=&quot;5vh&quot; append-to-body&gt;</span><br><span class=\"line\">    &lt;!-- 对话框内容 --&gt;</span><br><span class=\"line\">    &lt;!-- ... --&gt;</span><br><span class=\"line\">  &lt;/el-dialog&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  // ...</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      dialogVisible: false, // 对话框可见性</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    showDialog() &#123;</span><br><span class=\"line\">      this.dialogVisible = true; // 点击按钮时显示对话框</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    // 其他方法</span><br><span class=\"line\">    // ...</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n\n<h1 id=\"方法3-如何在插入数据时携带其他参数\"><a href=\"#方法3-如何在插入数据时携带其他参数\" class=\"headerlink\" title=\"方法3:如何在插入数据时携带其他参数\"></a>方法3:如何在插入数据时携带其他参数</h1><p>新建你要插入的属性比如我下面的</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Excel(name = &quot;学生账号&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Long StuNumber;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** 学生id*/</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> Long userId;</span><br></pre></td></tr></table></figure>\n\n<p>在服务层写好定义的方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">insertCore</span><span class=\"params\">(ProCoreteam proCoreteam)</span>;</span><br></pre></td></tr></table></figure>\n\n<p>实现类中实现方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">insertCore</span><span class=\"params\">(ProCoreteam proCoreteam)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> proManagerMapper.insertCore(proCoreteam);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在<code>mapper</code>中定义方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">insertCore</span><span class=\"params\">(ProCoreteam proCoreteam)</span>;</span><br></pre></td></tr></table></figure>\n\n<p>在<code>xml</code>文件中使用方法</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insertCore&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;ProCoreteam&quot;</span>  &gt;</span></span><br><span class=\"line\">    insert into pro_coreteam</span><br><span class=\"line\">        (pro_id,student_id) value (#&#123;proId&#125;,#&#123;studentId&#125;)</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>同理按照以上步骤创建<code>stuNumber</code>的方法</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectstuIdBystuNumber&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;long&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;ProManagerResult&quot;</span>&gt;</span></span><br><span class=\"line\">    select user_id from sys_user where phonenumber = #&#123;stuNumber&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>关键点在下面，我们要先获取插入完成以后的proid</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--      </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span>&gt;</span></span><br><span class=\"line\">//获取插入完以后的proid</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;Long&quot;</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">&quot;proId&quot;</span> <span class=\"attr\">order</span>=<span class=\"string\">&quot;AFTER&quot;</span>&gt;</span></span><br><span class=\"line\">            select LAST_INSERT_ID()</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>1.最外层的<code>&lt;insert&gt;&lt;/insert&gt;</code>没有返回属性<code>（resultType）</code>，但是里面的<code>&lt;selectKey&gt;&lt;/selectKey&gt;</code>是有返回值类型的。</li>\n<li>2.<code>order=&quot;AFTER&quot;</code>表示先执行插入，之后才执行<code>selectkey</code>语句的。</li>\n<li>3.<code>select @@identity</code>和<code>select LAST_INSERT_ID()</code>都表示选出刚刚插入的最后一条数据的id。</li>\n<li>4.实体类中id属性字段一定需要set以及get方法</li>\n<li>5.此时，接口中仍不需要有返回值，框架会自动将值注入到我们<code>insert</code>的那个对象中，我们可以直接使用就可以了。</li>\n</ul>\n<p>其实，我们的接口中可以有返回值，但是这个返回值不是id,而是表示<strong>插入后影响的行数</strong>，此时sql中仍和上面一样，不需要写返回值。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">insert</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;insertStudentCacheId&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;Student&quot;</span>&gt;</span></span><br><span class=\"line\">    insert into student(name,age,score) values(#&#123;name&#125;,#&#123;age&#125;,#&#123;score&#125;)</span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 指定结果类型resultType，keyProperty是属性，自动返回到属性id中，order是次序，after是指获取id是在于插入后 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">selectKey</span> <span class=\"attr\">resultType</span>=<span class=\"string\">&quot;int&quot;</span> <span class=\"attr\">keyProperty</span>=<span class=\"string\">&quot;id&quot;</span> <span class=\"attr\">order</span>=<span class=\"string\">&quot;AFTER&quot;</span>&gt;</span></span><br><span class=\"line\">        select @@identity</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">selectKey</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">insert</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>最最最核心的一步</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//执行完以后主键自增，获取到自增的proId所以要先执行</span></span><br><span class=\"line\">proManagerMapper.insertProManager(proManager);</span><br><span class=\"line\"><span class=\"comment\">//创建实体类ProManager的对象S存储通过学生账号获得stuid</span></span><br><span class=\"line\"><span class=\"type\">ProManager</span> <span class=\"variable\">S</span> <span class=\"operator\">=</span>  proManagerMapper.selectstuIdBystuNumber(proManager.getStuNumber());</span><br><span class=\"line\"><span class=\"comment\">//带参数的构建对象方法,上面已经获取到了proId和studentId所以下面创建ProCoreteam的对象p_core存储这两个id</span></span><br><span class=\"line\">ProCoreteam p_core=<span class=\"keyword\">new</span> <span class=\"title class_\">ProCoreteam</span>(proManager.getProId(),S.getUserId());</span><br><span class=\"line\"><span class=\"comment\">//调用插入方法插入id，由于是个导入过程所以会在导入过程中执行以上内容自动插入，这样就携带了其他参数</span></span><br><span class=\"line\">proManagerMapper.insertCore(p_core);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"问题（六）基于ruoyiUI新建对话框的一些属性问题\"><a href=\"#问题（六）基于ruoyiUI新建对话框的一些属性问题\" class=\"headerlink\" title=\"问题（六）基于ruoyiUI新建对话框的一些属性问题\"></a>问题（六）基于<code>ruoyiUI</code>新建对话框的一些属性问题</h1><p>我们首先新建一个对话框，代码如下(我这个时<code>ruoyiUI</code>的对话框建法)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-dialog  :title=&quot;title&quot;    :visible.sync=&quot;open&quot; width=&quot;1500px&quot; append-to-body&gt; &lt;/el-dialog&gt;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>:title=&quot;title&quot;</code>：此属性设置对话框的标题。<code>title</code> 应该是你的 Vue 实例的 data 属性之一，用来存放对话框的标题。<code>:</code> 前缀表示这是一个动态属性，它的值会被解析为 JavaScript 表达式。</li>\n<li><code>:visible.sync=&quot;open&quot;</code>：此属性控制对话框的可见性。如果 <code>open</code> 是 <code>true</code>，对话框就会显示；如果 <code>open</code> 是 <code>false</code>，对话框就会隐藏。<code>.sync</code> 修饰符表示这个属性是双向绑定的：当对话框的可见性改变时，<code>open</code> 的值也会相应地改变（对话框自带的<code>×</code>）。</li>\n<li><code>width=&quot;1500px&quot;</code>：此属性设置对话框的宽度。在这个例子中，对话框的宽度被设置为 1500 像素。</li>\n<li><code>append-to-body</code>：此属性表示对话框将被附加到 <code>body</code> 元素。这可以防止对话框被其他 CSS 影响，确保它能正确地显示在其他元素之上。这是一个布尔属性，如果存在，其值就是 <code>true</code>。</li>\n</ul>\n<h1 id=\"方法4-如何获取当前行id？\"><a href=\"#方法4-如何获取当前行id？\" class=\"headerlink\" title=\"方法4: 如何获取当前行id？\"></a>方法4: 如何获取<code>当前行id</code>？</h1><p>面对这个问题我只想说，这可真是让我想的酣畅淋漓的一次啊，为什么这么说？先来看看我犯了什么错误把<br>首先，我当时一心只想着获取<code>当前行id</code>，但是却忽视了原表格是一个静态表格这个前提。所以我花了快一个小时，唉还好脑子转得快(快什么，要是快的话早想到了)突然意识到了，这是<code>一个静态表格</code>，我去哪里动态获取当前行？</p>\n<p>其次，因为脑子当时很热，一点思路也没有，所以就乱撞，白白荒废了时间。</p>\n<p>接下来，让我来整理获取当前行id的一个思路</p>\n<p>首先想，你要在哪一行操作，好的定位到这一行，要用<code>&lt;template&gt;&lt;/template&gt;</code>标签，具体写法如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;el-table-column prop=&quot;selectPro&quot; label=&quot;查看项目&quot; width=&quot;208&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;el-button </span><br><span class=\"line\"></span><br><span class=\"line\">   class=&quot;ebtn1&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">   style=&quot;color: white;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">   @click=&quot;getAllocationList(scope.row.groupId)&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">   \\&gt;查看&lt;/el-button&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"> &lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/el-table-column&gt;</span><br></pre></td></tr></table></figure>\n\n<p>比如我就是这一行要注意了，绑定点击事件的时候，必须加<code>scope.row.xxxx</code>其中的<code>xxxx</code>是你要<code>获取的什么什么id</code>，那么这样你就可以获取到当前行的id了</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getAllocationList</span>(<span class=\"params\">groupId</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(groupId)</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"title function_\">alreadyAllocation</span>(groupId).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">alAllocationList</span> = response.<span class=\"property\">rows</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">total</span> = response.<span class=\"property\">total</span>;</span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>可以在你所用的时间<code>console.log(groupId)</code>你获取的id然后查看控制台有没有对应的id输出，然后传递参数就可以了。</p>\n<p>你甚至还可以这么写</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getAllocationList</span>(<span class=\"params\">groupId</span>)&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 输出传入的 groupId</span></span><br><span class=\"line\">   <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(groupId)</span><br><span class=\"line\">    <span class=\"comment\">// 创建一个新对象，包含 groupId</span></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> params = &#123;groupId&#125;</span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t<span class=\"comment\">//传递参数</span></span><br><span class=\"line\">   <span class=\"title function_\">alreadyAllocation</span>(params).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">alAllocationList</span> = response.<span class=\"property\">rows</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"property\">total</span> = response.<span class=\"property\">total</span>;</span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>也是可以的，ok今天就写这么多0.0</p>\n<h1 id=\"问题6-在传入参数时的错误\"><a href=\"#问题6-在传入参数时的错误\" class=\"headerlink\" title=\"问题6:在传入参数时的错误\"></a>问题6:在传入参数时的错误</h1><p>报错是这样对的</p>\n<p> <code>Error: nested exception is org.apache.ibatis.binding.BindingException: Parameter &#39;groupId&#39; not found. Available parameters are [arg1, arg0, param1, param2]</code> 翻译一下就是</p>\n<p><code>错误：嵌套异常是 org.apache.ibatis.binding.BindingException：找不到参数“groupId”。可用参数为 [arg1， arg0， param1， param2]</code></p>\n<p>这是我传入参数的函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">getAllocationList</span>(<span class=\"params\">row</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">const</span> proTrack = <span class=\"variable language_\">this</span>.<span class=\"property\">Track</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">const</span> groupId=row.<span class=\"property\">groupId</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">const</span> groupName=row.<span class=\"property\">groupName</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"title function_\">alreadyAllocation</span>(groupId,proTrack).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"variable language_\">this</span>.<span class=\"property\">alAllocationList</span> = response.<span class=\"property\">data</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"comment\">// console.log(this.alAllocationList)</span></span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"variable language_\">this</span>.<span class=\"title function_\">sendArrayToParent</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">alAllocationList</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"variable language_\">this</span>.<span class=\"title function_\">sendArrayToParent2</span>(groupName);</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"comment\">// console.log(tableList);</span></span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"variable language_\">this</span>.<span class=\"property\">total</span> = response.<span class=\"property\">total</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"variable language_\">this</span>.<span class=\"property\">loading</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>这是js里面对应的接口</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">alreadyAllocation</span>(<span class=\"params\">groupId,proTrack</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"title function_\">request</span>(&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"attr\">url</span>:  <span class=\"string\">&#x27;/project/csxmfp/group/&#x27;</span> + groupId +<span class=\"string\">&#x27;/&#x27;</span>+ proTrack,</span><br><span class=\"line\"></span><br><span class=\"line\">​    <span class=\"attr\">method</span>: <span class=\"string\">&#x27;get&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>报错问题是<code>gruopId</code>找不到，可用参数给出了<code>[arg1, arg0, param1, param2]</code> 这四个参数，这时我就在想，那是不是传入的参数得用这四个中的几个呢？于是我检查了后端，在处理器(proAllocationController)中打印了我从前端带过来的两个参数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 通过赛道名称和小组获取参赛项目分配详细信息</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@PreAuthorize(&quot;@ss.hasPermi(&#x27;project:csxmfp:querybygroupId&#x27;)&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(value = &quot;group/&#123;groupId&#125;/&#123;trackName&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> AjaxResult <span class=\"title function_\">getInfoByGroupId</span><span class=\"params\">(<span class=\"meta\">@PathVariable(&quot;groupId&quot;)</span> Long groupId,<span class=\"meta\">@PathVariable(&quot;trackName&quot;)</span> String trackName)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        System.out.println(groupId);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;aaaa&quot;</span>+trackName);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> success(proAllocationService.selectGroupProjectByGroupId(groupId,trackName));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>控制台输出</p>\n<p><img src=\"/2024/03/21/%E5%BC%80%E5%8F%91-%E5%9F%BA%E4%BA%8Eruoyiui-%E7%AC%94%E8%AE%B0/Users/48531\\OneDrive\\桌面\\hexo-blog\\source_posts\\开发-基于ruoyiui-笔记\\image-20240403220611894.png\" alt=\"image-20240403220611894\"></p>\n<p>可以看到控制台是有<code>groupId</code>的输出<code>1</code>这就是说拿到了前端数据那为什么后端确说我没有定义呢？检查xml文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectGroupProjectByGroupId&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;GroupProject&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;GroupProjectresultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    SELECT</span><br><span class=\"line\">        pro_details3.pro_id,</span><br><span class=\"line\">        pro_details3.pro_name,</span><br><span class=\"line\">        pro_details3.pro_logo,</span><br><span class=\"line\">        pro_details3.pro_track,</span><br><span class=\"line\">        pro_details3.pro_group_id</span><br><span class=\"line\">    FROM</span><br><span class=\"line\">        pro_details3</span><br><span class=\"line\">            INNER JOIN</span><br><span class=\"line\">        pro_mapping_group ON pro_details3.pro_id = pro_mapping_group.pro_id</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">        pro_mapping_group.group_id = #&#123;group_id&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;proTrack != &#x27;null&#x27; and proTrack != &#x27;&#x27; and arg1!= null&quot;</span>&gt;</span> and pro_details3.pro_track = #&#123;proTrack&#125;<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">    ORDER BY</span><br><span class=\"line\">        pro_details3.pro_id;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>于是就想到会不会是参数的传递问题呢？于是我就尝试用<code>arg0</code>代替<code>groupId</code>，用<code>age1</code>代替了<code>proTrack</code>,下面是更新完xml文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;selectGroupProjectByGroupId&quot;</span> <span class=\"attr\">parameterType</span>=<span class=\"string\">&quot;GroupProject&quot;</span> <span class=\"attr\">resultMap</span>=<span class=\"string\">&quot;GroupProjectresultMap&quot;</span>&gt;</span></span><br><span class=\"line\">    SELECT</span><br><span class=\"line\">        pro_details3.pro_id,</span><br><span class=\"line\">        pro_details3.pro_name,</span><br><span class=\"line\">        pro_details3.pro_logo,</span><br><span class=\"line\">        pro_details3.pro_track,</span><br><span class=\"line\">        pro_details3.pro_group_id</span><br><span class=\"line\">    FROM</span><br><span class=\"line\">        pro_details3</span><br><span class=\"line\">            INNER JOIN</span><br><span class=\"line\">        pro_mapping_group ON pro_details3.pro_id = pro_mapping_group.pro_id</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">        pro_mapping_group.group_id = #&#123;arg0&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">if</span> <span class=\"attr\">test</span>=<span class=\"string\">&quot;arg1 != &#x27;null&#x27; and arg1 != &#x27;&#x27; and arg1!= null&quot;</span>&gt;</span> and pro_details3.pro_track = #&#123;arg1&#125;<span class=\"tag\">&lt;/<span class=\"name\">if</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">where</span>&gt;</span></span><br><span class=\"line\">    ORDER BY</span><br><span class=\"line\">        pro_details3.pro_id;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>运行代码，成功传递了数据，问题解决了。你要是问我为什么这样做，其实我也不清楚，但是通过报错信息给出了<code>可用的</code>四个参数，所以说有错误还是要从报错信息入手啊 </p>\n","categories":[],"tags":[{"name":"java和vue开发中遇到的错误以及如何改正和对他们的理解整理(参加的项目)","slug":"java和vue开发中遇到的错误以及如何改正和对他们的理解整理-参加的项目","permalink":"http://example.com/tags/java%E5%92%8Cvue%E5%BC%80%E5%8F%91%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%94%99%E8%AF%AF%E4%BB%A5%E5%8F%8A%E5%A6%82%E4%BD%95%E6%94%B9%E6%AD%A3%E5%92%8C%E5%AF%B9%E4%BB%96%E4%BB%AC%E7%9A%84%E7%90%86%E8%A7%A3%E6%95%B4%E7%90%86-%E5%8F%82%E5%8A%A0%E7%9A%84%E9%A1%B9%E7%9B%AE/"}]},{"title":"SpingCloud学习","date":"2023-12-10T02:04:18.000Z","path":"2023/12/10/SpingCloud学习/","content":"<h2 id=\"1-系统架构演变概述\"><a href=\"#1-系统架构演变概述\" class=\"headerlink\" title=\"1. 系统架构演变概述\"></a>1. 系统架构演变概述</h2><p><strong>目标</strong>：了解项目架构的演变历程</p>\n<p><strong>小结</strong>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR;</span><br><span class=\"line\">1[集中式架构] --&gt; 2[垂直拆分]</span><br><span class=\"line\">2 --&gt; 3[分布式服务]</span><br><span class=\"line\">3 --&gt; 4[SOA面向服务架构]</span><br><span class=\"line\">4 --&gt; 5[微服务架构]</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-微服务架构说明\"><a href=\"#2-微服务架构说明\" class=\"headerlink\" title=\"2. 微服务架构说明\"></a>2. 微服务架构说明</h2><p><strong>目标</strong>：了解SOA与微服务架构的区别以及说出微服务架构的特点</p>\n<p><strong>分析</strong>：</p>\n<p>SOA使用了ESB组件的面向服务架构：ESB自身实现复杂；应用服务粒度较大，所有服务之间的通信都经过ESB会降低通信速度；部署、测试ESB比较麻烦。</p>\n<p><strong>小结</strong>：</p>\n<p><strong>微服务架构</strong>：是一套使用小服务或者单一业务来开发单个应用的方式或途径。</p>\n<p>微服务架构特点：</p>\n<ul>\n<li>单一职责</li>\n<li>服务粒度小</li>\n<li>面向服务（对外暴露REST api）</li>\n<li>服务之间相互独立</li>\n</ul>\n<p>与使用ESB的SOA架构的区别：微服务架构没有使用ESB，有服务治理注册中心；业务粒度小。</p>\n<h2 id=\"3-服务调用方式说明\"><a href=\"#3-服务调用方式说明\" class=\"headerlink\" title=\"3. 服务调用方式说明\"></a>3. 服务调用方式说明</h2><p><strong>目标</strong>：能够说出服务调用方式种类</p>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>RPC：基于socket，速度快，效率高；webservice、dubbo</li>\n<li>HTTP：基于TCP，封装比较臃肿；对服务和调用方没有任何技术、语言的限定，自由灵活；RESTful，Spring Cloud</li>\n</ul>\n<h2 id=\"4-Spring-RestTemplate示例工程导入\"><a href=\"#4-Spring-RestTemplate示例工程导入\" class=\"headerlink\" title=\"4. Spring RestTemplate示例工程导入\"></a>4. Spring RestTemplate示例工程导入</h2><p><strong>目标</strong>：了解Spring RestTemplate的应用</p>\n<p><strong>分析</strong>：</p>\n<p>一般情况下有如下三种http客户端工具类包都可以方便的进行http服务调用：</p>\n<ul>\n<li>httpClient</li>\n<li>okHttp</li>\n<li>JDK原生URLConnection</li>\n</ul>\n<p>spring 提供了RestTemplate的工具类对上述的3种http客户端工具类进行了封装，可在spring项目中使用RestTemplate进行服务调用。</p>\n<p><strong>小结</strong>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RunWith(SpringRunner.class)</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootTest</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">RestTemplateTest</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RestTemplate restTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;http://localhost/user/8&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//restTemplate可以对json格式字符串进行反序列化</span></span><br><span class=\"line\">        <span class=\"type\">User</span> <span class=\"variable\">user</span> <span class=\"operator\">=</span> restTemplate.getForObject(url, User.class);</span><br><span class=\"line\">        System.out.println(user);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"5-Spring-Cloud概述\"><a href=\"#5-Spring-Cloud概述\" class=\"headerlink\" title=\"5. Spring Cloud概述\"></a>5. Spring Cloud概述</h2><p><strong>目标</strong>：Spring Cloud整合的组件和版本特征</p>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>整合的组件可以有很多组件；常见的组件有：eureka注册中心，Gateway网关，Ribbon负载均衡，Feign服务调用，Hystrix熔断器。在有需要的时候项目添加对于的启动器依赖即可。</li>\n<li>版本特征：以英文单词命名（伦敦地铁站名）</li>\n</ul>\n<h2 id=\"6-创建微服务工程\"><a href=\"#6-创建微服务工程\" class=\"headerlink\" title=\"6. 创建微服务工程\"></a>6. 创建微服务工程</h2><p><strong>目标</strong>：创建微服务父工程heima-springcloud、用户服务工程user-service、服务消费工程consumer-demo</p>\n<p><strong>分析</strong>：</p>\n<p>需求：查询数据库中的用户数据并输出到浏览器</p>\n<ul>\n<li>父工程heima-springcloud：添加spring boot父坐标和管理其它组件的依赖</li>\n<li>用户服务工程user-service：整合mybatis查询数据库中用户数据；提供查询用户服务</li>\n<li>服务消费工程consumer-demo：利用查询用户服务获取用户数据并输出到浏览器</li>\n</ul>\n<p><strong>小结</strong>：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- springCloud --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>通过 <code>scope</code> 的import可以继承 <code>spring-cloud-dependencies</code> 工程中的依赖</p>\n<h2 id=\"7-搭建配置user-service工程\"><a href=\"#7-搭建配置user-service工程\" class=\"headerlink\" title=\"7. 搭建配置user-service工程\"></a>7. 搭建配置user-service工程</h2><p><strong>目标</strong>：配置user-service工程并能够根据用户id查询数据库中用户</p>\n<p><strong>分析</strong>：</p>\n<p>需求：可以访问<a href=\"http://localhost:9091/user/8%E8%BE%93%E5%87%BA%E7%94%A8%E6%88%B7%E6%95%B0%E6%8D%AE\">http://localhost:9091/user/8输出用户数据</a></p>\n<p>实现步骤：</p>\n<ol>\n<li>添加启动器依赖（web、通用Mapper）；</li>\n<li>创建启动引导类和配置文件；</li>\n<li>修改配置文件中的参数；</li>\n<li>编写测试代码（UserMapper，UserService，UserController）；</li>\n<li>测试</li>\n</ol>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>添加启动器依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 通用Mapper启动器 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>tk.mybatis<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mapper-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- mysql驱动 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>mysql<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>mysql-connector-java<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>编写配置文件</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">9091</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">datasource:</span></span><br><span class=\"line\">    <span class=\"attr\">driver-class-name:</span> <span class=\"string\">com.mysql.jdbc.Driver</span></span><br><span class=\"line\">    <span class=\"attr\">url:</span> <span class=\"string\">jdbc:mysql://localhost:3306/springcloud</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">root</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">root</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">mybatis:</span></span><br><span class=\"line\">  <span class=\"attr\">type-aliases-package:</span> <span class=\"string\">com.itheima.user.pojo</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"8-搭建配置consumer-demo工程\"><a href=\"#8-搭建配置consumer-demo工程\" class=\"headerlink\" title=\"8. 搭建配置consumer-demo工程\"></a>8. 搭建配置consumer-demo工程</h2><p><strong>目标</strong>：编写测试类使用restTemplate访问user-service的路径根据id查询用户</p>\n<p><strong>分析</strong>：</p>\n<p>需求：访问<a href=\"http://localhost:8080/consumer/8\">http://localhost:8080/consumer/8</a> 使用RestTemplate获取<a href=\"http://localhost:9091/user/8%E7%9A%84%E6%95%B0%E6%8D%AE\">http://localhost:9091/user/8的数据</a></p>\n<p>实现步骤：</p>\n<ol>\n<li>添加启动器依赖；</li>\n<li>创建启动引导类（注册RestTemplate）和配置文件；</li>\n<li>编写测试代码（ConsumerController中使用restTemplate访问服务获取数据）</li>\n<li>测试</li>\n</ol>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>服务管理<br>如何自动注册和发现<br>如何实现状态监管<br>如何实现动态路由</li>\n<li>服务如何实现负载均衡</li>\n<li>服务如何解决容灾问题</li>\n<li>服务如何实现统一配置</li>\n</ul>\n<p>上述的问题都可以通过Spring Cloud的各种组件解决。</p>\n<h2 id=\"9-Eureka注册中心说明\"><a href=\"#9-Eureka注册中心说明\" class=\"headerlink\" title=\"9. Eureka注册中心说明\"></a>9. Eureka注册中心说明</h2><p><strong>目标</strong>：说出Eureka的主要功能</p>\n<p><strong>小结</strong>：</p>\n<p>Eureka的主要功能是进行服务管理，定期检查服务状态，返回服务地址列表。</p>\n<p><img src=\"/2023/12/10/SpingCloud%E5%AD%A6%E4%B9%A0/Users/48531\\OneDrive\\桌面\\hexo-blog\\source_posts\\SpingCloud学习\\1560439174201-1709728468837-5.png\" alt=\"1560439174201\"></p>\n<h2 id=\"10-搭建eureka-server工程\"><a href=\"#10-搭建eureka-server工程\" class=\"headerlink\" title=\"10. 搭建eureka-server工程\"></a>10. 搭建eureka-server工程</h2><p><strong>目标</strong>：添加eureka对应依赖和编写引导类搭建eureka服务并可访问eureka服务界面</p>\n<p><strong>分析</strong>：</p>\n<p>Eureka是服务注册中心，只做服务注册；自身并不提供服务也不消费服务。可以搭建web工程使用Eureka，可以使用Spring Boot方式搭建。</p>\n<p>搭建步骤：</p>\n<ol>\n<li>创建工程；</li>\n<li>添加启动器依赖；</li>\n<li>编写启动引导类（添加Eureka的服务注解）和配置文件；</li>\n<li>修改配置文件（端口，应用名称…）；</li>\n<li>启动测试</li>\n</ol>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>启动器依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>配置文件</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">10086</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">eureka-server</span></span><br><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">service-url:</span></span><br><span class=\"line\">      <span class=\"comment\"># eureka 服务地址，如果是集群的话；需要指定其它集群eureka地址</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://127.0.0.1:10086/eureka</span></span><br><span class=\"line\">    <span class=\"comment\"># 不注册自己</span></span><br><span class=\"line\">    <span class=\"attr\">register-with-eureka:</span> <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"comment\"># 不拉取服务</span></span><br><span class=\"line\">    <span class=\"attr\">fetch-registry:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"11-服务注册与发现\"><a href=\"#11-服务注册与发现\" class=\"headerlink\" title=\"11. 服务注册与发现\"></a>11. 服务注册与发现</h2><p><strong>目标</strong>：将user-service的服务注册到eureka并在consumer-demo中可以根据服务名称调用</p>\n<p><strong>分析</strong>：</p>\n<ul>\n<li>服务注册：在服务提供工程user-service上添加Eureka客户端依赖；自动将服务注册到EurekaServer服务地址列表。<ul>\n<li>添加依赖；</li>\n<li>改造启动引导类；添加开启Eureka客户端发现的注解；</li>\n<li>修改配置文件；设置Eureka 服务地址</li>\n</ul>\n</li>\n<li>服务发现：在服务消费工程consumer-demo上添加Eureka客户端依赖；可以使用工具类根据服务名称获取对应的服务地址列表。<ul>\n<li>添加依赖；</li>\n<li>改造启动引导类；添加开启Eureka客户端发现的注解；</li>\n<li>修改配置文件；设置Eureka 服务地址；</li>\n<li>改造处理器类ConsumerController，可以使用工具类DiscoveryClient根据服务名称获取对应服务地址列表。</li>\n</ul>\n</li>\n</ul>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>添加Eureka客户端依赖；</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>添加启动引导类注解；</p>\n<p><img src=\"/2023/12/10/SpingCloud%E5%AD%A6%E4%B9%A0/Users/48531\\OneDrive\\桌面\\hexo-blog\\source_posts\\SpingCloud学习\\1560519608668-1709728458655-3.png\" alt=\"1560519608668\"></p>\n</li>\n<li><p>修改配置</p>\n</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">consumer-demo</span></span><br><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">service-url:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://127.0.0.1:10086/eureka</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"12-Eureka-Server高可用配置\"><a href=\"#12-Eureka-Server高可用配置\" class=\"headerlink\" title=\"12. Eureka Server高可用配置\"></a>12. Eureka Server高可用配置</h2><p><strong>目标</strong>：可以启动两台eureka-server实例；在eureka管理界面看到两个实例</p>\n<p><strong>分析</strong>：</p>\n<p>Eureka Server是一个web应用，可以启动多个实例（配置不同端口）保证Eureka Server的高可用。</p>\n<p><strong>小结</strong>：</p>\n<p><strong>高可用配置</strong>：将Eureka Server作为一个服务注册到其它Eureka Server，这样多个Eureka Server之间就能够互相发现对方，同步服务，实现Eureka Server集群。</p>\n<h2 id=\"13-Eureka客户端与服务端配置\"><a href=\"#13-Eureka客户端与服务端配置\" class=\"headerlink\" title=\"13. Eureka客户端与服务端配置\"></a>13. Eureka客户端与服务端配置</h2><p><strong>目标</strong>：配置eureka客户端user-service的注册、续约等配置项，配置eureka客户端consumer-demo的获取服务间隔时间；了解失效剔除和自我保护</p>\n<p><strong>分析</strong>：</p>\n<ul>\n<li>Eureka客户端工程<ul>\n<li>user-service 服务提供<ul>\n<li>服务地址使用ip方式</li>\n<li>续约</li>\n</ul>\n</li>\n<li>consumer-demo 服务消费<ul>\n<li>获取服务地址的频率</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Eureka服务端工程 eureka-server<ul>\n<li>失效剔除</li>\n<li>自我保护</li>\n</ul>\n</li>\n</ul>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>user-service</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">service-url:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://127.0.0.1:10086/eureka</span></span><br><span class=\"line\">  <span class=\"attr\">instance:</span></span><br><span class=\"line\">    <span class=\"comment\"># 更倾向使用ip地址，而不是host名</span></span><br><span class=\"line\">    <span class=\"attr\">prefer-ip-address:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    <span class=\"comment\"># ip地址</span></span><br><span class=\"line\">    <span class=\"attr\">ip-address:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span></span><br><span class=\"line\">    <span class=\"comment\"># 续约间隔，默认30秒</span></span><br><span class=\"line\">    <span class=\"attr\">lease-renewal-interval-in-seconds:</span> <span class=\"number\">5</span></span><br><span class=\"line\">    <span class=\"comment\"># 服务失效时间，默认90秒</span></span><br><span class=\"line\">    <span class=\"attr\">lease-expiration-duration-in-seconds:</span> <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>consumer-demo</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">service-url:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://127.0.0.1:10086/eureka</span></span><br><span class=\"line\">    <span class=\"comment\"># 获取服务地址列表间隔时间，默认30秒</span></span><br><span class=\"line\">    <span class=\"attr\">registry-fetch-interval-seconds:</span> <span class=\"number\">10</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>eureka-server</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">server:</span></span><br><span class=\"line\">    <span class=\"comment\"># 服务失效剔除时间间隔，默认60秒</span></span><br><span class=\"line\">    <span class=\"attr\">eviction-interval-timer-in-ms:</span> <span class=\"number\">60000</span></span><br><span class=\"line\">    <span class=\"comment\"># 关闭自我保护模式（默认是打开的）</span></span><br><span class=\"line\">    <span class=\"attr\">enable-self-preservation:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"14-负载均衡Ribbon简介\"><a href=\"#14-负载均衡Ribbon简介\" class=\"headerlink\" title=\"14. 负载均衡Ribbon简介\"></a>14. 负载均衡Ribbon简介</h2><p><strong>目标</strong>：描述负载均衡和ribbon的作用</p>\n<p><strong>分析</strong>：</p>\n<p>负载均衡是一个算法，可以通过该算法实现从地址列表中获取一个地址进行服务调用。</p>\n<p>在Spring Cloud中提供了负载均衡器：Ribbon</p>\n<p><strong>小结</strong>：</p>\n<p>Ribbon提供了轮询、随机两种负载均衡算法（默认是轮询）可以实现从地址列表中使用负载均衡算法获取地址进行服务调用。</p>\n<h2 id=\"15-Ribbon负载均衡应用\"><a href=\"#15-Ribbon负载均衡应用\" class=\"headerlink\" title=\"15. Ribbon负载均衡应用\"></a>15. Ribbon负载均衡应用</h2><p><strong>目标</strong>：配置启动两个用户服务，在consumer-demo中使用服务名实现根据用户id获取用户</p>\n<p><strong>分析</strong>：</p>\n<p>需求：可以使用RestTemplate访问<a href=\"http://user-service/user/8%E8%8E%B7%E5%8F%96%E6%9C%8D%E5%8A%A1%E6%95%B0%E6%8D%AE%E3%80%82\">http://user-service/user/8获取服务数据。</a></p>\n<p>可以使用Ribbon负载均衡：在执行RestTemplate发送服务地址请求的时候，使用负载均衡拦截器拦截，根据服务名获取服务地址列表，使用Ribbon负载均衡算法从服务地址列表中选择一个服务地址，访问该地址获取服务数据。</p>\n<p>实现步骤：</p>\n<ol>\n<li>启动多个user-service实例（9091,9092）；</li>\n<li>修改RestTemplate实例化方法，添加负载均衡注解；</li>\n<li>修改ConsumerController；</li>\n<li>测试</li>\n</ol>\n<p><strong>小结</strong>：</p>\n<p>在实例化RestTemplate的时候使用@LoadBalanced，服务地址直接可以使用服务名。</p>\n<h2 id=\"16-熔断器Hystrix简介\"><a href=\"#16-熔断器Hystrix简介\" class=\"headerlink\" title=\"16. 熔断器Hystrix简介\"></a>16. 熔断器Hystrix简介</h2><p><strong>目标</strong>：了解熔断器Hystrix的作用</p>\n<p><strong>小结</strong>：</p>\n<p>Hystrix是一个延迟和容错库，用于隔离访问远程服务，防止出现级联失败。</p>\n<h2 id=\"17-线程隔离-服务降级\"><a href=\"#17-线程隔离-服务降级\" class=\"headerlink\" title=\"17. 线程隔离&amp;服务降级\"></a>17. 线程隔离&amp;服务降级</h2><p><strong>目标</strong>：了解什么是线程隔离和服务降级</p>\n<p><strong>分析</strong>：</p>\n<p>Hystrix解决雪崩效应：</p>\n<ul>\n<li>线程隔离：用户请求不直接访问服务，而是使用线程池中空闲的线程访问服务，加速失败判断时间。</li>\n<li>服务降级：及时返回服务调用失败的结果，让线程不因为等待服务而阻塞。</li>\n</ul>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>添加依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>开启熔断</p>\n<p><img src=\"/2023/12/10/SpingCloud%E5%AD%A6%E4%B9%A0/Users/48531\\OneDrive\\桌面\\hexo-blog\\source_posts\\SpingCloud学习\\1560662674993.png\" alt=\"1560662674993\"> </p>\n</li>\n<li><p>降级逻辑</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;/consumer&quot;)</span></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@DefaultProperties(defaultFallback = &quot;defaultFallback&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ConsumerController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> RestTemplate restTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> DiscoveryClient discoveryClient;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/&#123;id&#125;&quot;)</span></span><br><span class=\"line\">    <span class=\"comment\">//@HystrixCommand(fallbackMethod = &quot;queryByIdFallback&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@HystrixCommand</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">queryById</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> Long id)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*String url = &quot;http://localhost:9091/user/&quot;+id;</span></span><br><span class=\"line\"><span class=\"comment\">        </span></span><br><span class=\"line\"><span class=\"comment\">        //获取eureka中注册的user-service的实例</span></span><br><span class=\"line\"><span class=\"comment\">        List&lt;ServiceInstance&gt; serviceInstances = discoveryClient.getInstances(&quot;user-service&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        ServiceInstance serviceInstance = serviceInstances.get(0);</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">        url = &quot;http://&quot; + serviceInstance.getHost() + &quot;:&quot; + serviceInstance.getPort() + &quot;/user/&quot; + id;*/</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;http://user-service/user/&quot;</span> + id;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> restTemplate.getForObject(url, String.class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">queryByIdFallback</span><span class=\"params\">(Long id)</span>&#123;</span><br><span class=\"line\">        log.error(<span class=\"string\">&quot;查询用户信息失败。id：&#123;&#125;&quot;</span>, id);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;对不起，网络太拥挤了！&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">defaultFallback</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;默认提示：对不起，网络太拥挤了！&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>修改超时配置</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">hystrix:</span></span><br><span class=\"line\">  <span class=\"attr\">command:</span></span><br><span class=\"line\">    <span class=\"attr\">default:</span></span><br><span class=\"line\">      <span class=\"attr\">execution:</span></span><br><span class=\"line\">        <span class=\"attr\">isolation:</span></span><br><span class=\"line\">          <span class=\"attr\">thread:</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutInMilliseconds:</span> <span class=\"number\">2000</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"18-服务熔断演示\"><a href=\"#18-服务熔断演示\" class=\"headerlink\" title=\"18. 服务熔断演示\"></a>18. 服务熔断演示</h2><p><strong>目标</strong>：了解熔断器工作原理</p>\n<p><strong>小结</strong>：</p>\n<p><img src=\"/2023/12/10/SpingCloud%E5%AD%A6%E4%B9%A0/Users/48531\\OneDrive\\桌面\\hexo-blog\\source_posts\\SpingCloud学习\\1560682028169-1709728438301-1.png\" alt=\"1560682028169\"></p>\n<p>可以通过配置服务熔断参数修改默认：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">hystrix:</span></span><br><span class=\"line\">  <span class=\"attr\">command:</span></span><br><span class=\"line\">    <span class=\"attr\">default:</span></span><br><span class=\"line\">      <span class=\"attr\">execution:</span></span><br><span class=\"line\">        <span class=\"attr\">isolation:</span></span><br><span class=\"line\">          <span class=\"attr\">thread:</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutInMilliseconds:</span> <span class=\"number\">2000</span></span><br><span class=\"line\">      <span class=\"attr\">circuitBreaker:</span></span><br><span class=\"line\">        <span class=\"attr\">errorThresholdPercentage:</span> <span class=\"number\">50</span> <span class=\"comment\"># 触发熔断错误比例阈值，默认值50%</span></span><br><span class=\"line\">        <span class=\"attr\">sleepWindowInMilliseconds:</span> <span class=\"number\">10000</span> <span class=\"comment\"># 熔断后休眠时长，默认值5秒</span></span><br><span class=\"line\">        <span class=\"attr\">requestVolumeThreshold:</span> <span class=\"number\">10</span> <span class=\"comment\"># 熔断触发最小请求次数，默认值是20</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"SpringCloud第二天\"><a href=\"#SpringCloud第二天\" class=\"headerlink\" title=\"SpringCloud第二天\"></a>SpringCloud第二天</h1><h2 id=\"1-Feign应用\"><a href=\"#1-Feign应用\" class=\"headerlink\" title=\"1. Feign应用\"></a>1. Feign应用</h2><p><strong>目标</strong>：Feign的作用；使用Feign实现consumer-demo代码中调用服务</p>\n<p><strong>分析</strong>：</p>\n<ol>\n<li>导入启动器依赖；</li>\n<li>开启Feign功能；</li>\n<li>编写Feign客户端；</li>\n<li>编写一个处理器ConsumerFeignController，注入Feign客户端并使用；</li>\n<li>测试</li>\n</ol>\n<p><strong>小结</strong>：</p>\n<p>Feign主要作用：自动根据参数拼接http请求地址。</p>\n<ul>\n<li>启动器依赖；</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>Feign客户端：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//声明当前类是一个Feign客户端，指定服务名为user-service</span></span><br><span class=\"line\"><span class=\"meta\">@FeignClient(&quot;user-service&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserClient</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//http://user-service/user/123</span></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&quot;/user/&#123;id&#125;&quot;)</span></span><br><span class=\"line\">    User <span class=\"title function_\">queryById</span><span class=\"params\">(<span class=\"meta\">@PathVariable</span> Long id)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-Feign负载均衡及熔断\"><a href=\"#2-Feign负载均衡及熔断\" class=\"headerlink\" title=\"2. Feign负载均衡及熔断\"></a>2. Feign负载均衡及熔断</h2><p><strong>目标</strong>：可以配置Feign内置ribbon配置项和Hystrix熔断的Fallback配置</p>\n<p><strong>分析</strong>：</p>\n<ul>\n<li>负载均衡</li>\n<li>服务熔断</li>\n<li>请求压缩</li>\n<li>日志级别</li>\n</ul>\n<p>都可以通过配置项在Feign中开启使用。</p>\n<p><strong>小结</strong>：</p>\n<p>在服务消费工程consumer-demo中的配置文件：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">ribbon:</span></span><br><span class=\"line\">  <span class=\"attr\">ConnectTimeout:</span> <span class=\"number\">1000</span> <span class=\"comment\"># 连接超时时长</span></span><br><span class=\"line\">  <span class=\"attr\">ReadTimeout:</span> <span class=\"number\">2000</span> <span class=\"comment\"># 数据通信超时时长</span></span><br><span class=\"line\">  <span class=\"attr\">MaxAutoRetries:</span> <span class=\"number\">0</span> <span class=\"comment\"># 当前服务器的重试次数</span></span><br><span class=\"line\">  <span class=\"attr\">MaxAutoRetriesNextServer:</span> <span class=\"number\">0</span> <span class=\"comment\"># 重试多少次服务</span></span><br><span class=\"line\">  <span class=\"attr\">OkToRetryOnAllOperations:</span> <span class=\"literal\">false</span> <span class=\"comment\"># 是否对所有的请求方式都重试</span></span><br><span class=\"line\"><span class=\"attr\">feign:</span></span><br><span class=\"line\">  <span class=\"attr\">hystrix:</span></span><br><span class=\"line\">    <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 开启Feign的熔断功能</span></span><br><span class=\"line\">  <span class=\"attr\">compression:</span></span><br><span class=\"line\">    <span class=\"attr\">request:</span></span><br><span class=\"line\">      <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span> <span class=\"comment\"># 开启请求压缩</span></span><br><span class=\"line\">      <span class=\"attr\">mime-types:</span> <span class=\"string\">text/html,application/xml,application/json</span> <span class=\"comment\"># 设置压缩的数据类型</span></span><br><span class=\"line\">      <span class=\"attr\">min-request-size:</span> <span class=\"number\">2048</span> <span class=\"comment\"># 设置触发压缩的大小下限</span></span><br><span class=\"line\">    <span class=\"attr\">response:</span></span><br><span class=\"line\">      <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">logging:</span></span><br><span class=\"line\">  <span class=\"attr\">level:</span></span><br><span class=\"line\">    <span class=\"attr\">com.itheima:</span> <span class=\"string\">debug</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"3-Spring-Cloud-Gateway网关简介\"><a href=\"#3-Spring-Cloud-Gateway网关简介\" class=\"headerlink\" title=\"3. Spring Cloud Gateway网关简介\"></a>3. Spring Cloud Gateway网关简介</h2><p><strong>目标</strong>：Spring Cloud Gateway网关的作用</p>\n<p><strong>小结</strong>：</p>\n<p>Spring Cloud Gateway的核心就是一系列的过滤器，可以将客户端的请求转发到不同的微服务。主要作用：<strong>过滤和路由</strong>。</p>\n<h2 id=\"4-Spring-Cloud-Gateway入门\"><a href=\"#4-Spring-Cloud-Gateway入门\" class=\"headerlink\" title=\"4. Spring Cloud Gateway入门\"></a>4. Spring Cloud Gateway入门</h2><p><strong>目标</strong>：搭建网关服务工程测试网关服务作用</p>\n<p><strong>分析</strong>：</p>\n<p>需求：通过网关系统heima-gateway将包含有 &#x2F;user 的请求 路由到 <a href=\"http://127.0.0.1:9091/user/%E7%94%A8%E6%88%B7id\">http://127.0.0.1:9091/user/用户id</a> </p>\n<p>实现步骤：</p>\n<ol>\n<li>创建工程；</li>\n<li>添加启动器依赖；</li>\n<li>编写启动引导类和配置文件；</li>\n<li>修改配置文件，设置路由信息；</li>\n<li>启动测试</li>\n</ol>\n<p><a href=\"http://127.0.0.1:10010/user/8\">http://127.0.0.1:10010/user/8</a> –&gt; <a href=\"http://127.0.0.1:9091/user/8\">http://127.0.0.1:9091/user/8</a></p>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>启动器依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>配置文件</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">10010</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">api-gateway</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">routes:</span></span><br><span class=\"line\">        <span class=\"comment\"># 路由id，可以任意</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">user-service-route</span></span><br><span class=\"line\">          <span class=\"comment\"># 代理的服务地址</span></span><br><span class=\"line\">          <span class=\"attr\">uri:</span> <span class=\"string\">http://127.0.0.1:9091</span></span><br><span class=\"line\">          <span class=\"comment\"># 路由断言： 可以匹配映射路径</span></span><br><span class=\"line\">          <span class=\"attr\">predicates:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">Path=/user/**</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">service-url:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://127.0.0.1:10086/eureka</span></span><br><span class=\"line\">  <span class=\"attr\">instance:</span></span><br><span class=\"line\">    <span class=\"attr\">prefer-ip-address:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"5-面向服务的路由\"><a href=\"#5-面向服务的路由\" class=\"headerlink\" title=\"5. 面向服务的路由\"></a>5. 面向服务的路由</h2><p><strong>目标</strong>：使用在eureka注册的服务作为路由地址</p>\n<p><strong>分析</strong>：</p>\n<p>如果将路由服务地址写死明显是不合理的；在Spring Cloud Gateway中可以通过配置动态路由解决。</p>\n<p><strong>小结</strong>：</p>\n<p>面向服务的路由；只需要在配置文件中指定路由路径类似： <code>lb://user-service</code></p>\n<blockquote>\n<p>lb 之后编写的服务名必须要在eureka中注册才能使用</p>\n</blockquote>\n<h2 id=\"6-路由前缀处理\"><a href=\"#6-路由前缀处理\" class=\"headerlink\" title=\"6. 路由前缀处理\"></a>6. 路由前缀处理</h2><p><strong>目标</strong>：可以对请求到网关服务的地址添加或去除前缀</p>\n<p><strong>分析</strong>：</p>\n<p>提供服务的地址：<a href=\"http://127.0.0.1:9091/user/8\">http://127.0.0.1:9091/user/8</a></p>\n<ul>\n<li>添加前缀：对请求地址添加前缀路径之后再作为代理的服务地址；</li>\n</ul>\n<p><a href=\"http://127.0.0.1:10010/8\">http://127.0.0.1:10010/8</a> –&gt; <a href=\"http://127.0.0.1:9091/user/8\">http://127.0.0.1:9091/user/8</a> 添加前缀路径&#x2F;user</p>\n<ul>\n<li>去除前缀：将请求地址中路径去除一些前缀路径之后再作为代理的服务地址；</li>\n</ul>\n<p><a href=\"http://127.0.0.1:10010/api/user/8\">http://127.0.0.1:10010/api/user/8</a> –&gt; <a href=\"http://127.0.0.1:9091/user/8\">http://127.0.0.1:9091/user/8</a> 去除前缀路径&#x2F;api</p>\n<p><strong>小结</strong>：</p>\n<p>客户端的请求地址与微服务的服务地址如果不一致的时候，可以通过配置路径过滤器实现路径前缀的添加和去除。</p>\n<h2 id=\"7-过滤器简介\"><a href=\"#7-过滤器简介\" class=\"headerlink\" title=\"7. 过滤器简介\"></a>7. 过滤器简介</h2><p><strong>目标</strong>：Gateway默认过滤器的用法和过滤器类型</p>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>用法：在配置文件中指定要使用的过滤器名称；</li>\n<li>类型：局部、全局；</li>\n<li>使用场景：请求鉴权、异常处理、记录调用时长等。</li>\n</ul>\n<h2 id=\"8-自定义局部过滤器\"><a href=\"#8-自定义局部过滤器\" class=\"headerlink\" title=\"8. 自定义局部过滤器\"></a>8. 自定义局部过滤器</h2><p><strong>目标</strong>：按照默认过滤器编写并配置一个自定义局部过滤器，该过滤器可以通过配置文件中的参数名称获取请求的参数值</p>\n<p><strong>分析</strong>：</p>\n<p>需求：在过滤器（MyParamGatewayFilterFactory）中将<a href=\"http://localhost:10010/api/user/8?name=itcast%E4%B8%AD%E7%9A%84%E5%8F%82%E6%95%B0name%E7%9A%84%E5%80%BC%E8%8E%B7%E5%8F%96%E5%88%B0%E5%B9%B6%E8%BE%93%E5%87%BA%E5%88%B0%E6%8E%A7%E5%88%B6%E5%8F%B0%EF%BC%9B%E5%B9%B6%E4%B8%94%E5%8F%82%E6%95%B0%E5%90%8D%E6%98%AF%E5%8F%AF%E5%8F%98%E7%9A%84%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E4%B8%8D%E4%B8%80%E5%AE%9A%E6%AF%8F%E6%AC%A1%E9%83%BD%E6%98%AFname%EF%BC%9B%E9%9C%80%E8%A6%81%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%E9%85%8D%E7%BD%AE%E8%BF%87%E6%BB%A4%E5%99%A8%E7%9A%84%E6%97%B6%E5%80%99%E5%81%9A%E5%88%B0%E9%85%8D%E7%BD%AE%E5%8F%82%E6%95%B0%E5%90%8D%E3%80%82\">http://localhost:10010/api/user/8?name=itcast中的参数name的值获取到并输出到控制台；并且参数名是可变的，也就是不一定每次都是name；需要可以通过配置过滤器的时候做到配置参数名。</a></p>\n<p>实现步骤：</p>\n<ol>\n<li>配置过滤器；</li>\n<li>编写过滤器；</li>\n<li>测试</li>\n</ol>\n<p><strong>小结</strong>：</p>\n<ul>\n<li><p>配置；与其他过滤器的配置一致。</p>\n</li>\n<li><p>实现过滤器</p>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.itheima.gateway.filter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.cloud.gateway.filter.GatewayFilter;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.http.server.reactive.ServerHttpRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.List;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyParamGatewayFilterFactory</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">AbstractGatewayFilterFactory</span>&lt;MyParamGatewayFilterFactory.Config&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">PARAM_NAME</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;param&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyParamGatewayFilterFactory</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(Config.class);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;String&gt; <span class=\"title function_\">shortcutFieldOrder</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.asList(PARAM_NAME);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> GatewayFilter <span class=\"title function_\">apply</span><span class=\"params\">(Config config)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (exchange, chain) -&gt; &#123;</span><br><span class=\"line\">            <span class=\"comment\">// http://localhost:10010/api/user/8?name=itcast   config.param ==&gt; name</span></span><br><span class=\"line\">            <span class=\"comment\">//获取请求参数中param对应的参数名 的参数值</span></span><br><span class=\"line\">            <span class=\"type\">ServerHttpRequest</span> <span class=\"variable\">request</span> <span class=\"operator\">=</span> exchange.getRequest();</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(request.getQueryParams().containsKey(config.param))&#123;</span><br><span class=\"line\">                request.getQueryParams().get(config.param).</span><br><span class=\"line\">                        forEach(value -&gt; System.out.printf(<span class=\"string\">&quot;------------局部过滤器--------%s = %s------&quot;</span>, config.param, value));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> chain.filter(exchange);</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Config</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//对应在配置过滤器的时候指定的参数名</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String param;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> String <span class=\"title function_\">getParam</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> param;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setParam</span><span class=\"params\">(String param)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.param = param;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"9-自定义全局过滤器\"><a href=\"#9-自定义全局过滤器\" class=\"headerlink\" title=\"9. 自定义全局过滤器\"></a>9. 自定义全局过滤器</h2><p><strong>目标</strong>：定义一个全局过滤器检查请求中是否携带有token参数</p>\n<p><strong>分析</strong>：</p>\n<p>需求：编写全局过滤器，在过滤器中检查请求地址是否携带token参数。如果token参数的值存在则放行；如果token的参数值为空或者不存在则设置返回的状态码为：未授权也不再执行下去。</p>\n<p>实现步骤：</p>\n<ol>\n<li>编写全局过滤器；</li>\n<li>测试</li>\n</ol>\n<p><strong>小结</strong>：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyGlobalFilter</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">GlobalFilter</span>, Ordered &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Mono&lt;Void&gt; <span class=\"title function_\">filter</span><span class=\"params\">(ServerWebExchange exchange, GatewayFilterChain chain)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;--------------全局过滤器MyGlobalFilter------------------&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">token</span> <span class=\"operator\">=</span> exchange.getRequest().getQueryParams().getFirst(<span class=\"string\">&quot;token&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(StringUtils.isBlank(token))&#123;</span><br><span class=\"line\">            <span class=\"comment\">//设置响应状态码为未授权</span></span><br><span class=\"line\">            exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> exchange.getResponse().setComplete();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> chain.filter(exchange);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getOrder</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//值越小越先执行</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"10-Gateway其它配置说明\"><a href=\"#10-Gateway其它配置说明\" class=\"headerlink\" title=\"10. Gateway其它配置说明\"></a>10. Gateway其它配置说明</h2><p><strong>目标</strong>：Gateway网关的负载均衡和熔断参数配置</p>\n<p><strong>小结</strong>：</p>\n<p>网关服务配置文件：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">10010</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">api-gateway</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">gateway:</span></span><br><span class=\"line\">      <span class=\"attr\">routes:</span></span><br><span class=\"line\">        <span class=\"comment\"># 路由id，可以任意</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"attr\">id:</span> <span class=\"string\">user-service-route</span></span><br><span class=\"line\">          <span class=\"comment\"># 代理的服务地址</span></span><br><span class=\"line\">          <span class=\"comment\">#uri: http://127.0.0.1:9091</span></span><br><span class=\"line\">          <span class=\"comment\"># lb表示从eureka中获取具体服务</span></span><br><span class=\"line\">          <span class=\"attr\">uri:</span> <span class=\"string\">lb://user-service</span></span><br><span class=\"line\">          <span class=\"comment\"># 路由断言： 可以匹配映射路径</span></span><br><span class=\"line\">          <span class=\"attr\">predicates:</span></span><br><span class=\"line\">            <span class=\"comment\">#- Path=/user/**</span></span><br><span class=\"line\">            <span class=\"comment\">#- Path=/**</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">Path=/api/user/**</span></span><br><span class=\"line\">          <span class=\"attr\">filters:</span></span><br><span class=\"line\">            <span class=\"comment\"># 添加请求路径的前缀</span></span><br><span class=\"line\">            <span class=\"comment\">#- PrefixPath=/user</span></span><br><span class=\"line\">            <span class=\"comment\">#1表示过滤1个路径，2表示两个路径，以此类推</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">StripPrefix=1</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">MyParam=name</span></span><br><span class=\"line\">      <span class=\"comment\"># 默认过滤器，对所有路由都生效</span></span><br><span class=\"line\">      <span class=\"attr\">default-filters:</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">AddResponseHeader=X-Response-Foo,</span> <span class=\"string\">Bar</span></span><br><span class=\"line\">        <span class=\"bullet\">-</span> <span class=\"string\">AddResponseHeader=abc-myname,heima</span></span><br><span class=\"line\">      <span class=\"attr\">globalcors:</span></span><br><span class=\"line\">        <span class=\"attr\">corsConfigurations:</span></span><br><span class=\"line\">          <span class=\"string\">&#x27;[/**]&#x27;</span><span class=\"string\">:</span></span><br><span class=\"line\">            <span class=\"comment\">#allowedOrigins: * # 这种写法或者下面的都可以，*表示全部</span></span><br><span class=\"line\">            <span class=\"attr\">allowedOrigins:</span></span><br><span class=\"line\">              <span class=\"bullet\">-</span> <span class=\"string\">&quot;http://docs.spring.io&quot;</span></span><br><span class=\"line\">            <span class=\"attr\">allowedMethods:</span></span><br><span class=\"line\">              <span class=\"bullet\">-</span> <span class=\"string\">GET</span></span><br><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">service-url:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://127.0.0.1:10086/eureka</span></span><br><span class=\"line\">  <span class=\"attr\">instance:</span></span><br><span class=\"line\">    <span class=\"attr\">prefer-ip-address:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">hystrix:</span></span><br><span class=\"line\">  <span class=\"attr\">command:</span></span><br><span class=\"line\">    <span class=\"attr\">default:</span></span><br><span class=\"line\">      <span class=\"attr\">execution:</span></span><br><span class=\"line\">        <span class=\"attr\">isolation:</span></span><br><span class=\"line\">          <span class=\"attr\">thread:</span></span><br><span class=\"line\">            <span class=\"attr\">timeoutInMilliseconds:</span> <span class=\"number\">6000</span></span><br><span class=\"line\"><span class=\"attr\">ribbon:</span></span><br><span class=\"line\">  <span class=\"attr\">ConnectTimeout:</span> <span class=\"number\">1000</span></span><br><span class=\"line\">  <span class=\"attr\">ReadTimeout:</span> <span class=\"number\">2000</span></span><br><span class=\"line\">  <span class=\"attr\">MaxAutoRetries:</span> <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"attr\">MaxAutoRetriesNextServer:</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>Gateway网关一般直接给终端请求使用；Feign一般用在微服务之间调用。</p>\n</blockquote>\n<h2 id=\"11-Spring-Cloud-Config分布式配置中心简介\"><a href=\"#11-Spring-Cloud-Config分布式配置中心简介\" class=\"headerlink\" title=\"11. Spring Cloud Config分布式配置中心简介\"></a>11. Spring Cloud Config分布式配置中心简介</h2><p><strong>目标</strong>：分布式配置中心的作用</p>\n<p><strong>小结</strong>：</p>\n<p><img src=\"/2023/12/10/SpingCloud%E5%AD%A6%E4%B9%A0/Users/48531\\OneDrive\\桌面\\hexo-blog\\source_posts\\SpingCloud学习\\1560919656472.png\" alt=\"1560919656472\"></p>\n<p>spring cloud config作用：可以通过修改在git仓库中的配置文件实现其它所有微服务的配置文件的修改。</p>\n<h2 id=\"12-搭建配置中心微服务\"><a href=\"#12-搭建配置中心微服务\" class=\"headerlink\" title=\"12. 搭建配置中心微服务\"></a>12. 搭建配置中心微服务</h2><p><strong>目标</strong>：创建码云的远程公开git仓库，搭建配置中心微服务config-server</p>\n<p><strong>分析</strong>：</p>\n<ul>\n<li>创建git仓库：在码云上创建仓库</li>\n<li>搭建配置中心config-server：使用spring boot方式搭建和配置</li>\n</ul>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>配置中心依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-config-server<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>配置中心的配置文件</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">12000</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">config-server</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">config:</span></span><br><span class=\"line\">      <span class=\"attr\">server:</span></span><br><span class=\"line\">        <span class=\"attr\">git:</span></span><br><span class=\"line\">          <span class=\"attr\">uri:</span> <span class=\"string\">https://gitee.com/goheima/heima-config.git</span></span><br><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">service-url:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://127.0.0.1:10086/eureka</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在gitee中修改了配置文件会在配置中心服务及时更新。</p>\n</blockquote>\n<h2 id=\"13-获取配置中心配置\"><a href=\"#13-获取配置中心配置\" class=\"headerlink\" title=\"13. 获取配置中心配置\"></a>13. 获取配置中心配置</h2><p><strong>目标</strong>：改造用户微服务user-service，配置文件信息不再由微服务项目提供，而是从配置中心获取</p>\n<p><strong>分析</strong>：</p>\n<p>需求：将服务提供工程user-service的application.yml配置文件删除，修改为从配置中心config-server中获取。</p>\n<p>实现步骤：</p>\n<ol>\n<li>添加启动器依赖；</li>\n<li>修改配置文件；</li>\n<li>启动测试</li>\n</ol>\n<p><strong>小结</strong>：</p>\n<p>将原来的application.yml删除；然后添加bootstrap.yml配置文件，该文件也是spring boot的默认配置文件，其内容经常配置一些项目中固定的配置项。如果是项目经常变动的应该配置到application.yml中，现在使用了配置中心则应该配置到git仓库中对于的配置文件。</p>\n<ul>\n<li>依赖</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-config<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.1.1.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>配置文件bootstrap.yml</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">config:</span></span><br><span class=\"line\">      <span class=\"comment\"># 要与仓库中的配置文件的application保持一致</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">user</span></span><br><span class=\"line\">      <span class=\"comment\"># 要与仓库中的配置文件的profile保持一致</span></span><br><span class=\"line\">      <span class=\"attr\">profile:</span> <span class=\"string\">dev</span></span><br><span class=\"line\">      <span class=\"comment\"># 要与仓库中的配置文件所属的版本（分支）一样</span></span><br><span class=\"line\">      <span class=\"attr\">label:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"attr\">discovery:</span></span><br><span class=\"line\">        <span class=\"comment\"># 使用配置中心</span></span><br><span class=\"line\">        <span class=\"attr\">enabled:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"comment\"># 配置中心服务名</span></span><br><span class=\"line\">        <span class=\"attr\">service-id:</span> <span class=\"string\">config-server</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">service-url:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://127.0.0.1:10086/eureka</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"14-Spring-Cloud-Bus简介\"><a href=\"#14-Spring-Cloud-Bus简介\" class=\"headerlink\" title=\"14. Spring Cloud Bus简介\"></a>14. Spring Cloud Bus简介</h2><p><strong>目标</strong>：了解Spring Cloud Bus作用</p>\n<p><strong>小结</strong>：</p>\n<p>Spring Cloud Bus作用：将git仓库的配置文件更新，在不重启系统的情况下实现及时同步到各个微服务。</p>\n<h2 id=\"15-Spring-Cloud-Bus应用\"><a href=\"#15-Spring-Cloud-Bus应用\" class=\"headerlink\" title=\"15. Spring Cloud Bus应用\"></a>15. Spring Cloud Bus应用</h2><p><strong>目标</strong>：启动RabbitMQ通过修改码云中的配置文件后发送Post请求实现及时更新用户微服务中的配置项</p>\n<p><strong>分析</strong>：</p>\n<p>需求：在码云的git仓库中修改user-dev.yml配置文件，实现不重启user-service的情况下可以及时更新配置文件。</p>\n<p>实现步骤：</p>\n<ol>\n<li>启动RabbitMQ；</li>\n<li>修改配置中心config-server；</li>\n<li>修改服务提供工程user-service；</li>\n<li>测试</li>\n</ol>\n<p><strong>小结</strong>：</p>\n<ul>\n<li>config-server的依赖添加内容</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-bus<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-stream-binder-rabbit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>config-server的配置文件添加内容</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server:</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">12000</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">application:</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">config-server</span></span><br><span class=\"line\">  <span class=\"attr\">cloud:</span></span><br><span class=\"line\">    <span class=\"attr\">config:</span></span><br><span class=\"line\">      <span class=\"attr\">server:</span></span><br><span class=\"line\">        <span class=\"attr\">git:</span></span><br><span class=\"line\">          <span class=\"attr\">uri:</span> <span class=\"string\">https://gitee.com/goheima/heima-config.git</span></span><br><span class=\"line\">  <span class=\"comment\"># 配置rabbitmq信息；如果是都与默认值一致则不需要配置</span></span><br><span class=\"line\">  <span class=\"attr\">rabbitmq:</span></span><br><span class=\"line\">    <span class=\"attr\">host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">    <span class=\"attr\">port:</span> <span class=\"number\">5672</span></span><br><span class=\"line\">    <span class=\"attr\">username:</span> <span class=\"string\">guest</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">guest</span></span><br><span class=\"line\"><span class=\"attr\">eureka:</span></span><br><span class=\"line\">  <span class=\"attr\">client:</span></span><br><span class=\"line\">    <span class=\"attr\">service-url:</span></span><br><span class=\"line\">      <span class=\"attr\">defaultZone:</span> <span class=\"string\">http://127.0.0.1:10086/eureka</span></span><br><span class=\"line\"><span class=\"attr\">management:</span></span><br><span class=\"line\">  <span class=\"attr\">endpoints:</span></span><br><span class=\"line\">    <span class=\"attr\">web:</span></span><br><span class=\"line\">      <span class=\"attr\">exposure:</span></span><br><span class=\"line\">        <span class=\"comment\"># 暴露触发消息总线的地址</span></span><br><span class=\"line\">        <span class=\"attr\">include:</span> <span class=\"string\">bus-refresh</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>user-service的依赖添加内容</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-bus<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-stream-binder-rabbit<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>user-service的配置文件添加内容</li>\n</ul>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置rabbitmq信息；如果是都与默认值一致则不需要配置</span></span><br><span class=\"line\"><span class=\"attr\">rabbitmq:</span></span><br><span class=\"line\">  <span class=\"attr\">host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\">  <span class=\"attr\">port:</span> <span class=\"number\">5672</span></span><br><span class=\"line\">  <span class=\"attr\">username:</span> <span class=\"string\">guest</span></span><br><span class=\"line\">  <span class=\"attr\">password:</span> <span class=\"string\">guest</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<ul>\n<li>UserController的修改</li>\n</ul>\n<p><img src=\"/2023/12/10/SpingCloud%E5%AD%A6%E4%B9%A0/Users/48531\\OneDrive\\桌面\\hexo-blog\\source_posts\\SpingCloud学习\\1561003475491-1709728505732-7.png\" alt=\"1561003475491\"> </p>\n<h2 id=\"16-Spring-Cloud-体系技术综合应用说明\"><a href=\"#16-Spring-Cloud-体系技术综合应用说明\" class=\"headerlink\" title=\"16. Spring Cloud 体系技术综合应用说明\"></a>16. Spring Cloud 体系技术综合应用说明</h2><p><strong>目标</strong>：了解Spring Cloud中的Eureka、GateWay、Config、Bus、Feign等技术的综合应用</p>\n<p><strong>小结</strong>：</p>\n<p><img src=\"/2023/12/10/SpingCloud%E5%AD%A6%E4%B9%A0/Users/48531\\OneDrive\\桌面\\hexo-blog\\source_posts\\SpingCloud学习\\1561004983897.png\" alt=\"1561004983897(1)\"></p>\n","categories":[],"tags":[]},{"title":"后端获取图片数据的开发文档","date":"2023-12-06T13:42:11.048Z","path":"2023/12/06/基于ruoyi框架的开发笔记/","content":"<h1 id=\"后端获取图片数据的开发文档\"><a href=\"#后端获取图片数据的开发文档\" class=\"headerlink\" title=\"后端获取图片数据的开发文档\"></a>后端获取图片数据的开发文档</h1><h2 id=\"1-后端获取图片数据的基本需求（文件）\"><a href=\"#1-后端获取图片数据的基本需求（文件）\" class=\"headerlink\" title=\"1.后端获取图片数据的基本需求（文件）\"></a>1.后端获取图片数据的基本需求（文件）</h2><p>在com&#x2F;ruoyi&#x2F;system&#x2F;domain&#x2F;目录下创建SysPicture.java</p>\n<p><strong>在该类中编写你在图片数据库中定义的属性:以下拿我的举例子</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 图片表 data_entires</span><br><span class=\"line\"> *</span><br><span class=\"line\"> *</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\">public class SysPicture extends BaseEntity&#123;</span><br><span class=\"line\">    private static final long serialVersionUID = 1L;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    /** 图片序号 */</span><br><span class=\"line\">    @Excel(name = &quot;图片序号&quot;, cellType = Excel.ColumnType.NUMERIC)</span><br><span class=\"line\">    private Long pictureId;</span><br><span class=\"line\"></span><br><span class=\"line\">    /** 图片编码 */</span><br><span class=\"line\">    @Excel(name = &quot;图片编码&quot;)</span><br><span class=\"line\">    private String pictureCode;</span><br><span class=\"line\"></span><br><span class=\"line\">    /** 图片名称 */</span><br><span class=\"line\">    @Excel(name = &quot;图片名称&quot;)</span><br><span class=\"line\">    private String pictureName;</span><br><span class=\"line\"></span><br><span class=\"line\">    /** 图片排序 */</span><br><span class=\"line\">    @Excel(name = &quot;图片排序&quot;)</span><br><span class=\"line\">    private Integer pictureSort;</span><br><span class=\"line\"></span><br><span class=\"line\">    /** 状态（0正常 1停用） */</span><br><span class=\"line\">    @Excel(name = &quot;状态&quot;, readConverterExp = &quot;0=正常,1=停用&quot;)</span><br><span class=\"line\">    private String status;</span><br></pre></td></tr></table></figure>\n\n<p><strong>添加Set,Get方法</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public Long getPictureId() &#123;</span><br><span class=\"line\">    return pictureId;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public void setPictureId(Long pictureId) &#123;</span><br><span class=\"line\">    this.pictureId = pictureId;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public String getPictureCode() &#123;</span><br><span class=\"line\">    return pictureCode;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public void setPictureCode(String pictureCode) &#123;</span><br><span class=\"line\">    this.pictureCode = pictureCode;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public String getPictureName() &#123;</span><br><span class=\"line\">    return pictureName;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public void setPictureName(String pictureName) &#123;</span><br><span class=\"line\">    this.pictureName = pictureName;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public Integer getPictureSort() &#123;</span><br><span class=\"line\">    return pictureSort;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public void setPictureSort(Integer pictureSort) &#123;</span><br><span class=\"line\">    this.pictureSort = pictureSort;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public String getStatus() &#123;</span><br><span class=\"line\">    return status;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">public void setStatus(String status) &#123;</span><br><span class=\"line\">    this.status = status;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>添加toString()方法</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Override</span><br><span class=\"line\">public String toString() &#123;</span><br><span class=\"line\">    return new ToStringBuilder(this, ToStringStyle.MULTI_LINE_STYLE)</span><br><span class=\"line\">            .append(&quot;pictureId&quot;, getPictureId())</span><br><span class=\"line\">            .append(&quot;postCode&quot;, getPictureCode())</span><br><span class=\"line\">            .append(&quot;postName&quot;, getPictureName())</span><br><span class=\"line\">            .append(&quot;postSort&quot;, getPictureSort())</span><br><span class=\"line\">            .append(&quot;status&quot;, getStatus())</span><br><span class=\"line\">            .append(&quot;createBy&quot;, getCreateBy())</span><br><span class=\"line\">            .append(&quot;createTime&quot;, getCreateTime())</span><br><span class=\"line\">            .append(&quot;updateBy&quot;, getUpdateBy())</span><br><span class=\"line\">            .append(&quot;updateTime&quot;, getUpdateTime())</span><br><span class=\"line\">            .append(&quot;remark&quot;, getRemark())</span><br><span class=\"line\">            .toString();</span><br></pre></td></tr></table></figure>\n\n<p>可以参考其他的domian类文件。</p>\n<p>在com&#x2F;ruoyi&#x2F;web&#x2F;controller&#x2F;system&#x2F;目录下创建SysPictureController.java</p>\n<p><strong>控制层中我们主要添加</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RestController</span><br><span class=\"line\">@RequestMapping(&quot;/system/picture&quot;)</span><br><span class=\"line\">public class SysPictureController extends BaseController</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t//创建并注入服务处的对象</span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private ISysPictureService pictureService;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 获取图片</span><br><span class=\"line\">     */</span><br><span class=\"line\">    @PreAuthorize(&quot;@ss.hasPermi(&#x27;system:picture:list&#x27;)&quot;)</span><br><span class=\"line\">    @GetMapping(&quot;/list&quot;)</span><br><span class=\"line\">    public TableDataInfo list(SysPicture picture)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        startPage();</span><br><span class=\"line\">        List&lt;SysPicture&gt; list = pictureService.selectPictureList(picture);</span><br><span class=\"line\">        return getDataTable(list);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在com&#x2F;ruoyi&#x2F;system&#x2F;service&#x2F;目录下创建服务层的类ISysPictureService.java</p>\n<p>在该类中添加如下代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface ISysPictureService &#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 查询图片信息集合</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param picture 图片信息</span><br><span class=\"line\">     * @return 图片列表</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public List&lt;SysPicture&gt; selectPictureList(SysPicture picture);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在com&#x2F;ruoyi&#x2F;system&#x2F;service&#x2F;impl&#x2F;目录下编写SysPictureServiceImpl.java类并添加如下代码:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Service</span><br><span class=\"line\">public class SysPictureServiceImpl implements ISysPictureService &#123;</span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private SysPictureMapper pictureMapper;</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public List&lt;SysPicture&gt; selectPictureList(SysPicture picture)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return pictureMapper.selectPictureList(picture);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在com&#x2F;ruoyi&#x2F;system&#x2F;mapper&#x2F;目录下编写SysPictureMapper.java类</p>\n<p>在该类中添加</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> *图片信息 数据层</span><br><span class=\"line\"> */</span><br><span class=\"line\">@Repository</span><br><span class=\"line\">public interface SysPictureMapper &#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 查询图片数据集合</span><br><span class=\"line\">     *</span><br><span class=\"line\">     * @param picture 图片信息</span><br><span class=\"line\">     * @return 图片数据集合</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public List&lt;SysPicture&gt; selectPictureList(SysPicture picture);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在mapper&#x2F;system&#x2F;目录下添加SysPictureMapper.xml文件</p>\n<p>内容如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE mapper</span><br><span class=\"line\">        PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span><br><span class=\"line\">        &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</span><br><span class=\"line\">       以上部分为文件头，可复制直接使用</span><br><span class=\"line\">       </span><br><span class=\"line\">       </span><br><span class=\"line\">       </span><br><span class=\"line\">&lt;mapper namespace=&quot;com.ruoyi.system.mapper.SysPictureMapper&quot;&gt;//该位置必须要找到Mapper文件所在位置</span><br><span class=\"line\">    &lt;resultMap type=&quot;SysPicture&quot; id=&quot;SysPictureResult&quot;&gt;</span><br><span class=\"line\">        &lt;id     property=&quot;pictureId&quot;        column=&quot;picture_id&quot;       /&gt;</span><br><span class=\"line\">        &lt;result property=&quot;pictureCode&quot;      column=&quot;picture_code&quot;     /&gt;</span><br><span class=\"line\">        &lt;result property=&quot;pictureName&quot;      column=&quot;picture_name&quot;     /&gt;</span><br><span class=\"line\">        &lt;result property=&quot;pictureSort&quot;      column=&quot;picture_sort&quot;     /&gt;</span><br><span class=\"line\">        &lt;result property=&quot;status&quot;        column=&quot;status&quot;        /&gt;</span><br><span class=\"line\">        &lt;result property=&quot;createBy&quot;      column=&quot;create_By&quot;     /&gt;</span><br><span class=\"line\">        &lt;result property=&quot;createTime&quot;    column=&quot;create_time&quot;   /&gt;</span><br><span class=\"line\">        &lt;result property=&quot;updateBy&quot;      column=&quot;update_by&quot;     /&gt;</span><br><span class=\"line\">        &lt;result property=&quot;updateTime&quot;    column=&quot;update_time&quot;   /&gt;</span><br><span class=\"line\">        &lt;result property=&quot;remark&quot;        column=&quot;remark&quot;        /&gt;</span><br><span class=\"line\">    &lt;/resultMap&gt;</span><br><span class=\"line\">    &lt;sql id=&quot;selectPictureVo&quot;&gt;</span><br><span class=\"line\">        select picture_id, picture_code, picture_name, picture_sort, status, create_by, create_time, remark</span><br><span class=\"line\">        from data_entires</span><br><span class=\"line\">    &lt;/sql&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;select id=&quot;selectPictureList&quot; parameterType=&quot;SysPost&quot; resultMap=&quot;SysPictureResult&quot;&gt;</span><br><span class=\"line\">        &lt;include refid=&quot;selectPictureVo&quot;/&gt;</span><br><span class=\"line\">        &lt;where&gt;</span><br><span class=\"line\">            &lt;if test=&quot;pictureCode != null and pictureCode != &#x27;&#x27;&quot;&gt;</span><br><span class=\"line\">                AND picture_code like concat(&#x27;%&#x27;, #&#123;pictureCode&#125;, &#x27;%&#x27;)</span><br><span class=\"line\">            &lt;/if&gt;</span><br><span class=\"line\">            &lt;if test=&quot;status != null and status != &#x27;&#x27;&quot;&gt;</span><br><span class=\"line\">                AND status = #&#123;status&#125;</span><br><span class=\"line\">            &lt;/if&gt;</span><br><span class=\"line\">            &lt;if test=&quot;pictureName != null and pictureName != &#x27;&#x27;&quot;&gt;</span><br><span class=\"line\">                AND picture_name like concat(&#x27;%&#x27;, #&#123;pictureName&#125;, &#x27;%&#x27;)</span><br><span class=\"line\">            &lt;/if&gt;</span><br><span class=\"line\">        &lt;/where&gt;</span><br><span class=\"line\">    &lt;/select&gt;</span><br><span class=\"line\">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>以上的大部分代码，均参考ruoyi官方编写的其他内容改编</strong></p>\n<p>由于ruoyi设置了查询权限，我们在运行项目进行数据查询时会提示权限不足,这时候我们需要带着两个请求头去查询</p>\n<p><strong>Cookie</strong> </p>\n<hr>\n<p><strong>Authorization</strong></p>\n<hr>\n","categories":[],"tags":[]},{"title":"SpringBoot学习","date":"2023-12-04T10:27:49.000Z","path":"2023/12/04/SpringBoot学习/","content":"<h1 id=\"Springboot模块学习笔记-一\"><a href=\"#Springboot模块学习笔记-一\" class=\"headerlink\" title=\"Springboot模块学习笔记(一)\"></a><em>Springboot模块学习笔记</em>(一)</h1><h2 id=\"1-SpringBoot的目标既是提供了一种快速使用Spring的方式，提高开发效率。\"><a href=\"#1-SpringBoot的目标既是提供了一种快速使用Spring的方式，提高开发效率。\" class=\"headerlink\" title=\"1.SpringBoot的目标既是提供了一种快速使用Spring的方式，提高开发效率。\"></a>1.<em>SpringBoot的目标既是提供了一种快速使用Spring的方式，提高开发效率</em>。</h2><p>那么Spring有什么缺点呢？</p>\n<p>1.配置繁琐</p>\n<p>2.依赖繁琐</p>\n<p>这样就引出了SpringBoot技术，下面介绍一下SpringBoot功能</p>\n<p>（1）自动配置</p>\n<p><img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127121051118.png\" alt=\"image-20231127121051118\"></p>\n<p>（2）起步依赖</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127121111083.png\" class title=\"image-20231127121111083\">\n\n<p>（3）辅助功能</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127121129264.png\" class title=\"image-20231127121129264\">\n\n<p> <strong>SpringBoot并不是对Spring功能上的增强，而是提供了一种快速使用Spring的方式</strong></p>\n<h2 id=\"2-SpringBoot快速入门\"><a href=\"#2-SpringBoot快速入门\" class=\"headerlink\" title=\"2.SpringBoot快速入门\"></a>2.SpringBoot快速入门</h2><p>利用一个简单的小项目来入门一下</p>\n<ul>\n<li>SpringBoot在创建项目时，使用jar的打包方式。</li>\n<li>SpringBoot的引导类，是项目入口，运行main方法就可以启动项目。</li>\n<li>使用SpringBoot和Spring构建的项目，业务代码编写方式完全一样。</li>\n</ul>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127124611176.png\" class title=\"image-20231127124611176\">\n\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127124630645.png\" class title=\"image-20231127124630645\">\n\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127124650281.png\" class title=\"image-20231127124650281\">\n\n<p>同时利用idea工具可实现快速构建</p>\n<p>在new–&gt;Module下的Spring Initializr选项卡中实现快速构建项目</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127165625244.png\" class title=\"image-20231127165625244\">\n\n<h2 id=\"3-Spring-Boot-起步依赖原理\"><a href=\"#3-Spring-Boot-起步依赖原理\" class=\"headerlink\" title=\"3.Spring Boot 起步依赖原理\"></a>3.Spring Boot 起步依赖原理</h2><p>（1）spring-boot-starter-parent</p>\n<p>（2）spring-boot-starter-web</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127170537725.png\" class title=\"image-20231127170537725\">\n\n<h2 id=\"4-Spring-Boot配置原理\"><a href=\"#4-Spring-Boot配置原理\" class=\"headerlink\" title=\"4.Spring Boot配置原理\"></a>4.Spring Boot配置原理</h2><p><strong>配置文件分类:</strong></p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127170743378.png\" class title=\"image-20231127170743378\">\n\n<p>在<strong>application.properties</strong>下编写如下代码:</p>\n<p><strong>server.port &#x3D;8080</strong></p>\n<p>或者yml方式(在idea中的<strong>resources</strong>下创建<strong>application.yml</strong>或<strong>application.yaml</strong>文件里面编写如下配置):</p>\n<p><strong>server:</strong></p>\n<p>​\t<strong>port: 8080</strong></p>\n<p>以上三个配置文件的优先级(按照后缀来排序):</p>\n<p><em><strong>.properties&gt;.yml&gt;.yaml</strong></em></p>\n<ul>\n<li><p>yaml</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127171638640.png\" class title=\"image-20231127171638640\">\n\n<p><strong>yaml:基本语法</strong>:joy:</p>\n<p><strong><img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127171856985.png\" class title=\"image-20231127171856985\"></strong></p>\n<p><strong>yaml:数据格式</strong>:</p>\n<ul>\n<li>对象(map):键值对的集合。</li>\n</ul>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127172159576.png\" class title=\"image-20231127172159576\">\n\n<ul>\n<li>数组:一组按次序排列的值。</li>\n</ul>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127172231099.png\" class title=\"image-20231127172231099\">\n\n<ul>\n<li><p>纯量:单个的、不可再分的值。</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127172305038.png\" class title=\"image-20231127172305038\"></li>\n</ul>\n<p>以上注意 <strong>属性名称:(空格)+属性值</strong></p>\n<p><strong>yaml:参数引用</strong></p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127172922753.png\" class title=\"image-20231127172922753\">\n\n<p><strong>YAML:小结</strong></p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231127173040450.png\" class title=\"image-20231127173040450\">\n</li>\n<li><p>读取配置文件内容</p>\n<p>(1)@Value</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231130144357066.png\" class title=\"image-20231130144357066\">\n\n<p><strong>@Value(“${name}”)</strong></p>\n<p>​\t<strong>private String name</strong></p>\n<p>​\t采用这样的方式来获取<strong>application.yaml</strong>里对应的<strong>name</strong>的值</p>\n<p>​\t如果获取数组的值我们在@Value中取得是数组的<strong>下标</strong></p>\n<p>(2)Environment</p>\n<p>使用Environment获取值时的步骤如下:</p>\n<p>1)使用**@Autowired<strong>注解让Springboot启动时注入一个对象</strong>env**</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231130150414772.png\" class title=\"image-20231130150414772\">\n\n<p>2)直接在输出这一行利用env.getProperty(“”)输入你要获取的值的属性名字即可</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231130150424354.png\" class title=\"image-20231130150424354\">\n\n<p>(3)@ConfigurationProperties</p>\n<p>创建一个你需要用到的对象类(如我图中的person类):</p>\n<p>两个注解:</p>\n<p>​\t@Component:让Spring识别</p>\n<p>​\t@ConfigurationProperties</p>\n<p>注意了!!!!</p>\n<p>如果此时你的@ConfigurationProperties并没有写前缀，那么它会读取配置文件中你所配置的属性名的属性值</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231130151741953.png\" class title=\"image-20231130151741953\">\n\n<p>如下<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231130151702681.png\" class title=\"image-20231130151702681\"><img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231130151723394.png\" class title=\"image-20231130151723394\"></p>\n<p>但是如果你加了前缀@ConfigurationProperties(<strong>prefix &#x3D; “person”</strong>)那么它读取的是你在.yaml文件里前缀为person：下的属性名的属性值</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231130151805714.png\" class title=\"image-20231130151805714\">\n\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231130151825782.png\" class title=\"image-20231130151825782\">\n\n\n</li>\n<li><p>profile</p>\n<p>1)profile配置方式</p>\n<ul>\n<li><p>多profile文件方式</p>\n<p>一般来讲结构是这样的</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231130154714615.png\" class title=\"image-20231130154714615\">\n\n<p>我们分别在dev、pro、test里面配置需要的属性</p>\n<p>然后再主要文件<strong>application.properties</strong>里面加上</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">spring.profiles.active=dev/pro/test</span><br><span class=\"line\">这就是启动dev/pro/test配置文件</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>yml多文档方式</p>\n<p>在yml中用—分割即可</p>\n<p>2)profile激活方式</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231130155050196.png\" class title=\"image-20231130155050196\">\n\n<p>在运行位置编辑运行设置找到这两个;</p>\n<p>虚拟机参数:-Dspring.profiles.active&#x3D;pro</p>\n<p>命令行参数:–spring.profiles.active&#x3D;pro</p>\n<p><strong><img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231130155606679.png\" class title=\"image-20231130155606679\"></strong></p>\n</li>\n</ul>\n</li>\n<li><p>内部配置加载顺序</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202194402571.png\" class title=\"image-20231202194402571\">\n</li>\n<li><p>外部配置加载顺序</p>\n</li>\n</ul>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202195819000.png\" class title=\"image-20231202195819000\">\n\n<h2 id=\"3-SpringBoot整合其他框架\"><a href=\"#3-SpringBoot整合其他框架\" class=\"headerlink\" title=\"3.SpringBoot整合其他框架\"></a>3.SpringBoot整合其他框架</h2><h3 id=\"1-SpringBoot整合Junit。\"><a href=\"#1-SpringBoot整合Junit。\" class=\"headerlink\" title=\"(1)SpringBoot整合Junit。\"></a>(1)SpringBoot整合Junit。</h3><img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202200030447.png\" class title=\"image-20231202200030447\">\n\n<p>1.在搭建的com&#x2F;itheima&#x2F;Springboottest&#x2F;下创建类UserService</p>\n<p>并编写以下内容</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202201519254.png\" class title=\"image-20231202201519254\">\n\n<p>这里我们编写了一个名为add()的方法，作用是打印add……</p>\n<p>在test包下的com&#x2F;itheima&#x2F;目录下创建test目录，在test下创建UserServiceTest类作为测试类</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202201650084.png\" class title=\"image-20231202201650084\">\n\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202201659097.png\" class title=\"image-20231202201659097\">\n\n<p>利用@Autowired注入一个类的对象userService</p>\n<p>@Test下创建一个test()函数，通过对象去访问UserService下的add方法即</p>\n<p><strong>userService.add()</strong></p>\n<p>以上注意点有:</p>\n<p>当你的测试路径和的包名和上面主目录的包名一致时,@SpringBootTest(classes &#x3D; SpringbootTestApplication.class)中的classes &#x3D; SpringbootTestApplication.class可以省略不写</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/1.png\" class width=\"1\">\n\n<h3 id=\"2-SpringBoot整合Redis\"><a href=\"#2-SpringBoot整合Redis\" class=\"headerlink\" title=\"(2)SpringBoot整合Redis\"></a>(2)SpringBoot整合Redis</h3><img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202202259105.png\" class title=\"image-20231202202259105\">\n\n<h3 id=\"3-SpringBoot整合mybaits\"><a href=\"#3-SpringBoot整合mybaits\" class=\"headerlink\" title=\"(3)SpringBoot整合mybaits\"></a>(3)SpringBoot整合mybaits</h3><img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202204301365.png\" class title=\"image-20231202204301365\">\n\n<p>按步骤如下排列:</p>\n<p>在主目录domain下创建类User</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202214054020.png\" class title=\"image-20231202214054020\">\n\n<p>并且写好get，set方法最后写上toString()</p>\n<p>在com&#x2F;itheima&#x2F;springbiittestmybaits&#x2F;下创建UserMapper文件</p>\n<p>内容如下</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202214211600.png\" class title=\"image-20231202214211600\">\n\n<p><strong>注意写好@Mpper注解,@Repository注解，@Select(“”)里面写好查询语句(select * from t_user)</strong></p>\n<p>来到test目录下操作</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202214343730.png\" class title=\"image-20231202214343730\">\n\n<p><strong>在测试类中编写如下代码，其中@Autowired注解注入了UserMapper的对象userMapper</strong></p>\n<p><strong>@Test注解中编写了testFindAll()方法来调用对象userMapper中的findAll()方法并打印输出列表list</strong></p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202223054341.png\" class title=\"image-20231202223054341\">\n\n<p>我们的<strong>application.yaml</strong>文件的内容如下</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202214536961.png\" class title=\"image-20231202214536961\">\n\n<h3 id=\"下面来看第二种方法\"><a href=\"#下面来看第二种方法\" class=\"headerlink\" title=\"下面来看第二种方法\"></a>下面来看第二种方法</h3><p>在主目录下创建mapper目录，目录下创建UserXmlMapper接口并编写里面的内容</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202215945150.png\" class title=\"image-20231202215945150\">\n\n<p>在resources目录下创建mapper文件，在里面创建UserMapper.xml文件并且编写如下</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202220056745.png\" class title=\"image-20231202220056745\">\n\n<p><strong>这一步注意:一定要指定namespace的路径(其实是UserMapper的路径)</strong></p>\n<p>在applications.yaml里面编写</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202220208781.png\" class title=\"image-20231202220208781\">\n\n<p>在主要测试类中添加@Autowired注解注入UserXmlMapper的对象userXmlMapper，并且添加对象对应的findAll()方法</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202220322506.png\" class title=\"image-20231202220322506\">\n\n<p>运行测试的结果</p>\n<img src=\"/2023/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/12/04/SpringBoot%E5%AD%A6%E4%B9%A0/image-20231202223058753.png\" class title=\"image-20231202223058753\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<p>&#x3D;</p>\n","categories":[],"tags":[]},{"title":"Hello World","date":"2023-12-04T09:46:55.840Z","path":"2023/12/04/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"","date":"2023-12-04T08:59:28.628Z","path":"2023/12/04/Springboot模块学习2/","content":"<h1 id=\"SpringBoot模块学习-二-—-SpringBoot高级\"><a href=\"#SpringBoot模块学习-二-—-SpringBoot高级\" class=\"headerlink\" title=\"SpringBoot模块学习(二)—-SpringBoot高级\"></a>SpringBoot模块学习(二)—-SpringBoot高级</h1><h2 id=\"1-SpringBoot自动配置\"><a href=\"#1-SpringBoot自动配置\" class=\"headerlink\" title=\"1.SpringBoot自动配置\"></a>1.SpringBoot自动配置</h2><h3 id=\"1-Condition\"><a href=\"#1-Condition\" class=\"headerlink\" title=\"1)Condition\"></a>1)Condition</h3><p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231206145641002.png\" alt=\"image-20231206145641002\"></p>\n<p>以上是Condition的作用</p>\n<h3 id=\"2-切换内置web服务器\"><a href=\"#2-切换内置web服务器\" class=\"headerlink\" title=\"2)切换内置web服务器\"></a>2)切换内置web服务器</h3><p>SpringBoot的web环境中默认使用tomcat作为内置服务器，其实SpringBoot提供了4种内置服务器供我们选择，我们可以很方便进行切换</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231206205702290.png\" alt=\"image-20231206205702290\"></p>\n<p>那么我们如何在这四种服务器之间切换呢？</p>\n<p><strong>只需要在pom.xml文件中引入对应的服务器坐标就可以了</strong></p>\n<p><strong><code>&lt;dependency&gt;</code></strong></p>\n<p><strong><code>&lt;artifactID&gt;spring-boot-starter-tomcat&lt;/artifactID&gt;</code></strong></p>\n<p><strong><code>&lt;groupID&gt;org.springframework.boot&lt;/groupID&gt;</code></strong></p>\n<p><strong><code>&lt;/dependency&gt;</code></strong></p>\n<p><strong>以上是我们的tomcat的坐标</strong></p>\n<p><strong>只需要将tomcat位置替换成jetty就可以了</strong></p>\n<h3 id=\"3-Enable注解\"><a href=\"#3-Enable注解\" class=\"headerlink\" title=\"3)@Enable注解\"></a>3)@Enable注解</h3><p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231206210416016.png\" alt=\"image-20231206210416016\"></p>\n<p>下面我们利用项目来加深一下理解</p>\n<p>创建一个叫springboot-enable的模块和为名springboot-enable-other的模块，第二个模块的作用是提供一些Bean来查询。</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231206211815199.png\" alt=\"image-20231206211815199\"></p>\n<p><strong>以上是第一个项目需要的代码</strong></p>\n<p>第二个项目我们在包下创建</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231206212626748.png\" alt=\"image-20231206212626748\"></p>\n<p>在UserConfig下编写如下代码即可</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231206212647527.png\" alt=\"image-20231206212647527\"></p>\n<p>随后我们在springbootenable模块的pom文件中引入springbootenableother的依赖即可</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231206212737274.png\" alt=\"image-20231206212737274\"></p>\n<p>运行第一个项目报错为正常情况，然后我们来说@Enable注解的作用。</p>\n<p>我们自己写一个EnableUser注解</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231206212930295.png\" alt=\"image-20231206212930295\"></p>\n<p>接下来我们在启动类里面运用上自己写的@EnableUser注解启动</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209131920545.png\" alt=\"image-20231209131920545\"></p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231206213139508.png\" alt=\"image-20231206213139508\"></p>\n<p>成功访问到其他类的Bean！</p>\n<h3 id=\"4-Import注解\"><a href=\"#4-Import注解\" class=\"headerlink\" title=\"4)@Import注解\"></a>4)@Import注解</h3><p>Import注解有4种用法:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">* 1.直接导入Bean:@Import(User.class)Bean名字</span><br><span class=\"line\">* 2.导入配置类:@Import(UserConfig.class)配置类名字</span><br><span class=\"line\">* 3.导入ImportSelector的实现类</span><br><span class=\"line\">* 4.导入ImportBeanDefinitionRegistrar实现类</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-EnableAutoConfiguration注解\"><a href=\"#5-EnableAutoConfiguration注解\" class=\"headerlink\" title=\"5)@EnableAutoConfiguration注解\"></a>5)@EnableAutoConfiguration注解</h3><p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209133911053.png\" alt=\"image-20231209133911053\"></p>\n<h3 id=\"6-自定义stater案例\"><a href=\"#6-自定义stater案例\" class=\"headerlink\" title=\"6)自定义stater案例\"></a>6)自定义stater案例</h3><p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209163725826.png\" alt=\"image-20231209163725826\"></p>\n<h3 id=\"7-SpringBoot监听器\"><a href=\"#7-SpringBoot监听器\" class=\"headerlink\" title=\"7)SpringBoot监听器\"></a>7)SpringBoot监听器</h3><p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209165608666.png\" alt=\"image-20231209165608666\"></p>\n<p><strong>这些监听器，是一些列的接口，我们要使用就要创建实现这些接口的类并实现里面的方法。</strong></p>\n<h2 id=\"2-SpringBoot监控\"><a href=\"#2-SpringBoot监控\" class=\"headerlink\" title=\"2.SpringBoot监控\"></a>2.SpringBoot监控</h2><p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209180436343.png\" alt=\"image-20231209180436343\"></p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209182525637.png\" alt=\"image-20231209182525637\"></p>\n<p>上面的信息当中三个是health信息,一个是info</p>\n<p>这里推荐使用json,cn网站来进行解析:</p>\n<p>得到如下结果</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209182726341.png\" alt=\"image-20231209182726341\"></p>\n<p>我们访问info信息发现是空的，如果想要在info里面添加内容，需要在配置文件中写上以info.开头的属性名称和其对应的属性值,我下面只举一个例子:</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209182911535.png\" alt=\"image-20231209182911535\"></p>\n<p>在配置文件中添加如下内容后重新启动再次进入</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209183000907.png\" alt=\"image-20231209183000907\"></p>\n<p>关于health信息，初次访问只会显示一个内容</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209183119864.png\" alt=\"image-20231209183119864\"></p>\n<p>如果你想开启有关健康方面的所有内容，需要在配置文件中配置上如下内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">management.endpoint.health.show-details=always</span><br></pre></td></tr></table></figure>\n\n<p>即可！</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209183221189.png\" alt=\"image-20231209183221189\"></p>\n<p>如果你想开启所有监控信息全部暴露出来你需要在配置文件中添加:</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209183332240.png\" alt=\"image-20231209183332240\"></p>\n<h3 id=\"2-SpringBoot-监控-Spring-Boot-Admin\"><a href=\"#2-SpringBoot-监控-Spring-Boot-Admin\" class=\"headerlink\" title=\"2)SpringBoot 监控 Spring Boot Admin\"></a>2)SpringBoot 监控 Spring Boot Admin</h3><p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209184045796.png\" alt=\"image-20231209184045796\"></p>\n<p>使用步骤:</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209184206537.png\" alt=\"image-20231209184206537\"></p>\n<h2 id=\"3-SpringBoot项目部署\"><a href=\"#3-SpringBoot项目部署\" class=\"headerlink\" title=\"3.SpringBoot项目部署\"></a>3.SpringBoot项目部署</h2><p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209185754370.png\" alt=\"image-20231209185754370\">利用idea中的maven打包默认打jar包</p>\n<p>可以在目录下用Powershell终端 </p>\n<p>java -jar+ jar包名</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209190150879.png\" alt=\"image-20231209190150879\"></p>\n<p>也可以打war包</p>\n<p>在pom中将打包方式改为war</p>\n<p>然后再启动类中继承一个名为SoringBootServletInitializer的类</p>\n<p>随后在加一个@Override注解</p>\n<p><img src=\"/2023/12/04/Springboot%E6%A8%A1%E5%9D%97%E5%AD%A6%E4%B9%A02/image-20231209190325853.png\" alt=\"image-20231209190325853\"></p>\n<p>将war包放在Tomcat的wabapp下启动Tomcat访问但注意:</p>\n<p>1.目录发生了变化</p>\n<p>2.端口号内置的不在起作用，需要从外置tomcat配置文件中更改</p>\n","categories":[],"tags":[]}]